com.badlogic.gdx.Application -> com.badlogic.gdx.Application:
    int LOG_NONE -> LOG_NONE
    int LOG_DEBUG -> LOG_DEBUG
    int LOG_INFO -> LOG_INFO
    int LOG_ERROR -> LOG_ERROR
    com.badlogic.gdx.ApplicationListener getApplicationListener() -> getApplicationListener
    com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    com.badlogic.gdx.Audio getAudio() -> getAudio
    com.badlogic.gdx.Input getInput() -> getInput
    com.badlogic.gdx.Files getFiles() -> getFiles
    com.badlogic.gdx.Net getNet() -> getNet
    void log(java.lang.String,java.lang.String) -> log
    void log(java.lang.String,java.lang.String,java.lang.Throwable) -> log
    void error(java.lang.String,java.lang.String) -> error
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    void debug(java.lang.String,java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    void setLogLevel(int) -> setLogLevel
    int getLogLevel() -> getLogLevel
    com.badlogic.gdx.Application$ApplicationType getType() -> getType
    int getVersion() -> getVersion
    long getJavaHeap() -> getJavaHeap
    long getNativeHeap() -> getNativeHeap
    com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    void postRunnable(java.lang.Runnable) -> postRunnable
    void exit() -> exit
    void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
com.badlogic.gdx.Application$ApplicationType -> com.badlogic.gdx.Application$ApplicationType:
    com.badlogic.gdx.Application$ApplicationType Android -> Android
    com.badlogic.gdx.Application$ApplicationType Desktop -> Desktop
    com.badlogic.gdx.Application$ApplicationType HeadlessDesktop -> HeadlessDesktop
    com.badlogic.gdx.Application$ApplicationType Applet -> Applet
    com.badlogic.gdx.Application$ApplicationType WebGL -> WebGL
    com.badlogic.gdx.Application$ApplicationType iOS -> iOS
    com.badlogic.gdx.Application$ApplicationType[] $VALUES -> $VALUES
    com.badlogic.gdx.Application$ApplicationType[] values() -> values
    com.badlogic.gdx.Application$ApplicationType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.ApplicationAdapter -> com.badlogic.gdx.ApplicationAdapter:
    void create() -> create
    void resize(int,int) -> resize
    void render() -> render
    void pause() -> pause
    void resume() -> resume
    void dispose() -> dispose
com.badlogic.gdx.ApplicationListener -> com.badlogic.gdx.ApplicationListener:
    void create() -> create
    void resize(int,int) -> resize
    void render() -> render
    void pause() -> pause
    void resume() -> resume
    void dispose() -> dispose
com.badlogic.gdx.Audio -> com.badlogic.gdx.Audio:
    com.badlogic.gdx.audio.AudioDevice newAudioDevice(int,boolean) -> newAudioDevice
    com.badlogic.gdx.audio.AudioRecorder newAudioRecorder(int,boolean) -> newAudioRecorder
    com.badlogic.gdx.audio.Sound newSound(com.badlogic.gdx.files.FileHandle) -> newSound
    com.badlogic.gdx.audio.Music newMusic(com.badlogic.gdx.files.FileHandle) -> newMusic
com.badlogic.gdx.Files -> com.badlogic.gdx.Files:
    com.badlogic.gdx.files.FileHandle getFileHandle(java.lang.String,com.badlogic.gdx.Files$FileType) -> getFileHandle
    com.badlogic.gdx.files.FileHandle classpath(java.lang.String) -> classpath
    com.badlogic.gdx.files.FileHandle internal(java.lang.String) -> internal
    com.badlogic.gdx.files.FileHandle external(java.lang.String) -> external
    com.badlogic.gdx.files.FileHandle absolute(java.lang.String) -> absolute
    com.badlogic.gdx.files.FileHandle local(java.lang.String) -> local
    java.lang.String getExternalStoragePath() -> getExternalStoragePath
    boolean isExternalStorageAvailable() -> isExternalStorageAvailable
    java.lang.String getLocalStoragePath() -> getLocalStoragePath
    boolean isLocalStorageAvailable() -> isLocalStorageAvailable
com.badlogic.gdx.Files$FileType -> com.badlogic.gdx.Files$FileType:
    com.badlogic.gdx.Files$FileType Classpath -> Classpath
    com.badlogic.gdx.Files$FileType Internal -> Internal
    com.badlogic.gdx.Files$FileType External -> External
    com.badlogic.gdx.Files$FileType Absolute -> Absolute
    com.badlogic.gdx.Files$FileType Local -> Local
    com.badlogic.gdx.Files$FileType[] $VALUES -> $VALUES
    com.badlogic.gdx.Files$FileType[] values() -> values
    com.badlogic.gdx.Files$FileType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Game -> com.badlogic.gdx.Game:
    com.badlogic.gdx.Screen screen -> screen
    void dispose() -> dispose
    void pause() -> pause
    void resume() -> resume
    void render() -> render
    void resize(int,int) -> resize
    void setScreen(com.badlogic.gdx.Screen) -> setScreen
    com.badlogic.gdx.Screen getScreen() -> getScreen
com.badlogic.gdx.Gdx -> com.badlogic.gdx.Gdx:
    com.badlogic.gdx.Application app -> app
    com.badlogic.gdx.Graphics graphics -> graphics
    com.badlogic.gdx.Audio audio -> audio
    com.badlogic.gdx.Input input -> input
    com.badlogic.gdx.Files files -> files
    com.badlogic.gdx.Net net -> net
    com.badlogic.gdx.graphics.GL20 gl -> gl
    com.badlogic.gdx.graphics.GL20 gl20 -> gl20
    com.badlogic.gdx.graphics.GL30 gl30 -> gl30
com.badlogic.gdx.Graphics -> com.badlogic.gdx.Graphics:
    boolean isGL30Available() -> isGL30Available
    com.badlogic.gdx.graphics.GL20 getGL20() -> getGL20
    com.badlogic.gdx.graphics.GL30 getGL30() -> getGL30
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    long getFrameId() -> getFrameId
    float getDeltaTime() -> getDeltaTime
    float getRawDeltaTime() -> getRawDeltaTime
    int getFramesPerSecond() -> getFramesPerSecond
    com.badlogic.gdx.Graphics$GraphicsType getType() -> getType
    float getPpiX() -> getPpiX
    float getPpiY() -> getPpiY
    float getPpcX() -> getPpcX
    float getPpcY() -> getPpcY
    float getDensity() -> getDensity
    boolean supportsDisplayModeChange() -> supportsDisplayModeChange
    com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes() -> getDisplayModes
    com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode() -> getDesktopDisplayMode
    boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode) -> setDisplayMode
    boolean setDisplayMode(int,int,boolean) -> setDisplayMode
    void setTitle(java.lang.String) -> setTitle
    void setVSync(boolean) -> setVSync
    com.badlogic.gdx.Graphics$BufferFormat getBufferFormat() -> getBufferFormat
    boolean supportsExtension(java.lang.String) -> supportsExtension
    void setContinuousRendering(boolean) -> setContinuousRendering
    boolean isContinuousRendering() -> isContinuousRendering
    void requestRendering() -> requestRendering
    boolean isFullscreen() -> isFullscreen
com.badlogic.gdx.Graphics$BufferFormat -> com.badlogic.gdx.Graphics$BufferFormat:
    int r -> r
    int g -> g
    int b -> b
    int a -> a
    int depth -> depth
    int stencil -> stencil
    int samples -> samples
    boolean coverageSampling -> coverageSampling
    java.lang.String toString() -> toString
com.badlogic.gdx.Graphics$DisplayMode -> com.badlogic.gdx.Graphics$DisplayMode:
    int width -> width
    int height -> height
    int refreshRate -> refreshRate
    int bitsPerPixel -> bitsPerPixel
    java.lang.String toString() -> toString
com.badlogic.gdx.Graphics$GraphicsType -> com.badlogic.gdx.Graphics$GraphicsType:
    com.badlogic.gdx.Graphics$GraphicsType AndroidGL -> AndroidGL
    com.badlogic.gdx.Graphics$GraphicsType LWJGL -> LWJGL
    com.badlogic.gdx.Graphics$GraphicsType Angle -> Angle
    com.badlogic.gdx.Graphics$GraphicsType WebGL -> WebGL
    com.badlogic.gdx.Graphics$GraphicsType iOSGL -> iOSGL
    com.badlogic.gdx.Graphics$GraphicsType JGLFW -> JGLFW
    com.badlogic.gdx.Graphics$GraphicsType Mock -> Mock
    com.badlogic.gdx.Graphics$GraphicsType[] $VALUES -> $VALUES
    com.badlogic.gdx.Graphics$GraphicsType[] values() -> values
    com.badlogic.gdx.Graphics$GraphicsType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Input -> com.badlogic.gdx.Input:
    float getAccelerometerX() -> getAccelerometerX
    float getAccelerometerY() -> getAccelerometerY
    float getAccelerometerZ() -> getAccelerometerZ
    int getX() -> getX
    int getX(int) -> getX
    int getDeltaX() -> getDeltaX
    int getDeltaX(int) -> getDeltaX
    int getY() -> getY
    int getY(int) -> getY
    int getDeltaY() -> getDeltaY
    int getDeltaY(int) -> getDeltaY
    boolean isTouched() -> isTouched
    boolean justTouched() -> justTouched
    boolean isTouched(int) -> isTouched
    boolean isButtonPressed(int) -> isButtonPressed
    boolean isKeyPressed(int) -> isKeyPressed
    boolean isKeyJustPressed(int) -> isKeyJustPressed
    void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String,java.lang.String) -> getTextInput
    void setOnscreenKeyboardVisible(boolean) -> setOnscreenKeyboardVisible
    void vibrate(int) -> vibrate
    void vibrate(long[],int) -> vibrate
    void cancelVibrate() -> cancelVibrate
    float getAzimuth() -> getAzimuth
    float getPitch() -> getPitch
    float getRoll() -> getRoll
    void getRotationMatrix(float[]) -> getRotationMatrix
    long getCurrentEventTime() -> getCurrentEventTime
    void setCatchBackKey(boolean) -> setCatchBackKey
    boolean isCatchBackKey() -> isCatchBackKey
    void setCatchMenuKey(boolean) -> setCatchMenuKey
    void setInputProcessor(com.badlogic.gdx.InputProcessor) -> setInputProcessor
    com.badlogic.gdx.InputProcessor getInputProcessor() -> getInputProcessor
    boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral) -> isPeripheralAvailable
    int getRotation() -> getRotation
    com.badlogic.gdx.Input$Orientation getNativeOrientation() -> getNativeOrientation
    void setCursorCatched(boolean) -> setCursorCatched
    boolean isCursorCatched() -> isCursorCatched
    void setCursorPosition(int,int) -> setCursorPosition
    void setCursorImage(com.badlogic.gdx.graphics.Pixmap,int,int) -> setCursorImage
com.badlogic.gdx.Input$Buttons -> com.badlogic.gdx.Input$Buttons:
    int LEFT -> LEFT
    int RIGHT -> RIGHT
    int MIDDLE -> MIDDLE
    int BACK -> BACK
    int FORWARD -> FORWARD
com.badlogic.gdx.Input$Keys -> com.badlogic.gdx.Input$Keys:
    int ANY_KEY -> ANY_KEY
    int NUM_0 -> NUM_0
    int NUM_1 -> NUM_1
    int NUM_2 -> NUM_2
    int NUM_3 -> NUM_3
    int NUM_4 -> NUM_4
    int NUM_5 -> NUM_5
    int NUM_6 -> NUM_6
    int NUM_7 -> NUM_7
    int NUM_8 -> NUM_8
    int NUM_9 -> NUM_9
    int A -> A
    int ALT_LEFT -> ALT_LEFT
    int ALT_RIGHT -> ALT_RIGHT
    int APOSTROPHE -> APOSTROPHE
    int AT -> AT
    int B -> B
    int BACK -> BACK
    int BACKSLASH -> BACKSLASH
    int C -> C
    int CALL -> CALL
    int CAMERA -> CAMERA
    int CLEAR -> CLEAR
    int COMMA -> COMMA
    int D -> D
    int DEL -> DEL
    int BACKSPACE -> BACKSPACE
    int FORWARD_DEL -> FORWARD_DEL
    int DPAD_CENTER -> DPAD_CENTER
    int DPAD_DOWN -> DPAD_DOWN
    int DPAD_LEFT -> DPAD_LEFT
    int DPAD_RIGHT -> DPAD_RIGHT
    int DPAD_UP -> DPAD_UP
    int CENTER -> CENTER
    int DOWN -> DOWN
    int LEFT -> LEFT
    int RIGHT -> RIGHT
    int UP -> UP
    int E -> E
    int ENDCALL -> ENDCALL
    int ENTER -> ENTER
    int ENVELOPE -> ENVELOPE
    int EQUALS -> EQUALS
    int EXPLORER -> EXPLORER
    int F -> F
    int FOCUS -> FOCUS
    int G -> G
    int GRAVE -> GRAVE
    int H -> H
    int HEADSETHOOK -> HEADSETHOOK
    int HOME -> HOME
    int I -> I
    int J -> J
    int K -> K
    int L -> L
    int LEFT_BRACKET -> LEFT_BRACKET
    int M -> M
    int MEDIA_FAST_FORWARD -> MEDIA_FAST_FORWARD
    int MEDIA_NEXT -> MEDIA_NEXT
    int MEDIA_PLAY_PAUSE -> MEDIA_PLAY_PAUSE
    int MEDIA_PREVIOUS -> MEDIA_PREVIOUS
    int MEDIA_REWIND -> MEDIA_REWIND
    int MEDIA_STOP -> MEDIA_STOP
    int MENU -> MENU
    int MINUS -> MINUS
    int MUTE -> MUTE
    int N -> N
    int NOTIFICATION -> NOTIFICATION
    int NUM -> NUM
    int O -> O
    int P -> P
    int PERIOD -> PERIOD
    int PLUS -> PLUS
    int POUND -> POUND
    int POWER -> POWER
    int Q -> Q
    int R -> R
    int RIGHT_BRACKET -> RIGHT_BRACKET
    int S -> S
    int SEARCH -> SEARCH
    int SEMICOLON -> SEMICOLON
    int SHIFT_LEFT -> SHIFT_LEFT
    int SHIFT_RIGHT -> SHIFT_RIGHT
    int SLASH -> SLASH
    int SOFT_LEFT -> SOFT_LEFT
    int SOFT_RIGHT -> SOFT_RIGHT
    int SPACE -> SPACE
    int STAR -> STAR
    int SYM -> SYM
    int T -> T
    int TAB -> TAB
    int U -> U
    int UNKNOWN -> UNKNOWN
    int V -> V
    int VOLUME_DOWN -> VOLUME_DOWN
    int VOLUME_UP -> VOLUME_UP
    int W -> W
    int X -> X
    int Y -> Y
    int Z -> Z
    int META_ALT_LEFT_ON -> META_ALT_LEFT_ON
    int META_ALT_ON -> META_ALT_ON
    int META_ALT_RIGHT_ON -> META_ALT_RIGHT_ON
    int META_SHIFT_LEFT_ON -> META_SHIFT_LEFT_ON
    int META_SHIFT_ON -> META_SHIFT_ON
    int META_SHIFT_RIGHT_ON -> META_SHIFT_RIGHT_ON
    int META_SYM_ON -> META_SYM_ON
    int CONTROL_LEFT -> CONTROL_LEFT
    int CONTROL_RIGHT -> CONTROL_RIGHT
    int ESCAPE -> ESCAPE
    int END -> END
    int INSERT -> INSERT
    int PAGE_UP -> PAGE_UP
    int PAGE_DOWN -> PAGE_DOWN
    int PICTSYMBOLS -> PICTSYMBOLS
    int SWITCH_CHARSET -> SWITCH_CHARSET
    int BUTTON_CIRCLE -> BUTTON_CIRCLE
    int BUTTON_A -> BUTTON_A
    int BUTTON_B -> BUTTON_B
    int BUTTON_C -> BUTTON_C
    int BUTTON_X -> BUTTON_X
    int BUTTON_Y -> BUTTON_Y
    int BUTTON_Z -> BUTTON_Z
    int BUTTON_L1 -> BUTTON_L1
    int BUTTON_R1 -> BUTTON_R1
    int BUTTON_L2 -> BUTTON_L2
    int BUTTON_R2 -> BUTTON_R2
    int BUTTON_THUMBL -> BUTTON_THUMBL
    int BUTTON_THUMBR -> BUTTON_THUMBR
    int BUTTON_START -> BUTTON_START
    int BUTTON_SELECT -> BUTTON_SELECT
    int BUTTON_MODE -> BUTTON_MODE
    int NUMPAD_0 -> NUMPAD_0
    int NUMPAD_1 -> NUMPAD_1
    int NUMPAD_2 -> NUMPAD_2
    int NUMPAD_3 -> NUMPAD_3
    int NUMPAD_4 -> NUMPAD_4
    int NUMPAD_5 -> NUMPAD_5
    int NUMPAD_6 -> NUMPAD_6
    int NUMPAD_7 -> NUMPAD_7
    int NUMPAD_8 -> NUMPAD_8
    int NUMPAD_9 -> NUMPAD_9
    int COLON -> COLON
    int F1 -> F1
    int F2 -> F2
    int F3 -> F3
    int F4 -> F4
    int F5 -> F5
    int F6 -> F6
    int F7 -> F7
    int F8 -> F8
    int F9 -> F9
    int F10 -> F10
    int F11 -> F11
    int F12 -> F12
    com.badlogic.gdx.utils.ObjectIntMap keyNames -> keyNames
    java.lang.String toString(int) -> toString
    int valueOf(java.lang.String) -> valueOf
    void initializeKeyNames() -> initializeKeyNames
com.badlogic.gdx.Input$Orientation -> com.badlogic.gdx.Input$Orientation:
    com.badlogic.gdx.Input$Orientation Landscape -> Landscape
    com.badlogic.gdx.Input$Orientation Portrait -> Portrait
    com.badlogic.gdx.Input$Orientation[] $VALUES -> $VALUES
    com.badlogic.gdx.Input$Orientation[] values() -> values
    com.badlogic.gdx.Input$Orientation valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Input$Peripheral -> com.badlogic.gdx.Input$Peripheral:
    com.badlogic.gdx.Input$Peripheral HardwareKeyboard -> HardwareKeyboard
    com.badlogic.gdx.Input$Peripheral OnscreenKeyboard -> OnscreenKeyboard
    com.badlogic.gdx.Input$Peripheral MultitouchScreen -> MultitouchScreen
    com.badlogic.gdx.Input$Peripheral Accelerometer -> Accelerometer
    com.badlogic.gdx.Input$Peripheral Compass -> Compass
    com.badlogic.gdx.Input$Peripheral Vibrator -> Vibrator
    com.badlogic.gdx.Input$Peripheral[] $VALUES -> $VALUES
    com.badlogic.gdx.Input$Peripheral[] values() -> values
    com.badlogic.gdx.Input$Peripheral valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Input$TextInputListener -> com.badlogic.gdx.Input$TextInputListener:
    void input(java.lang.String) -> input
    void canceled() -> canceled
com.badlogic.gdx.InputAdapter -> com.badlogic.gdx.InputAdapter:
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
    boolean keyTyped(char) -> keyTyped
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchUp(int,int,int,int) -> touchUp
    boolean touchDragged(int,int,int) -> touchDragged
    boolean mouseMoved(int,int) -> mouseMoved
    boolean scrolled(int) -> scrolled
com.badlogic.gdx.InputMultiplexer -> com.badlogic.gdx.InputMultiplexer:
    com.badlogic.gdx.utils.Array processors -> processors
    void addProcessor(int,com.badlogic.gdx.InputProcessor) -> addProcessor
    void removeProcessor(int) -> removeProcessor
    void addProcessor(com.badlogic.gdx.InputProcessor) -> addProcessor
    void removeProcessor(com.badlogic.gdx.InputProcessor) -> removeProcessor
    int size() -> size
    void clear() -> clear
    void setProcessors(com.badlogic.gdx.utils.Array) -> setProcessors
    com.badlogic.gdx.utils.Array getProcessors() -> getProcessors
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
    boolean keyTyped(char) -> keyTyped
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchUp(int,int,int,int) -> touchUp
    boolean touchDragged(int,int,int) -> touchDragged
    boolean mouseMoved(int,int) -> mouseMoved
    boolean scrolled(int) -> scrolled
com.badlogic.gdx.InputProcessor -> com.badlogic.gdx.InputProcessor:
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
    boolean keyTyped(char) -> keyTyped
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchUp(int,int,int,int) -> touchUp
    boolean touchDragged(int,int,int) -> touchDragged
    boolean mouseMoved(int,int) -> mouseMoved
    boolean scrolled(int) -> scrolled
com.badlogic.gdx.InputProcessorQueue -> com.badlogic.gdx.InputProcessorQueue:
    int KEY_DOWN -> KEY_DOWN
    int KEY_UP -> KEY_UP
    int KEY_TYPED -> KEY_TYPED
    int TOUCH_DOWN -> TOUCH_DOWN
    int TOUCH_UP -> TOUCH_UP
    int TOUCH_DRAGGED -> TOUCH_DRAGGED
    int MOUSE_MOVED -> MOUSE_MOVED
    int SCROLLED -> SCROLLED
    com.badlogic.gdx.InputProcessor processor -> processor
    com.badlogic.gdx.utils.IntArray queue -> queue
    com.badlogic.gdx.utils.IntArray processingQueue -> processingQueue
    long currentEventTime -> currentEventTime
    void setProcessor(com.badlogic.gdx.InputProcessor) -> setProcessor
    com.badlogic.gdx.InputProcessor getProcessor() -> getProcessor
    void drain() -> drain
    void queueTime() -> queueTime
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
    boolean keyTyped(char) -> keyTyped
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchUp(int,int,int,int) -> touchUp
    boolean touchDragged(int,int,int) -> touchDragged
    boolean mouseMoved(int,int) -> mouseMoved
    boolean scrolled(int) -> scrolled
    long getCurrentEventTime() -> getCurrentEventTime
com.badlogic.gdx.LifecycleListener -> com.badlogic.gdx.LifecycleListener:
    void pause() -> pause
    void resume() -> resume
    void dispose() -> dispose
com.badlogic.gdx.Net -> com.badlogic.gdx.Net:
    void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener) -> sendHttpRequest
    void cancelHttpRequest(com.badlogic.gdx.Net$HttpRequest) -> cancelHttpRequest
    com.badlogic.gdx.net.ServerSocket newServerSocket(com.badlogic.gdx.Net$Protocol,int,com.badlogic.gdx.net.ServerSocketHints) -> newServerSocket
    com.badlogic.gdx.net.Socket newClientSocket(com.badlogic.gdx.Net$Protocol,java.lang.String,int,com.badlogic.gdx.net.SocketHints) -> newClientSocket
    void openURI(java.lang.String) -> openURI
com.badlogic.gdx.Net$HttpMethods -> com.badlogic.gdx.Net$HttpMethods:
    java.lang.String GET -> GET
    java.lang.String POST -> POST
    java.lang.String PUT -> PUT
    java.lang.String DELETE -> DELETE
com.badlogic.gdx.Net$HttpRequest -> com.badlogic.gdx.Net$HttpRequest:
    java.lang.String httpMethod -> httpMethod
    java.lang.String url -> url
    java.util.Map headers -> headers
    int timeOut -> timeOut
    java.lang.String content -> content
    java.io.InputStream contentStream -> contentStream
    long contentLength -> contentLength
    boolean followRedirects -> followRedirects
    void setUrl(java.lang.String) -> setUrl
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void setContent(java.lang.String) -> setContent
    void setContent(java.io.InputStream,long) -> setContent
    void setTimeOut(int) -> setTimeOut
    void setFollowRedirects(boolean) -> setFollowRedirects
    void setMethod(java.lang.String) -> setMethod
    int getTimeOut() -> getTimeOut
    java.lang.String getMethod() -> getMethod
    java.lang.String getUrl() -> getUrl
    java.lang.String getContent() -> getContent
    java.io.InputStream getContentStream() -> getContentStream
    long getContentLength() -> getContentLength
    java.util.Map getHeaders() -> getHeaders
    boolean getFollowRedirects() -> getFollowRedirects
    void reset() -> reset
com.badlogic.gdx.Net$HttpResponse -> com.badlogic.gdx.Net$HttpResponse:
    byte[] getResult() -> getResult
    java.lang.String getResultAsString() -> getResultAsString
    java.io.InputStream getResultAsStream() -> getResultAsStream
    com.badlogic.gdx.net.HttpStatus getStatus() -> getStatus
    java.lang.String getHeader(java.lang.String) -> getHeader
    java.util.Map getHeaders() -> getHeaders
com.badlogic.gdx.Net$HttpResponseListener -> com.badlogic.gdx.Net$HttpResponseListener:
    void handleHttpResponse(com.badlogic.gdx.Net$HttpResponse) -> handleHttpResponse
    void failed(java.lang.Throwable) -> failed
    void cancelled() -> cancelled
com.badlogic.gdx.Net$Protocol -> com.badlogic.gdx.Net$Protocol:
    com.badlogic.gdx.Net$Protocol TCP -> TCP
    com.badlogic.gdx.Net$Protocol[] $VALUES -> $VALUES
    com.badlogic.gdx.Net$Protocol[] values() -> values
    com.badlogic.gdx.Net$Protocol valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Preferences -> com.badlogic.gdx.Preferences:
    com.badlogic.gdx.Preferences putBoolean(java.lang.String,boolean) -> putBoolean
    com.badlogic.gdx.Preferences putInteger(java.lang.String,int) -> putInteger
    com.badlogic.gdx.Preferences putLong(java.lang.String,long) -> putLong
    com.badlogic.gdx.Preferences putFloat(java.lang.String,float) -> putFloat
    com.badlogic.gdx.Preferences putString(java.lang.String,java.lang.String) -> putString
    com.badlogic.gdx.Preferences put(java.util.Map) -> put
    boolean getBoolean(java.lang.String) -> getBoolean
    int getInteger(java.lang.String) -> getInteger
    long getLong(java.lang.String) -> getLong
    float getFloat(java.lang.String) -> getFloat
    java.lang.String getString(java.lang.String) -> getString
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    int getInteger(java.lang.String,int) -> getInteger
    long getLong(java.lang.String,long) -> getLong
    float getFloat(java.lang.String,float) -> getFloat
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    java.util.Map get() -> get
    boolean contains(java.lang.String) -> contains
    void clear() -> clear
    void remove(java.lang.String) -> remove
    void flush() -> flush
com.badlogic.gdx.Screen -> com.badlogic.gdx.Screen:
    void show() -> show
    void render(float) -> render
    void resize(int,int) -> resize
    void pause() -> pause
    void resume() -> resume
    void hide() -> hide
    void dispose() -> dispose
com.badlogic.gdx.ScreenAdapter -> com.badlogic.gdx.ScreenAdapter:
    void render(float) -> render
    void resize(int,int) -> resize
    void show() -> show
    void hide() -> hide
    void pause() -> pause
    void resume() -> resume
    void dispose() -> dispose
com.badlogic.gdx.Version -> com.badlogic.gdx.Version:
    java.lang.String VERSION -> VERSION
    int MAJOR -> MAJOR
    int MINOR -> MINOR
    int REVISION -> REVISION
    boolean isHigher(int,int,int) -> isHigher
    boolean isHigherEqual(int,int,int) -> isHigherEqual
    boolean isLower(int,int,int) -> isLower
    boolean isLowerEqual(int,int,int) -> isLowerEqual
com.badlogic.gdx.assets.AssetDescriptor -> com.badlogic.gdx.assets.AssetDescriptor:
    java.lang.String fileName -> fileName
    java.lang.Class type -> type
    com.badlogic.gdx.assets.AssetLoaderParameters params -> params
    com.badlogic.gdx.files.FileHandle file -> file
    java.lang.String toString() -> toString
com.badlogic.gdx.assets.AssetErrorListener -> com.badlogic.gdx.assets.AssetErrorListener:
    void error(com.badlogic.gdx.assets.AssetDescriptor,java.lang.Throwable) -> error
com.badlogic.gdx.assets.AssetLoaderParameters -> com.badlogic.gdx.assets.AssetLoaderParameters:
    com.badlogic.gdx.assets.AssetLoaderParameters$LoadedCallback loadedCallback -> loadedCallback
com.badlogic.gdx.assets.AssetLoaderParameters$LoadedCallback -> com.badlogic.gdx.assets.AssetLoaderParameters$LoadedCallback:
    void finishedLoading(com.badlogic.gdx.assets.AssetManager,java.lang.String,java.lang.Class) -> finishedLoading
com.badlogic.gdx.assets.AssetLoadingTask -> com.badlogic.gdx.assets.AssetLoadingTask:
    com.badlogic.gdx.assets.AssetManager manager -> manager
    com.badlogic.gdx.assets.AssetDescriptor assetDesc -> assetDesc
    com.badlogic.gdx.assets.loaders.AssetLoader loader -> loader
    com.badlogic.gdx.utils.async.AsyncExecutor executor -> executor
    long startTime -> startTime
    boolean asyncDone -> asyncDone
    boolean dependenciesLoaded -> dependenciesLoaded
    com.badlogic.gdx.utils.Array dependencies -> dependencies
    com.badlogic.gdx.utils.async.AsyncResult depsFuture -> depsFuture
    com.badlogic.gdx.utils.async.AsyncResult loadFuture -> loadFuture
    java.lang.Object asset -> asset
    int ticks -> ticks
    boolean cancel -> cancel
    java.lang.Void call() -> call
    boolean update() -> update
    void handleSyncLoader() -> handleSyncLoader
    void handleAsyncLoader() -> handleAsyncLoader
    com.badlogic.gdx.files.FileHandle resolve(com.badlogic.gdx.assets.loaders.AssetLoader,com.badlogic.gdx.assets.AssetDescriptor) -> resolve
    java.lang.Object getAsset() -> getAsset
    java.lang.Object call() -> call
com.badlogic.gdx.assets.AssetManager -> com.badlogic.gdx.assets.AssetManager:
    com.badlogic.gdx.utils.ObjectMap assets -> assets
    com.badlogic.gdx.utils.ObjectMap assetTypes -> assetTypes
    com.badlogic.gdx.utils.ObjectMap assetDependencies -> assetDependencies
    com.badlogic.gdx.utils.ObjectSet injected -> injected
    com.badlogic.gdx.utils.ObjectMap loaders -> loaders
    com.badlogic.gdx.utils.Array loadQueue -> loadQueue
    com.badlogic.gdx.utils.async.AsyncExecutor executor -> executor
    java.util.Stack tasks -> tasks
    com.badlogic.gdx.assets.AssetErrorListener listener -> listener
    int loaded -> loaded
    int toLoad -> toLoad
    com.badlogic.gdx.utils.Logger log -> log
    java.lang.Object get(java.lang.String) -> get
    java.lang.Object get(java.lang.String,java.lang.Class) -> get
    com.badlogic.gdx.utils.Array getAll(java.lang.Class,com.badlogic.gdx.utils.Array) -> getAll
    java.lang.Object get(com.badlogic.gdx.assets.AssetDescriptor) -> get
    void unload(java.lang.String) -> unload
    boolean containsAsset(java.lang.Object) -> containsAsset
    java.lang.String getAssetFileName(java.lang.Object) -> getAssetFileName
    boolean isLoaded(java.lang.String) -> isLoaded
    boolean isLoaded(java.lang.String,java.lang.Class) -> isLoaded
    com.badlogic.gdx.assets.loaders.AssetLoader getLoader(java.lang.Class) -> getLoader
    com.badlogic.gdx.assets.loaders.AssetLoader getLoader(java.lang.Class,java.lang.String) -> getLoader
    void load(java.lang.String,java.lang.Class) -> load
    void load(java.lang.String,java.lang.Class,com.badlogic.gdx.assets.AssetLoaderParameters) -> load
    void load(com.badlogic.gdx.assets.AssetDescriptor) -> load
    boolean update() -> update
    boolean update(int) -> update
    void finishLoading() -> finishLoading
    void injectDependencies(java.lang.String,com.badlogic.gdx.utils.Array) -> injectDependencies
    void injectDependency(java.lang.String,com.badlogic.gdx.assets.AssetDescriptor) -> injectDependency
    void nextTask() -> nextTask
    void addTask(com.badlogic.gdx.assets.AssetDescriptor) -> addTask
    void addAsset(java.lang.String,java.lang.Class,java.lang.Object) -> addAsset
    boolean updateTask() -> updateTask
    void incrementRefCountedDependencies(java.lang.String) -> incrementRefCountedDependencies
    void handleTaskError(java.lang.Throwable) -> handleTaskError
    void setLoader(java.lang.Class,com.badlogic.gdx.assets.loaders.AssetLoader) -> setLoader
    void setLoader(java.lang.Class,java.lang.String,com.badlogic.gdx.assets.loaders.AssetLoader) -> setLoader
    int getLoadedAssets() -> getLoadedAssets
    int getQueuedAssets() -> getQueuedAssets
    float getProgress() -> getProgress
    void setErrorListener(com.badlogic.gdx.assets.AssetErrorListener) -> setErrorListener
    void dispose() -> dispose
    void clear() -> clear
    com.badlogic.gdx.utils.Logger getLogger() -> getLogger
    void setLogger(com.badlogic.gdx.utils.Logger) -> setLogger
    int getReferenceCount(java.lang.String) -> getReferenceCount
    void setReferenceCount(java.lang.String,int) -> setReferenceCount
    java.lang.String getDiagnostics() -> getDiagnostics
    com.badlogic.gdx.utils.Array getAssetNames() -> getAssetNames
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String) -> getDependencies
    java.lang.Class getAssetType(java.lang.String) -> getAssetType
com.badlogic.gdx.assets.RefCountedContainer -> com.badlogic.gdx.assets.RefCountedContainer:
    java.lang.Object object -> object
    int refCount -> refCount
    void incRefCount() -> incRefCount
    void decRefCount() -> decRefCount
    int getRefCount() -> getRefCount
    void setRefCount(int) -> setRefCount
    java.lang.Object getObject(java.lang.Class) -> getObject
    void setObject(java.lang.Object) -> setObject
com.badlogic.gdx.assets.loaders.AssetLoader -> com.badlogic.gdx.assets.loaders.AssetLoader:
    com.badlogic.gdx.assets.loaders.FileHandleResolver resolver -> resolver
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> resolve
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.AsynchronousAssetLoader -> com.badlogic.gdx.assets.loaders.AsynchronousAssetLoader:
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
com.badlogic.gdx.assets.loaders.BitmapFontLoader -> com.badlogic.gdx.assets.loaders.BitmapFontLoader:
    com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData data -> data
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter) -> getDependencies
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter) -> loadAsync
    com.badlogic.gdx.graphics.g2d.BitmapFont loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter) -> loadSync
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter -> com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter:
    boolean flip -> flip
    boolean genMipMaps -> genMipMaps
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> minFilter
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> magFilter
    com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData bitmapFontData -> bitmapFontData
    java.lang.String atlasName -> atlasName
com.badlogic.gdx.assets.loaders.CubemapLoader -> com.badlogic.gdx.assets.loaders.CubemapLoader:
    com.badlogic.gdx.assets.loaders.CubemapLoader$CubemapLoaderInfo info -> info
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.CubemapLoader$CubemapParameter) -> loadAsync
    com.badlogic.gdx.graphics.Cubemap loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.CubemapLoader$CubemapParameter) -> loadSync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.CubemapLoader$CubemapParameter) -> getDependencies
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.CubemapLoader$CubemapLoaderInfo -> com.badlogic.gdx.assets.loaders.CubemapLoader$CubemapLoaderInfo:
    java.lang.String filename -> filename
    com.badlogic.gdx.graphics.CubemapData data -> data
    com.badlogic.gdx.graphics.Cubemap cubemap -> cubemap
com.badlogic.gdx.assets.loaders.CubemapLoader$CubemapParameter -> com.badlogic.gdx.assets.loaders.CubemapLoader$CubemapParameter:
    com.badlogic.gdx.graphics.Pixmap$Format format -> format
    com.badlogic.gdx.graphics.Cubemap cubemap -> cubemap
    com.badlogic.gdx.graphics.CubemapData cubemapData -> cubemapData
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> minFilter
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> magFilter
    com.badlogic.gdx.graphics.Texture$TextureWrap wrapU -> wrapU
    com.badlogic.gdx.graphics.Texture$TextureWrap wrapV -> wrapV
com.badlogic.gdx.assets.loaders.FileHandleResolver -> com.badlogic.gdx.assets.loaders.FileHandleResolver:
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> resolve
com.badlogic.gdx.assets.loaders.I18NBundleLoader -> com.badlogic.gdx.assets.loaders.I18NBundleLoader:
    com.badlogic.gdx.utils.I18NBundle bundle -> bundle
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.I18NBundleLoader$I18NBundleParameter) -> loadAsync
    com.badlogic.gdx.utils.I18NBundle loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.I18NBundleLoader$I18NBundleParameter) -> loadSync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.I18NBundleLoader$I18NBundleParameter) -> getDependencies
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.I18NBundleLoader$I18NBundleParameter -> com.badlogic.gdx.assets.loaders.I18NBundleLoader$I18NBundleParameter:
    java.util.Locale locale -> locale
    java.lang.String encoding -> encoding
com.badlogic.gdx.assets.loaders.ModelLoader -> com.badlogic.gdx.assets.loaders.ModelLoader:
    com.badlogic.gdx.utils.Array items -> items
    com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters defaultParameters -> defaultParameters
    com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters) -> loadModelData
    com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle) -> loadModelData
    com.badlogic.gdx.graphics.g3d.Model loadModel(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.utils.TextureProvider,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters) -> loadModel
    com.badlogic.gdx.graphics.g3d.Model loadModel(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters) -> loadModel
    com.badlogic.gdx.graphics.g3d.Model loadModel(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.utils.TextureProvider) -> loadModel
    com.badlogic.gdx.graphics.g3d.Model loadModel(com.badlogic.gdx.files.FileHandle) -> loadModel
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters) -> getDependencies
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters) -> loadAsync
    com.badlogic.gdx.graphics.g3d.Model loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters) -> loadSync
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters -> com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters:
    com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter textureParameter -> textureParameter
com.badlogic.gdx.assets.loaders.MusicLoader -> com.badlogic.gdx.assets.loaders.MusicLoader:
    com.badlogic.gdx.audio.Music music -> music
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter) -> loadAsync
    com.badlogic.gdx.audio.Music loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter) -> loadSync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter) -> getDependencies
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter -> com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter:
com.badlogic.gdx.assets.loaders.ParticleEffectLoader -> com.badlogic.gdx.assets.loaders.ParticleEffectLoader:
    com.badlogic.gdx.graphics.g2d.ParticleEffect load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ParticleEffectLoader$ParticleEffectParameter) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ParticleEffectLoader$ParticleEffectParameter) -> getDependencies
    java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.ParticleEffectLoader$ParticleEffectParameter -> com.badlogic.gdx.assets.loaders.ParticleEffectLoader$ParticleEffectParameter:
    java.lang.String atlasFile -> atlasFile
    java.lang.String atlasPrefix -> atlasPrefix
    com.badlogic.gdx.files.FileHandle imagesDir -> imagesDir
com.badlogic.gdx.assets.loaders.PixmapLoader -> com.badlogic.gdx.assets.loaders.PixmapLoader:
    com.badlogic.gdx.graphics.Pixmap pixmap -> pixmap
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter) -> loadAsync
    com.badlogic.gdx.graphics.Pixmap loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter) -> loadSync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter) -> getDependencies
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter -> com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter:
com.badlogic.gdx.assets.loaders.SkinLoader -> com.badlogic.gdx.assets.loaders.SkinLoader:
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter) -> getDependencies
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter) -> loadAsync
    com.badlogic.gdx.scenes.scene2d.ui.Skin loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter) -> loadSync
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter -> com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter:
    java.lang.String textureAtlasPath -> textureAtlasPath
    com.badlogic.gdx.utils.ObjectMap resources -> resources
com.badlogic.gdx.assets.loaders.SoundLoader -> com.badlogic.gdx.assets.loaders.SoundLoader:
    com.badlogic.gdx.audio.Sound sound -> sound
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter) -> loadAsync
    com.badlogic.gdx.audio.Sound loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter) -> loadSync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter) -> getDependencies
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter -> com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter:
com.badlogic.gdx.assets.loaders.SynchronousAssetLoader -> com.badlogic.gdx.assets.loaders.SynchronousAssetLoader:
    java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> load
com.badlogic.gdx.assets.loaders.TextureAtlasLoader -> com.badlogic.gdx.assets.loaders.TextureAtlasLoader:
    com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData data -> data
    com.badlogic.gdx.graphics.g2d.TextureAtlas load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter) -> getDependencies
    java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter -> com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter:
    boolean flip -> flip
com.badlogic.gdx.assets.loaders.TextureLoader -> com.badlogic.gdx.assets.loaders.TextureLoader:
    com.badlogic.gdx.assets.loaders.TextureLoader$TextureLoaderInfo info -> info
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter) -> loadAsync
    com.badlogic.gdx.graphics.Texture loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter) -> loadSync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter) -> getDependencies
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.TextureLoader$TextureLoaderInfo -> com.badlogic.gdx.assets.loaders.TextureLoader$TextureLoaderInfo:
    java.lang.String filename -> filename
    com.badlogic.gdx.graphics.TextureData data -> data
    com.badlogic.gdx.graphics.Texture texture -> texture
com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter -> com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter:
    com.badlogic.gdx.graphics.Pixmap$Format format -> format
    boolean genMipMaps -> genMipMaps
    com.badlogic.gdx.graphics.Texture texture -> texture
    com.badlogic.gdx.graphics.TextureData textureData -> textureData
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> minFilter
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> magFilter
    com.badlogic.gdx.graphics.Texture$TextureWrap wrapU -> wrapU
    com.badlogic.gdx.graphics.Texture$TextureWrap wrapV -> wrapV
com.badlogic.gdx.assets.loaders.resolvers.AbsoluteFileHandleResolver -> com.badlogic.gdx.assets.loaders.resolvers.AbsoluteFileHandleResolver:
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> resolve
com.badlogic.gdx.assets.loaders.resolvers.ExternalFileHandleResolver -> com.badlogic.gdx.assets.loaders.resolvers.ExternalFileHandleResolver:
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> resolve
com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver -> com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver:
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> resolve
com.badlogic.gdx.assets.loaders.resolvers.LocalFileHandleResolver -> com.badlogic.gdx.assets.loaders.resolvers.LocalFileHandleResolver:
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> resolve
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver -> com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver:
    com.badlogic.gdx.assets.loaders.FileHandleResolver baseResolver -> baseResolver
    com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution[] descriptors -> descriptors
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> resolve
    java.lang.String resolve(com.badlogic.gdx.files.FileHandle,java.lang.String) -> resolve
    com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution choose(com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution[]) -> choose
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution -> com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution:
    int portraitWidth -> portraitWidth
    int portraitHeight -> portraitHeight
    java.lang.String folder -> folder
com.badlogic.gdx.audio.AudioDevice -> com.badlogic.gdx.audio.AudioDevice:
    boolean isMono() -> isMono
    void writeSamples(short[],int,int) -> writeSamples
    void writeSamples(float[],int,int) -> writeSamples
    int getLatency() -> getLatency
    void dispose() -> dispose
    void setVolume(float) -> setVolume
com.badlogic.gdx.audio.AudioRecorder -> com.badlogic.gdx.audio.AudioRecorder:
    void read(short[],int,int) -> read
    void dispose() -> dispose
com.badlogic.gdx.audio.Music -> com.badlogic.gdx.audio.Music:
    void play() -> play
    void pause() -> pause
    void stop() -> stop
    boolean isPlaying() -> isPlaying
    void setLooping(boolean) -> setLooping
    boolean isLooping() -> isLooping
    void setVolume(float) -> setVolume
    float getVolume() -> getVolume
    void setPan(float,float) -> setPan
    void setPosition(float) -> setPosition
    float getPosition() -> getPosition
    void dispose() -> dispose
    void setOnCompletionListener(com.badlogic.gdx.audio.Music$OnCompletionListener) -> setOnCompletionListener
com.badlogic.gdx.audio.Music$OnCompletionListener -> com.badlogic.gdx.audio.Music$OnCompletionListener:
    void onCompletion(com.badlogic.gdx.audio.Music) -> onCompletion
com.badlogic.gdx.audio.Sound -> com.badlogic.gdx.audio.Sound:
    long play() -> play
    long play(float) -> play
    long play(float,float,float) -> play
    long loop() -> loop
    long loop(float) -> loop
    long loop(float,float,float) -> loop
    void stop() -> stop
    void pause() -> pause
    void resume() -> resume
    void dispose() -> dispose
    void stop(long) -> stop
    void pause(long) -> pause
    void resume(long) -> resume
    void setLooping(long,boolean) -> setLooping
    void setPitch(long,float) -> setPitch
    void setVolume(long,float) -> setVolume
    void setPan(long,float,float) -> setPan
    void setPriority(long,int) -> setPriority
com.badlogic.gdx.backends.android.AndroidApplication -> com.badlogic.gdx.backends.android.AndroidApplication:
    com.badlogic.gdx.backends.android.AndroidGraphics graphics -> graphics
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    com.badlogic.gdx.backends.android.AndroidFiles files -> files
    com.badlogic.gdx.backends.android.AndroidNet net -> net
    com.badlogic.gdx.ApplicationListener listener -> listener
    android.os.Handler handler -> handler
    boolean firstResume -> firstResume
    com.badlogic.gdx.utils.Array runnables -> runnables
    com.badlogic.gdx.utils.Array executedRunnables -> executedRunnables
    com.badlogic.gdx.utils.Array lifecycleListeners -> lifecycleListeners
    com.badlogic.gdx.utils.Array androidEventListeners -> androidEventListeners
    int logLevel -> logLevel
    boolean useImmersiveMode -> useImmersiveMode
    boolean hideStatusBar -> hideStatusBar
    int wasFocusChanged -> wasFocusChanged
    boolean isWaitingForAudio -> isWaitingForAudio
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard -> clipboard
    void initialize(com.badlogic.gdx.ApplicationListener) -> initialize
    void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initialize
    android.view.View initializeForView(com.badlogic.gdx.ApplicationListener) -> initializeForView
    android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initializeForView
    void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean) -> init
    android.widget.FrameLayout$LayoutParams createLayoutParams() -> createLayoutParams
    void createWakeLock(boolean) -> createWakeLock
    void hideStatusBar(boolean) -> hideStatusBar
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void useImmersiveMode(boolean) -> useImmersiveMode
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    com.badlogic.gdx.ApplicationListener getApplicationListener() -> getApplicationListener
    com.badlogic.gdx.Audio getAudio() -> getAudio
    com.badlogic.gdx.Files getFiles() -> getFiles
    com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    com.badlogic.gdx.backends.android.AndroidInput getInput() -> getInput
    com.badlogic.gdx.Net getNet() -> getNet
    com.badlogic.gdx.Application$ApplicationType getType() -> getType
    int getVersion() -> getVersion
    long getJavaHeap() -> getJavaHeap
    long getNativeHeap() -> getNativeHeap
    com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    void postRunnable(java.lang.Runnable) -> postRunnable
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void exit() -> exit
    void debug(java.lang.String,java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    void log(java.lang.String,java.lang.String) -> log
    void log(java.lang.String,java.lang.String,java.lang.Throwable) -> log
    void error(java.lang.String,java.lang.String) -> error
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    void setLogLevel(int) -> setLogLevel
    int getLogLevel() -> getLogLevel
    void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void addAndroidEventListener(com.badlogic.gdx.backends.android.AndroidEventListener) -> addAndroidEventListener
    void removeAndroidEventListener(com.badlogic.gdx.backends.android.AndroidEventListener) -> removeAndroidEventListener
    android.content.Context getContext() -> getContext
    com.badlogic.gdx.utils.Array getRunnables() -> getRunnables
    com.badlogic.gdx.utils.Array getExecutedRunnables() -> getExecutedRunnables
    com.badlogic.gdx.utils.Array getLifecycleListeners() -> getLifecycleListeners
    android.view.Window getApplicationWindow() -> getApplicationWindow
    android.os.Handler getHandler() -> getHandler
    com.badlogic.gdx.Input getInput() -> getInput
com.badlogic.gdx.backends.android.AndroidApplication$1 -> com.badlogic.gdx.backends.android.AndroidApplication$1:
    com.badlogic.gdx.backends.android.AndroidApplication this$0 -> this$0
    void resume() -> resume
    void pause() -> pause
    void dispose() -> dispose
com.badlogic.gdx.backends.android.AndroidApplication$2 -> com.badlogic.gdx.backends.android.AndroidApplication$2:
    com.badlogic.gdx.backends.android.AndroidApplication this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidApplicationBase -> com.badlogic.gdx.backends.android.AndroidApplicationBase:
    int MINIMUM_SDK -> MINIMUM_SDK
    android.content.Context getContext() -> getContext
    com.badlogic.gdx.utils.Array getRunnables() -> getRunnables
    com.badlogic.gdx.utils.Array getExecutedRunnables() -> getExecutedRunnables
    void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    void startActivity(android.content.Intent) -> startActivity
    com.badlogic.gdx.backends.android.AndroidInput getInput() -> getInput
    com.badlogic.gdx.utils.Array getLifecycleListeners() -> getLifecycleListeners
    android.view.Window getApplicationWindow() -> getApplicationWindow
    android.view.WindowManager getWindowManager() -> getWindowManager
    void useImmersiveMode(boolean) -> useImmersiveMode
    android.os.Handler getHandler() -> getHandler
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration -> com.badlogic.gdx.backends.android.AndroidApplicationConfiguration:
    int r -> r
    int g -> g
    int b -> b
    int a -> a
    int depth -> depth
    int stencil -> stencil
    int numSamples -> numSamples
    boolean useAccelerometer -> useAccelerometer
    boolean useCompass -> useCompass
    int touchSleepTime -> touchSleepTime
    boolean useWakelock -> useWakelock
    boolean hideStatusBar -> hideStatusBar
    boolean disableAudio -> disableAudio
    int maxSimultaneousSounds -> maxSimultaneousSounds
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    boolean getTouchEventsForLiveWallpaper -> getTouchEventsForLiveWallpaper
    boolean useImmersiveMode -> useImmersiveMode
    boolean useGLSurfaceView20API18 -> useGLSurfaceView20API18
com.badlogic.gdx.backends.android.AndroidAudio -> com.badlogic.gdx.backends.android.AndroidAudio:
    android.media.SoundPool soundPool -> soundPool
    android.media.AudioManager manager -> manager
    java.util.List musics -> musics
    void pause() -> pause
    void resume() -> resume
    com.badlogic.gdx.audio.AudioDevice newAudioDevice(int,boolean) -> newAudioDevice
    com.badlogic.gdx.audio.Music newMusic(com.badlogic.gdx.files.FileHandle) -> newMusic
    com.badlogic.gdx.audio.Sound newSound(com.badlogic.gdx.files.FileHandle) -> newSound
    com.badlogic.gdx.audio.AudioRecorder newAudioRecorder(int,boolean) -> newAudioRecorder
    void dispose() -> dispose
com.badlogic.gdx.backends.android.AndroidAudioDevice -> com.badlogic.gdx.backends.android.AndroidAudioDevice:
    android.media.AudioTrack track -> track
    short[] buffer -> buffer
    boolean isMono -> isMono
    int latency -> latency
    void dispose() -> dispose
    boolean isMono() -> isMono
    void writeSamples(short[],int,int) -> writeSamples
    void writeSamples(float[],int,int) -> writeSamples
    int getLatency() -> getLatency
    void setVolume(float) -> setVolume
com.badlogic.gdx.backends.android.AndroidAudioRecorder -> com.badlogic.gdx.backends.android.AndroidAudioRecorder:
    android.media.AudioRecord recorder -> recorder
    void dispose() -> dispose
    void read(short[],int,int) -> read
com.badlogic.gdx.backends.android.AndroidClipboard -> com.badlogic.gdx.backends.android.AndroidClipboard:
    android.content.Context context -> context
    java.lang.String getContents() -> getContents
    void setContents(java.lang.String) -> setContents
com.badlogic.gdx.backends.android.AndroidClipboard$1 -> com.badlogic.gdx.backends.android.AndroidClipboard$1:
    java.lang.String val$contents -> val$contents
    com.badlogic.gdx.backends.android.AndroidClipboard this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidDaydream -> com.badlogic.gdx.backends.android.AndroidDaydream:
    com.badlogic.gdx.backends.android.AndroidGraphics graphics -> graphics
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    com.badlogic.gdx.backends.android.AndroidFiles files -> files
    com.badlogic.gdx.backends.android.AndroidNet net -> net
    com.badlogic.gdx.ApplicationListener listener -> listener
    android.os.Handler handler -> handler
    boolean firstResume -> firstResume
    com.badlogic.gdx.utils.Array runnables -> runnables
    com.badlogic.gdx.utils.Array executedRunnables -> executedRunnables
    com.badlogic.gdx.utils.Array lifecycleListeners -> lifecycleListeners
    int logLevel -> logLevel
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard -> clipboard
    void initialize(com.badlogic.gdx.ApplicationListener) -> initialize
    void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initialize
    android.view.View initializeForView(com.badlogic.gdx.ApplicationListener) -> initializeForView
    android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initializeForView
    void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean) -> init
    android.widget.FrameLayout$LayoutParams createLayoutParams() -> createLayoutParams
    void createWakeLock(boolean) -> createWakeLock
    void hideStatusBar(com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> hideStatusBar
    void onDreamingStopped() -> onDreamingStopped
    void onDreamingStarted() -> onDreamingStarted
    void onDetachedFromWindow() -> onDetachedFromWindow
    com.badlogic.gdx.ApplicationListener getApplicationListener() -> getApplicationListener
    com.badlogic.gdx.Audio getAudio() -> getAudio
    com.badlogic.gdx.Files getFiles() -> getFiles
    com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    com.badlogic.gdx.backends.android.AndroidInput getInput() -> getInput
    com.badlogic.gdx.Net getNet() -> getNet
    com.badlogic.gdx.Application$ApplicationType getType() -> getType
    int getVersion() -> getVersion
    long getJavaHeap() -> getJavaHeap
    long getNativeHeap() -> getNativeHeap
    com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    void postRunnable(java.lang.Runnable) -> postRunnable
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void exit() -> exit
    void debug(java.lang.String,java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    void log(java.lang.String,java.lang.String) -> log
    void log(java.lang.String,java.lang.String,java.lang.Throwable) -> log
    void error(java.lang.String,java.lang.String) -> error
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    void setLogLevel(int) -> setLogLevel
    int getLogLevel() -> getLogLevel
    void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
    android.content.Context getContext() -> getContext
    com.badlogic.gdx.utils.Array getRunnables() -> getRunnables
    com.badlogic.gdx.utils.Array getExecutedRunnables() -> getExecutedRunnables
    com.badlogic.gdx.utils.Array getLifecycleListeners() -> getLifecycleListeners
    android.view.Window getApplicationWindow() -> getApplicationWindow
    android.os.Handler getHandler() -> getHandler
    void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    void useImmersiveMode(boolean) -> useImmersiveMode
    com.badlogic.gdx.Input getInput() -> getInput
com.badlogic.gdx.backends.android.AndroidDaydream$1 -> com.badlogic.gdx.backends.android.AndroidDaydream$1:
    com.badlogic.gdx.backends.android.AndroidDaydream this$0 -> this$0
    void resume() -> resume
    void pause() -> pause
    void dispose() -> dispose
com.badlogic.gdx.backends.android.AndroidDaydream$2 -> com.badlogic.gdx.backends.android.AndroidDaydream$2:
    com.badlogic.gdx.backends.android.AndroidDaydream this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidEventListener -> com.badlogic.gdx.backends.android.AndroidEventListener:
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
com.badlogic.gdx.backends.android.AndroidFileHandle -> com.badlogic.gdx.backends.android.AndroidFileHandle:
    android.content.res.AssetManager assets -> assets
    com.badlogic.gdx.files.FileHandle child(java.lang.String) -> child
    com.badlogic.gdx.files.FileHandle sibling(java.lang.String) -> sibling
    com.badlogic.gdx.files.FileHandle parent() -> parent
    java.io.InputStream read() -> read
    com.badlogic.gdx.files.FileHandle[] list() -> list
    com.badlogic.gdx.files.FileHandle[] list(java.io.FileFilter) -> list
    com.badlogic.gdx.files.FileHandle[] list(java.io.FilenameFilter) -> list
    com.badlogic.gdx.files.FileHandle[] list(java.lang.String) -> list
    boolean isDirectory() -> isDirectory
    boolean exists() -> exists
    long length() -> length
    long lastModified() -> lastModified
    java.io.File file() -> file
com.badlogic.gdx.backends.android.AndroidFiles -> com.badlogic.gdx.backends.android.AndroidFiles:
    java.lang.String sdcard -> sdcard
    java.lang.String localpath -> localpath
    android.content.res.AssetManager assets -> assets
    com.badlogic.gdx.files.FileHandle getFileHandle(java.lang.String,com.badlogic.gdx.Files$FileType) -> getFileHandle
    com.badlogic.gdx.files.FileHandle classpath(java.lang.String) -> classpath
    com.badlogic.gdx.files.FileHandle internal(java.lang.String) -> internal
    com.badlogic.gdx.files.FileHandle external(java.lang.String) -> external
    com.badlogic.gdx.files.FileHandle absolute(java.lang.String) -> absolute
    com.badlogic.gdx.files.FileHandle local(java.lang.String) -> local
    java.lang.String getExternalStoragePath() -> getExternalStoragePath
    boolean isExternalStorageAvailable() -> isExternalStorageAvailable
    java.lang.String getLocalStoragePath() -> getLocalStoragePath
    boolean isLocalStorageAvailable() -> isLocalStorageAvailable
com.badlogic.gdx.backends.android.AndroidFragmentApplication -> com.badlogic.gdx.backends.android.AndroidFragmentApplication:
    com.badlogic.gdx.backends.android.AndroidGraphics graphics -> graphics
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    com.badlogic.gdx.backends.android.AndroidFiles files -> files
    com.badlogic.gdx.backends.android.AndroidNet net -> net
    com.badlogic.gdx.ApplicationListener listener -> listener
    android.os.Handler handler -> handler
    boolean firstResume -> firstResume
    com.badlogic.gdx.utils.Array runnables -> runnables
    com.badlogic.gdx.utils.Array executedRunnables -> executedRunnables
    com.badlogic.gdx.utils.Array lifecycleListeners -> lifecycleListeners
    com.badlogic.gdx.utils.Array androidEventListeners -> androidEventListeners
    int logLevel -> logLevel
    com.badlogic.gdx.backends.android.AndroidFragmentApplication$Callbacks callbacks -> callbacks
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard -> clipboard
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    android.widget.FrameLayout$LayoutParams createLayoutParams() -> createLayoutParams
    void createWakeLock(boolean) -> createWakeLock
    void useImmersiveMode(boolean) -> useImmersiveMode
    android.view.View initializeForView(com.badlogic.gdx.ApplicationListener) -> initializeForView
    android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initializeForView
    void onPause() -> onPause
    void onResume() -> onResume
    com.badlogic.gdx.ApplicationListener getApplicationListener() -> getApplicationListener
    com.badlogic.gdx.Audio getAudio() -> getAudio
    com.badlogic.gdx.Files getFiles() -> getFiles
    com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    com.badlogic.gdx.backends.android.AndroidInput getInput() -> getInput
    com.badlogic.gdx.Net getNet() -> getNet
    com.badlogic.gdx.Application$ApplicationType getType() -> getType
    int getVersion() -> getVersion
    long getJavaHeap() -> getJavaHeap
    long getNativeHeap() -> getNativeHeap
    com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    void postRunnable(java.lang.Runnable) -> postRunnable
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void exit() -> exit
    void debug(java.lang.String,java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    void log(java.lang.String,java.lang.String) -> log
    void log(java.lang.String,java.lang.String,java.lang.Throwable) -> log
    void error(java.lang.String,java.lang.String) -> error
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    void setLogLevel(int) -> setLogLevel
    int getLogLevel() -> getLogLevel
    void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
    android.content.Context getContext() -> getContext
    com.badlogic.gdx.utils.Array getRunnables() -> getRunnables
    com.badlogic.gdx.utils.Array getExecutedRunnables() -> getExecutedRunnables
    void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    com.badlogic.gdx.utils.Array getLifecycleListeners() -> getLifecycleListeners
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void addAndroidEventListener(com.badlogic.gdx.backends.android.AndroidEventListener) -> addAndroidEventListener
    void removeAndroidEventListener(com.badlogic.gdx.backends.android.AndroidEventListener) -> removeAndroidEventListener
    android.view.Window getApplicationWindow() -> getApplicationWindow
    android.os.Handler getHandler() -> getHandler
    android.view.WindowManager getWindowManager() -> getWindowManager
    com.badlogic.gdx.Input getInput() -> getInput
com.badlogic.gdx.backends.android.AndroidFragmentApplication$1 -> com.badlogic.gdx.backends.android.AndroidFragmentApplication$1:
    com.badlogic.gdx.backends.android.AndroidFragmentApplication this$0 -> this$0
    void resume() -> resume
    void pause() -> pause
    void dispose() -> dispose
com.badlogic.gdx.backends.android.AndroidFragmentApplication$2 -> com.badlogic.gdx.backends.android.AndroidFragmentApplication$2:
    com.badlogic.gdx.backends.android.AndroidFragmentApplication this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidFragmentApplication$Callbacks -> com.badlogic.gdx.backends.android.AndroidFragmentApplication$Callbacks:
    void exit() -> exit
com.badlogic.gdx.backends.android.AndroidGL20 -> com.badlogic.gdx.backends.android.AndroidGL20:
    void init() -> init
    void glActiveTexture(int) -> glActiveTexture
    void glAttachShader(int,int) -> glAttachShader
    void glBindAttribLocation(int,int,java.lang.String) -> glBindAttribLocation
    void glBindBuffer(int,int) -> glBindBuffer
    void glBindFramebuffer(int,int) -> glBindFramebuffer
    void glBindRenderbuffer(int,int) -> glBindRenderbuffer
    void glBindTexture(int,int) -> glBindTexture
    void glBlendColor(float,float,float,float) -> glBlendColor
    void glBlendEquation(int) -> glBlendEquation
    void glBlendEquationSeparate(int,int) -> glBlendEquationSeparate
    void glBlendFunc(int,int) -> glBlendFunc
    void glBlendFuncSeparate(int,int,int,int) -> glBlendFuncSeparate
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    int glCheckFramebufferStatus(int) -> glCheckFramebufferStatus
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearDepthf(float) -> glClearDepthf
    void glClearStencil(int) -> glClearStencil
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glCompileShader(int) -> glCompileShader
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    int glCreateProgram() -> glCreateProgram
    int glCreateShader(int) -> glCreateShader
    void glCullFace(int) -> glCullFace
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glDeleteBuffer(int) -> glDeleteBuffer
    void glDeleteFramebuffers(int,java.nio.IntBuffer) -> glDeleteFramebuffers
    void glDeleteFramebuffer(int) -> glDeleteFramebuffer
    void glDeleteProgram(int) -> glDeleteProgram
    void glDeleteRenderbuffers(int,java.nio.IntBuffer) -> glDeleteRenderbuffers
    void glDeleteRenderbuffer(int) -> glDeleteRenderbuffer
    void glDeleteShader(int) -> glDeleteShader
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDeleteTexture(int) -> glDeleteTexture
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDetachShader(int,int) -> glDetachShader
    void glDisable(int) -> glDisable
    void glDisableVertexAttribArray(int) -> glDisableVertexAttribArray
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glEnable(int) -> glEnable
    void glEnableVertexAttribArray(int) -> glEnableVertexAttribArray
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFramebufferRenderbuffer(int,int,int,int) -> glFramebufferRenderbuffer
    void glFramebufferTexture2D(int,int,int,int,int) -> glFramebufferTexture2D
    void glFrontFace(int) -> glFrontFace
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    int glGenBuffer() -> glGenBuffer
    void glGenerateMipmap(int) -> glGenerateMipmap
    void glGenFramebuffers(int,java.nio.IntBuffer) -> glGenFramebuffers
    int glGenFramebuffer() -> glGenFramebuffer
    void glGenRenderbuffers(int,java.nio.IntBuffer) -> glGenRenderbuffers
    int glGenRenderbuffer() -> glGenRenderbuffer
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    int glGenTexture() -> glGenTexture
    java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveAttrib
    java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveUniform
    void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer) -> glGetAttachedShaders
    int glGetAttribLocation(int,java.lang.String) -> glGetAttribLocation
    void glGetBooleanv(int,java.nio.Buffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    int glGetError() -> glGetError
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer) -> glGetFramebufferAttachmentParameteriv
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    void glGetProgramiv(int,int,java.nio.IntBuffer) -> glGetProgramiv
    java.lang.String glGetProgramInfoLog(int) -> glGetProgramInfoLog
    void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer) -> glGetRenderbufferParameteriv
    void glGetShaderiv(int,int,java.nio.IntBuffer) -> glGetShaderiv
    java.lang.String glGetShaderInfoLog(int) -> glGetShaderInfoLog
    void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer) -> glGetShaderPrecisionFormat
    void glGetShaderSource(int,int,java.nio.Buffer,java.lang.String) -> glGetShaderSource
    java.lang.String glGetString(int) -> glGetString
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    void glGetUniformfv(int,int,java.nio.FloatBuffer) -> glGetUniformfv
    void glGetUniformiv(int,int,java.nio.IntBuffer) -> glGetUniformiv
    int glGetUniformLocation(int,java.lang.String) -> glGetUniformLocation
    void glGetVertexAttribfv(int,int,java.nio.FloatBuffer) -> glGetVertexAttribfv
    void glGetVertexAttribiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribiv
    void glGetVertexAttribPointerv(int,int,java.nio.Buffer) -> glGetVertexAttribPointerv
    void glHint(int,int) -> glHint
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsFramebuffer(int) -> glIsFramebuffer
    boolean glIsProgram(int) -> glIsProgram
    boolean glIsRenderbuffer(int) -> glIsRenderbuffer
    boolean glIsShader(int) -> glIsShader
    boolean glIsTexture(int) -> glIsTexture
    void glLineWidth(float) -> glLineWidth
    void glLinkProgram(int) -> glLinkProgram
    void glPixelStorei(int,int) -> glPixelStorei
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glReleaseShaderCompiler() -> glReleaseShaderCompiler
    void glRenderbufferStorage(int,int,int,int) -> glRenderbufferStorage
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glScissor(int,int,int,int) -> glScissor
    void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int) -> glShaderBinary
    void glShaderSource(int,java.lang.String) -> glShaderSource
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilFuncSeparate(int,int,int,int) -> glStencilFuncSeparate
    void glStencilMask(int) -> glStencilMask
    void glStencilMaskSeparate(int,int) -> glStencilMaskSeparate
    void glStencilOp(int,int,int) -> glStencilOp
    void glStencilOpSeparate(int,int,int,int) -> glStencilOpSeparate
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glUniform1f(int,float) -> glUniform1f
    void glUniform1fv(int,int,java.nio.FloatBuffer) -> glUniform1fv
    void glUniform1fv(int,int,float[],int) -> glUniform1fv
    void glUniform1i(int,int) -> glUniform1i
    void glUniform1iv(int,int,java.nio.IntBuffer) -> glUniform1iv
    void glUniform1iv(int,int,int[],int) -> glUniform1iv
    void glUniform2f(int,float,float) -> glUniform2f
    void glUniform2fv(int,int,java.nio.FloatBuffer) -> glUniform2fv
    void glUniform2fv(int,int,float[],int) -> glUniform2fv
    void glUniform2i(int,int,int) -> glUniform2i
    void glUniform2iv(int,int,java.nio.IntBuffer) -> glUniform2iv
    void glUniform2iv(int,int,int[],int) -> glUniform2iv
    void glUniform3f(int,float,float,float) -> glUniform3f
    void glUniform3fv(int,int,java.nio.FloatBuffer) -> glUniform3fv
    void glUniform3fv(int,int,float[],int) -> glUniform3fv
    void glUniform3i(int,int,int,int) -> glUniform3i
    void glUniform3iv(int,int,java.nio.IntBuffer) -> glUniform3iv
    void glUniform3iv(int,int,int[],int) -> glUniform3iv
    void glUniform4f(int,float,float,float,float) -> glUniform4f
    void glUniform4fv(int,int,java.nio.FloatBuffer) -> glUniform4fv
    void glUniform4fv(int,int,float[],int) -> glUniform4fv
    void glUniform4i(int,int,int,int,int) -> glUniform4i
    void glUniform4iv(int,int,java.nio.IntBuffer) -> glUniform4iv
    void glUniform4iv(int,int,int[],int) -> glUniform4iv
    void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2fv
    void glUniformMatrix2fv(int,int,boolean,float[],int) -> glUniformMatrix2fv
    void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3fv
    void glUniformMatrix3fv(int,int,boolean,float[],int) -> glUniformMatrix3fv
    void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4fv
    void glUniformMatrix4fv(int,int,boolean,float[],int) -> glUniformMatrix4fv
    void glUseProgram(int) -> glUseProgram
    void glValidateProgram(int) -> glValidateProgram
    void glVertexAttrib1f(int,float) -> glVertexAttrib1f
    void glVertexAttrib1fv(int,java.nio.FloatBuffer) -> glVertexAttrib1fv
    void glVertexAttrib2f(int,float,float) -> glVertexAttrib2f
    void glVertexAttrib2fv(int,java.nio.FloatBuffer) -> glVertexAttrib2fv
    void glVertexAttrib3f(int,float,float,float) -> glVertexAttrib3f
    void glVertexAttrib3fv(int,java.nio.FloatBuffer) -> glVertexAttrib3fv
    void glVertexAttrib4f(int,float,float,float,float) -> glVertexAttrib4f
    void glVertexAttrib4fv(int,java.nio.FloatBuffer) -> glVertexAttrib4fv
    void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer) -> glVertexAttribPointer
    void glVertexAttribPointer(int,int,int,boolean,int,int) -> glVertexAttribPointer
    void glViewport(int,int,int,int) -> glViewport
com.badlogic.gdx.backends.android.AndroidGL30 -> com.badlogic.gdx.backends.android.AndroidGL30:
    void glReadBuffer(int) -> glReadBuffer
    void glDrawRangeElements(int,int,int,int,int,java.nio.Buffer) -> glDrawRangeElements
    void glDrawRangeElements(int,int,int,int,int,int) -> glDrawRangeElements
    void glTexImage3D(int,int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage3D
    void glTexImage3D(int,int,int,int,int,int,int,int,int,int) -> glTexImage3D
    void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage3D
    void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,int) -> glTexSubImage3D
    void glCopyTexSubImage3D(int,int,int,int,int,int,int,int,int) -> glCopyTexSubImage3D
    void glGenQueries(int,int[],int) -> glGenQueries
    void glGenQueries(int,java.nio.IntBuffer) -> glGenQueries
    void glDeleteQueries(int,int[],int) -> glDeleteQueries
    void glDeleteQueries(int,java.nio.IntBuffer) -> glDeleteQueries
    boolean glIsQuery(int) -> glIsQuery
    void glBeginQuery(int,int) -> glBeginQuery
    void glEndQuery(int) -> glEndQuery
    void glGetQueryiv(int,int,java.nio.IntBuffer) -> glGetQueryiv
    void glGetQueryObjectuiv(int,int,java.nio.IntBuffer) -> glGetQueryObjectuiv
    boolean glUnmapBuffer(int) -> glUnmapBuffer
    java.nio.Buffer glGetBufferPointerv(int,int) -> glGetBufferPointerv
    void glDrawBuffers(int,java.nio.IntBuffer) -> glDrawBuffers
    void glUniformMatrix2x3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2x3fv
    void glUniformMatrix3x2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3x2fv
    void glUniformMatrix2x4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2x4fv
    void glUniformMatrix4x2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4x2fv
    void glUniformMatrix3x4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3x4fv
    void glUniformMatrix4x3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4x3fv
    void glBlitFramebuffer(int,int,int,int,int,int,int,int,int,int) -> glBlitFramebuffer
    void glRenderbufferStorageMultisample(int,int,int,int,int) -> glRenderbufferStorageMultisample
    void glFramebufferTextureLayer(int,int,int,int,int) -> glFramebufferTextureLayer
    void glFlushMappedBufferRange(int,int,int) -> glFlushMappedBufferRange
    void glBindVertexArray(int) -> glBindVertexArray
    void glDeleteVertexArrays(int,int[],int) -> glDeleteVertexArrays
    void glDeleteVertexArrays(int,java.nio.IntBuffer) -> glDeleteVertexArrays
    void glGenVertexArrays(int,int[],int) -> glGenVertexArrays
    void glGenVertexArrays(int,java.nio.IntBuffer) -> glGenVertexArrays
    boolean glIsVertexArray(int) -> glIsVertexArray
    void glBeginTransformFeedback(int) -> glBeginTransformFeedback
    void glEndTransformFeedback() -> glEndTransformFeedback
    void glBindBufferRange(int,int,int,int,int) -> glBindBufferRange
    void glBindBufferBase(int,int,int) -> glBindBufferBase
    void glTransformFeedbackVaryings(int,java.lang.String[],int) -> glTransformFeedbackVaryings
    void glVertexAttribIPointer(int,int,int,int,int) -> glVertexAttribIPointer
    void glGetVertexAttribIiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribIiv
    void glGetVertexAttribIuiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribIuiv
    void glVertexAttribI4i(int,int,int,int,int) -> glVertexAttribI4i
    void glVertexAttribI4ui(int,int,int,int,int) -> glVertexAttribI4ui
    void glGetUniformuiv(int,int,java.nio.IntBuffer) -> glGetUniformuiv
    int glGetFragDataLocation(int,java.lang.String) -> glGetFragDataLocation
    void glUniform1uiv(int,int,java.nio.IntBuffer) -> glUniform1uiv
    void glUniform3uiv(int,int,java.nio.IntBuffer) -> glUniform3uiv
    void glUniform4uiv(int,int,java.nio.IntBuffer) -> glUniform4uiv
    void glClearBufferiv(int,int,java.nio.IntBuffer) -> glClearBufferiv
    void glClearBufferuiv(int,int,java.nio.IntBuffer) -> glClearBufferuiv
    void glClearBufferfv(int,int,java.nio.FloatBuffer) -> glClearBufferfv
    void glClearBufferfi(int,int,float,int) -> glClearBufferfi
    java.lang.String glGetStringi(int,int) -> glGetStringi
    void glCopyBufferSubData(int,int,int,int,int) -> glCopyBufferSubData
    void glGetUniformIndices(int,java.lang.String[],java.nio.IntBuffer) -> glGetUniformIndices
    void glGetActiveUniformsiv(int,int,java.nio.IntBuffer,int,java.nio.IntBuffer) -> glGetActiveUniformsiv
    int glGetUniformBlockIndex(int,java.lang.String) -> glGetUniformBlockIndex
    void glGetActiveUniformBlockiv(int,int,int,java.nio.IntBuffer) -> glGetActiveUniformBlockiv
    void glGetActiveUniformBlockName(int,int,java.nio.Buffer,java.nio.Buffer) -> glGetActiveUniformBlockName
    java.lang.String glGetActiveUniformBlockName(int,int) -> glGetActiveUniformBlockName
    void glUniformBlockBinding(int,int,int) -> glUniformBlockBinding
    void glDrawArraysInstanced(int,int,int,int) -> glDrawArraysInstanced
    void glDrawElementsInstanced(int,int,int,int,int) -> glDrawElementsInstanced
    void glGetInteger64v(int,java.nio.LongBuffer) -> glGetInteger64v
    void glGetBufferParameteri64v(int,int,java.nio.LongBuffer) -> glGetBufferParameteri64v
    void glGenSamplers(int,int[],int) -> glGenSamplers
    void glGenSamplers(int,java.nio.IntBuffer) -> glGenSamplers
    void glDeleteSamplers(int,int[],int) -> glDeleteSamplers
    void glDeleteSamplers(int,java.nio.IntBuffer) -> glDeleteSamplers
    boolean glIsSampler(int) -> glIsSampler
    void glBindSampler(int,int) -> glBindSampler
    void glSamplerParameteri(int,int,int) -> glSamplerParameteri
    void glSamplerParameteriv(int,int,java.nio.IntBuffer) -> glSamplerParameteriv
    void glSamplerParameterf(int,int,float) -> glSamplerParameterf
    void glSamplerParameterfv(int,int,java.nio.FloatBuffer) -> glSamplerParameterfv
    void glGetSamplerParameteriv(int,int,java.nio.IntBuffer) -> glGetSamplerParameteriv
    void glGetSamplerParameterfv(int,int,java.nio.FloatBuffer) -> glGetSamplerParameterfv
    void glVertexAttribDivisor(int,int) -> glVertexAttribDivisor
    void glBindTransformFeedback(int,int) -> glBindTransformFeedback
    void glDeleteTransformFeedbacks(int,int[],int) -> glDeleteTransformFeedbacks
    void glDeleteTransformFeedbacks(int,java.nio.IntBuffer) -> glDeleteTransformFeedbacks
    void glGenTransformFeedbacks(int,int[],int) -> glGenTransformFeedbacks
    void glGenTransformFeedbacks(int,java.nio.IntBuffer) -> glGenTransformFeedbacks
    boolean glIsTransformFeedback(int) -> glIsTransformFeedback
    void glPauseTransformFeedback() -> glPauseTransformFeedback
    void glResumeTransformFeedback() -> glResumeTransformFeedback
    void glProgramParameteri(int,int,int) -> glProgramParameteri
    void glInvalidateFramebuffer(int,int,java.nio.IntBuffer) -> glInvalidateFramebuffer
    void glInvalidateSubFramebuffer(int,int,java.nio.IntBuffer,int,int,int,int) -> glInvalidateSubFramebuffer
com.badlogic.gdx.backends.android.AndroidGraphics -> com.badlogic.gdx.backends.android.AndroidGraphics:
    java.lang.String LOG_TAG -> LOG_TAG
    boolean enforceContinuousRendering -> enforceContinuousRendering
    android.view.View view -> view
    int width -> width
    int height -> height
    com.badlogic.gdx.backends.android.AndroidApplicationBase app -> app
    com.badlogic.gdx.graphics.GL20 gl20 -> gl20
    com.badlogic.gdx.graphics.GL30 gl30 -> gl30
    javax.microedition.khronos.egl.EGLContext eglContext -> eglContext
    java.lang.String extensions -> extensions
    long lastFrameTime -> lastFrameTime
    float deltaTime -> deltaTime
    long frameStart -> frameStart
    long frameId -> frameId
    int frames -> frames
    int fps -> fps
    com.badlogic.gdx.math.WindowedMean mean -> mean
    boolean created -> created
    boolean running -> running
    boolean pause -> pause
    boolean resume -> resume
    boolean destroy -> destroy
    float ppiX -> ppiX
    float ppiY -> ppiY
    float ppcX -> ppcX
    float ppcY -> ppcY
    float density -> density
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> config
    com.badlogic.gdx.Graphics$BufferFormat bufferFormat -> bufferFormat
    boolean isContinuous -> isContinuous
    int[] value -> value
    java.lang.Object synch -> synch
    void preserveEGLContextOnPause() -> preserveEGLContextOnPause
    android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy) -> createGLSurfaceView
    void onPauseGLSurfaceView() -> onPauseGLSurfaceView
    void onResumeGLSurfaceView() -> onResumeGLSurfaceView
    android.opengl.GLSurfaceView$EGLConfigChooser getEglConfigChooser() -> getEglConfigChooser
    void updatePpi() -> updatePpi
    boolean checkGL20() -> checkGL20
    com.badlogic.gdx.graphics.GL20 getGL20() -> getGL20
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    void setupGL(javax.microedition.khronos.opengles.GL10) -> setupGL
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void logConfig(javax.microedition.khronos.egl.EGLConfig) -> logConfig
    int getAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> getAttrib
    void resume() -> resume
    void pause() -> pause
    void destroy() -> destroy
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    long getFrameId() -> getFrameId
    float getDeltaTime() -> getDeltaTime
    float getRawDeltaTime() -> getRawDeltaTime
    com.badlogic.gdx.Graphics$GraphicsType getType() -> getType
    int getFramesPerSecond() -> getFramesPerSecond
    void clearManagedCaches() -> clearManagedCaches
    void logManagedCachesStatus() -> logManagedCachesStatus
    android.view.View getView() -> getView
    float getPpiX() -> getPpiX
    float getPpiY() -> getPpiY
    float getPpcX() -> getPpcX
    float getPpcY() -> getPpcY
    float getDensity() -> getDensity
    boolean supportsDisplayModeChange() -> supportsDisplayModeChange
    boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode) -> setDisplayMode
    com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes() -> getDisplayModes
    boolean setDisplayMode(int,int,boolean) -> setDisplayMode
    void setTitle(java.lang.String) -> setTitle
    com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode() -> getDesktopDisplayMode
    com.badlogic.gdx.Graphics$BufferFormat getBufferFormat() -> getBufferFormat
    void setVSync(boolean) -> setVSync
    boolean supportsExtension(java.lang.String) -> supportsExtension
    void setContinuousRendering(boolean) -> setContinuousRendering
    boolean isContinuousRendering() -> isContinuousRendering
    void requestRendering() -> requestRendering
    boolean isFullscreen() -> isFullscreen
    boolean isGL30Available() -> isGL30Available
    com.badlogic.gdx.graphics.GL30 getGL30() -> getGL30
com.badlogic.gdx.backends.android.AndroidGraphics$AndroidDisplayMode -> com.badlogic.gdx.backends.android.AndroidGraphics$AndroidDisplayMode:
    com.badlogic.gdx.backends.android.AndroidGraphics this$0 -> this$0
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper -> com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper:
    android.view.SurfaceHolder getSurfaceHolder() -> getSurfaceHolder
    android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy) -> createGLSurfaceView
    void onDestroyGLSurfaceView() -> onDestroyGLSurfaceView
    void resume() -> resume
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    void logManagedCachesStatus() -> logManagedCachesStatus
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$1 -> com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$1:
    com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper this$0 -> this$0
    android.view.SurfaceHolder getHolder() -> getHolder
    void onDestroy() -> onDestroy
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$2 -> com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$2:
    com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper this$0 -> this$0
    android.view.SurfaceHolder getHolder() -> getHolder
    void onDestroy() -> onDestroy
com.badlogic.gdx.backends.android.AndroidInput -> com.badlogic.gdx.backends.android.AndroidInput:
    com.badlogic.gdx.utils.Pool usedKeyEvents -> usedKeyEvents
    com.badlogic.gdx.utils.Pool usedTouchEvents -> usedTouchEvents
    int NUM_TOUCHES -> NUM_TOUCHES
    java.util.ArrayList keyListeners -> keyListeners
    java.util.ArrayList keyEvents -> keyEvents
    java.util.ArrayList touchEvents -> touchEvents
    int[] touchX -> touchX
    int[] touchY -> touchY
    int[] deltaX -> deltaX
    int[] deltaY -> deltaY
    boolean[] touched -> touched
    int[] button -> button
    int[] realId -> realId
    boolean hasMultitouch -> hasMultitouch
    int keyCount -> keyCount
    boolean[] keys -> keys
    boolean keyJustPressed -> keyJustPressed
    boolean[] justPressedKeys -> justPressedKeys
    android.hardware.SensorManager manager -> manager
    boolean accelerometerAvailable -> accelerometerAvailable
    float[] accelerometerValues -> accelerometerValues
    java.lang.String text -> text
    com.badlogic.gdx.Input$TextInputListener textListener -> textListener
    android.os.Handler handle -> handle
    com.badlogic.gdx.Application app -> app
    android.content.Context context -> context
    com.badlogic.gdx.backends.android.AndroidTouchHandler touchHandler -> touchHandler
    int sleepTime -> sleepTime
    boolean catchBack -> catchBack
    boolean catchMenu -> catchMenu
    android.os.Vibrator vibrator -> vibrator
    boolean compassAvailable -> compassAvailable
    boolean keyboardAvailable -> keyboardAvailable
    float[] magneticFieldValues -> magneticFieldValues
    float azimuth -> azimuth
    float pitch -> pitch
    float roll -> roll
    float inclination -> inclination
    boolean justTouched -> justTouched
    com.badlogic.gdx.InputProcessor processor -> processor
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> config
    com.badlogic.gdx.Input$Orientation nativeOrientation -> nativeOrientation
    long currentEventTimeStamp -> currentEventTimeStamp
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard onscreenKeyboard -> onscreenKeyboard
    android.hardware.SensorEventListener accelerometerListener -> accelerometerListener
    android.hardware.SensorEventListener compassListener -> compassListener
    boolean requestFocus -> requestFocus
    float[] R -> R
    float[] orientation -> orientation
    float getAccelerometerX() -> getAccelerometerX
    float getAccelerometerY() -> getAccelerometerY
    float getAccelerometerZ() -> getAccelerometerZ
    void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String,java.lang.String) -> getTextInput
    int getX() -> getX
    int getY() -> getY
    int getX(int) -> getX
    int getY(int) -> getY
    boolean isTouched(int) -> isTouched
    boolean isKeyPressed(int) -> isKeyPressed
    boolean isKeyJustPressed(int) -> isKeyJustPressed
    boolean isTouched() -> isTouched
    void setInputProcessor(com.badlogic.gdx.InputProcessor) -> setInputProcessor
    void processEvents() -> processEvents
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void onTap(int,int) -> onTap
    void onDrop(int,int) -> onDrop
    void postTap(int,int) -> postTap
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    void setOnscreenKeyboardVisible(boolean) -> setOnscreenKeyboardVisible
    void setCatchBackKey(boolean) -> setCatchBackKey
    boolean isCatchBackKey() -> isCatchBackKey
    void setCatchMenuKey(boolean) -> setCatchMenuKey
    void vibrate(int) -> vibrate
    void vibrate(long[],int) -> vibrate
    void cancelVibrate() -> cancelVibrate
    boolean justTouched() -> justTouched
    boolean isButtonPressed(int) -> isButtonPressed
    void updateOrientation() -> updateOrientation
    void getRotationMatrix(float[]) -> getRotationMatrix
    float getAzimuth() -> getAzimuth
    float getPitch() -> getPitch
    float getRoll() -> getRoll
    void registerSensorListeners() -> registerSensorListeners
    void unregisterSensorListeners() -> unregisterSensorListeners
    com.badlogic.gdx.InputProcessor getInputProcessor() -> getInputProcessor
    boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral) -> isPeripheralAvailable
    int getFreePointerIndex() -> getFreePointerIndex
    int[] resize(int[]) -> resize
    boolean[] resize(boolean[]) -> resize
    int lookUpPointerIndex(int) -> lookUpPointerIndex
    int getRotation() -> getRotation
    com.badlogic.gdx.Input$Orientation getNativeOrientation() -> getNativeOrientation
    void setCursorCatched(boolean) -> setCursorCatched
    boolean isCursorCatched() -> isCursorCatched
    int getDeltaX() -> getDeltaX
    int getDeltaX(int) -> getDeltaX
    int getDeltaY() -> getDeltaY
    int getDeltaY(int) -> getDeltaY
    void setCursorPosition(int,int) -> setCursorPosition
    void setCursorImage(com.badlogic.gdx.graphics.Pixmap,int,int) -> setCursorImage
    long getCurrentEventTime() -> getCurrentEventTime
    void addKeyListener(android.view.View$OnKeyListener) -> addKeyListener
    void onPause() -> onPause
    void onResume() -> onResume
com.badlogic.gdx.backends.android.AndroidInput$1 -> com.badlogic.gdx.backends.android.AndroidInput$1:
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    com.badlogic.gdx.backends.android.AndroidInput$KeyEvent newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.backends.android.AndroidInput$2 -> com.badlogic.gdx.backends.android.AndroidInput$2:
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    com.badlogic.gdx.backends.android.AndroidInput$TouchEvent newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.backends.android.AndroidInput$3 -> com.badlogic.gdx.backends.android.AndroidInput$3:
    java.lang.String val$title -> val$title
    java.lang.String val$hint -> val$hint
    java.lang.String val$text -> val$text
    com.badlogic.gdx.Input$TextInputListener val$listener -> val$listener
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$3$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$1:
    android.widget.EditText val$input -> val$input
    com.badlogic.gdx.backends.android.AndroidInput$3 this$1 -> this$1
    void onClick(android.content.DialogInterface,int) -> onClick
com.badlogic.gdx.backends.android.AndroidInput$3$1$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$1$1:
    com.badlogic.gdx.backends.android.AndroidInput$3$1 this$2 -> this$2
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$3$2 -> com.badlogic.gdx.backends.android.AndroidInput$3$2:
    com.badlogic.gdx.backends.android.AndroidInput$3 this$1 -> this$1
    void onClick(android.content.DialogInterface,int) -> onClick
com.badlogic.gdx.backends.android.AndroidInput$3$2$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$2$1:
    com.badlogic.gdx.backends.android.AndroidInput$3$2 this$2 -> this$2
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$3$3 -> com.badlogic.gdx.backends.android.AndroidInput$3$3:
    com.badlogic.gdx.backends.android.AndroidInput$3 this$1 -> this$1
    void onCancel(android.content.DialogInterface) -> onCancel
com.badlogic.gdx.backends.android.AndroidInput$3$3$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$3$1:
    com.badlogic.gdx.backends.android.AndroidInput$3$3 this$2 -> this$2
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$4 -> com.badlogic.gdx.backends.android.AndroidInput$4:
    boolean val$visible -> val$visible
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$KeyEvent -> com.badlogic.gdx.backends.android.AndroidInput$KeyEvent:
    int KEY_DOWN -> KEY_DOWN
    int KEY_UP -> KEY_UP
    int KEY_TYPED -> KEY_TYPED
    long timeStamp -> timeStamp
    int type -> type
    int keyCode -> keyCode
    char keyChar -> keyChar
com.badlogic.gdx.backends.android.AndroidInput$SensorListener -> com.badlogic.gdx.backends.android.AndroidInput$SensorListener:
    float[] accelerometerValues -> accelerometerValues
    float[] magneticFieldValues -> magneticFieldValues
    com.badlogic.gdx.Input$Orientation nativeOrientation -> nativeOrientation
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
com.badlogic.gdx.backends.android.AndroidInput$TouchEvent -> com.badlogic.gdx.backends.android.AndroidInput$TouchEvent:
    int TOUCH_DOWN -> TOUCH_DOWN
    int TOUCH_UP -> TOUCH_UP
    int TOUCH_DRAGGED -> TOUCH_DRAGGED
    int TOUCH_SCROLLED -> TOUCH_SCROLLED
    int TOUCH_MOVED -> TOUCH_MOVED
    long timeStamp -> timeStamp
    int type -> type
    int x -> x
    int y -> y
    int scrollAmount -> scrollAmount
    int button -> button
    int pointer -> pointer
com.badlogic.gdx.backends.android.AndroidInputFactory -> com.badlogic.gdx.backends.android.AndroidInputFactory:
    com.badlogic.gdx.backends.android.AndroidInput newAndroidInput(com.badlogic.gdx.Application,android.content.Context,java.lang.Object,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> newAndroidInput
com.badlogic.gdx.backends.android.AndroidInputThreePlus -> com.badlogic.gdx.backends.android.AndroidInputThreePlus:
    java.util.ArrayList genericMotionListeners -> genericMotionListeners
    com.badlogic.gdx.backends.android.AndroidMouseHandler mouseHandler -> mouseHandler
    boolean onGenericMotion(android.view.View,android.view.MotionEvent) -> onGenericMotion
    void addGenericMotionListener(android.view.View$OnGenericMotionListener) -> addGenericMotionListener
com.badlogic.gdx.backends.android.AndroidLiveWallpaper -> com.badlogic.gdx.backends.android.AndroidLiveWallpaper:
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService service -> service
    com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper graphics -> graphics
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    com.badlogic.gdx.backends.android.AndroidFiles files -> files
    com.badlogic.gdx.backends.android.AndroidNet net -> net
    com.badlogic.gdx.ApplicationListener listener -> listener
    boolean firstResume -> firstResume
    com.badlogic.gdx.utils.Array runnables -> runnables
    com.badlogic.gdx.utils.Array executedRunnables -> executedRunnables
    com.badlogic.gdx.utils.Array lifecycleListeners -> lifecycleListeners
    int logLevel -> logLevel
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard -> clipboard
    void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initialize
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    android.view.WindowManager getWindowManager() -> getWindowManager
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService getService() -> getService
    com.badlogic.gdx.ApplicationListener getApplicationListener() -> getApplicationListener
    void postRunnable(java.lang.Runnable) -> postRunnable
    com.badlogic.gdx.Audio getAudio() -> getAudio
    com.badlogic.gdx.Files getFiles() -> getFiles
    com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    com.badlogic.gdx.backends.android.AndroidInput getInput() -> getInput
    com.badlogic.gdx.Net getNet() -> getNet
    com.badlogic.gdx.Application$ApplicationType getType() -> getType
    int getVersion() -> getVersion
    long getJavaHeap() -> getJavaHeap
    long getNativeHeap() -> getNativeHeap
    com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    void debug(java.lang.String,java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    void log(java.lang.String,java.lang.String) -> log
    void log(java.lang.String,java.lang.String,java.lang.Throwable) -> log
    void error(java.lang.String,java.lang.String) -> error
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    void setLogLevel(int) -> setLogLevel
    int getLogLevel() -> getLogLevel
    void exit() -> exit
    void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
    android.content.Context getContext() -> getContext
    com.badlogic.gdx.utils.Array getRunnables() -> getRunnables
    com.badlogic.gdx.utils.Array getExecutedRunnables() -> getExecutedRunnables
    com.badlogic.gdx.utils.Array getLifecycleListeners() -> getLifecycleListeners
    void startActivity(android.content.Intent) -> startActivity
    android.view.Window getApplicationWindow() -> getApplicationWindow
    android.os.Handler getHandler() -> getHandler
    void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    void useImmersiveMode(boolean) -> useImmersiveMode
    com.badlogic.gdx.Input getInput() -> getInput
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService -> com.badlogic.gdx.backends.android.AndroidLiveWallpaperService:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    com.badlogic.gdx.backends.android.AndroidLiveWallpaper app -> app
    android.view.SurfaceHolder$Callback view -> view
    int viewFormat -> viewFormat
    int viewWidth -> viewWidth
    int viewHeight -> viewHeight
    int engines -> engines
    int visibleEngines -> visibleEngines
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine linkedEngine -> linkedEngine
    boolean isPreviewNotified -> isPreviewNotified
    boolean notifiedPreviewState -> notifiedPreviewState
    int[] sync -> sync
    void setLinkedEngine(com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine) -> setLinkedEngine
    void onCreate() -> onCreate
    android.service.wallpaper.WallpaperService$Engine onCreateEngine() -> onCreateEngine
    void onCreateApplication() -> onCreateApplication
    void initialize(com.badlogic.gdx.ApplicationListener) -> initialize
    void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initialize
    android.view.SurfaceHolder getSurfaceHolder() -> getSurfaceHolder
    void onDeepPauseApplication() -> onDeepPauseApplication
    void onDestroy() -> onDestroy
    void finalize() -> finalize
    com.badlogic.gdx.backends.android.AndroidLiveWallpaper getLiveWallpaper() -> getLiveWallpaper
    android.view.WindowManager getWindowManager() -> getWindowManager
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine -> com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine:
    boolean engineIsVisible -> engineIsVisible
    int engineFormat -> engineFormat
    int engineWidth -> engineWidth
    int engineHeight -> engineHeight
    boolean offsetsConsumed -> offsetsConsumed
    float xOffset -> xOffset
    float yOffset -> yOffset
    float xOffsetStep -> xOffsetStep
    float yOffsetStep -> yOffsetStep
    int xPixelOffset -> xPixelOffset
    int yPixelOffset -> yPixelOffset
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService this$0 -> this$0
    void onCreate(android.view.SurfaceHolder) -> onCreate
    void onSurfaceCreated(android.view.SurfaceHolder) -> onSurfaceCreated
    void onSurfaceChanged(android.view.SurfaceHolder,int,int,int) -> onSurfaceChanged
    void notifySurfaceChanged(int,int,int,boolean) -> notifySurfaceChanged
    void onVisibilityChanged(boolean) -> onVisibilityChanged
    void notifyVisibilityChanged(boolean) -> notifyVisibilityChanged
    void onResume() -> onResume
    void onPause() -> onPause
    void onSurfaceDestroyed(android.view.SurfaceHolder) -> onSurfaceDestroyed
    void onDestroy() -> onDestroy
    android.os.Bundle onCommand(java.lang.String,int,int,int,android.os.Bundle,boolean) -> onCommand
    void onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onOffsetsChanged(float,float,float,float,int,int) -> onOffsetsChanged
    void notifyOffsetsChanged() -> notifyOffsetsChanged
    void notifyPreviewState() -> notifyPreviewState
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$1 -> com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$1:
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine this$1 -> this$1
    void run() -> run
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$2 -> com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$2:
    boolean val$currentPreviewState -> val$currentPreviewState
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine this$1 -> this$1
    void run() -> run
com.badlogic.gdx.backends.android.AndroidMouseHandler -> com.badlogic.gdx.backends.android.AndroidMouseHandler:
    int deltaX -> deltaX
    int deltaY -> deltaY
    boolean onGenericMotion(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput) -> onGenericMotion
    void logAction(int) -> logAction
    void postTouchEvent(com.badlogic.gdx.backends.android.AndroidInput,int,int,int,int,long) -> postTouchEvent
com.badlogic.gdx.backends.android.AndroidMultiTouchHandler -> com.badlogic.gdx.backends.android.AndroidMultiTouchHandler:
    void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput) -> onTouch
    void logAction(int,int) -> logAction
    int toGdxButton(int) -> toGdxButton
    void postTouchEvent(com.badlogic.gdx.backends.android.AndroidInput,int,int,int,int,int,long) -> postTouchEvent
    boolean supportsMultitouch(android.content.Context) -> supportsMultitouch
com.badlogic.gdx.backends.android.AndroidMusic -> com.badlogic.gdx.backends.android.AndroidMusic:
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    android.media.MediaPlayer player -> player
    boolean isPrepared -> isPrepared
    boolean wasPlaying -> wasPlaying
    float volume -> volume
    com.badlogic.gdx.audio.Music$OnCompletionListener onCompletionListener -> onCompletionListener
    void dispose() -> dispose
    boolean isLooping() -> isLooping
    boolean isPlaying() -> isPlaying
    void pause() -> pause
    void play() -> play
    void setLooping(boolean) -> setLooping
    void setVolume(float) -> setVolume
    float getVolume() -> getVolume
    void setPan(float,float) -> setPan
    void stop() -> stop
    void setPosition(float) -> setPosition
    float getPosition() -> getPosition
    float getDuration() -> getDuration
    void setOnCompletionListener(com.badlogic.gdx.audio.Music$OnCompletionListener) -> setOnCompletionListener
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.badlogic.gdx.backends.android.AndroidMusic$1 -> com.badlogic.gdx.backends.android.AndroidMusic$1:
    com.badlogic.gdx.backends.android.AndroidMusic this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidNet -> com.badlogic.gdx.backends.android.AndroidNet:
    com.badlogic.gdx.backends.android.AndroidApplicationBase app -> app
    com.badlogic.gdx.net.NetJavaImpl netJavaImpl -> netJavaImpl
    void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener) -> sendHttpRequest
    void cancelHttpRequest(com.badlogic.gdx.Net$HttpRequest) -> cancelHttpRequest
    com.badlogic.gdx.net.ServerSocket newServerSocket(com.badlogic.gdx.Net$Protocol,int,com.badlogic.gdx.net.ServerSocketHints) -> newServerSocket
    com.badlogic.gdx.net.Socket newClientSocket(com.badlogic.gdx.Net$Protocol,java.lang.String,int,com.badlogic.gdx.net.SocketHints) -> newClientSocket
    void openURI(java.lang.String) -> openURI
com.badlogic.gdx.backends.android.AndroidNet$1 -> com.badlogic.gdx.backends.android.AndroidNet$1:
    android.net.Uri val$uri -> val$uri
    com.badlogic.gdx.backends.android.AndroidNet this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard:
    android.content.Context context -> context
    android.os.Handler handler -> handler
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    android.app.Dialog dialog -> dialog
    android.widget.TextView textView -> textView
    android.app.Dialog createDialog() -> createDialog
    android.widget.TextView createView(android.content.Context) -> createView
    void setVisible(boolean) -> setVisible
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$1 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$1:
    android.text.Editable editable -> editable
    boolean getDefaultEditable() -> getDefaultEditable
    android.text.Editable getEditableText() -> getEditableText
    android.text.method.MovementMethod getDefaultMovementMethod() -> getDefaultMovementMethod
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2:
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$1 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$1:
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2 this$1 -> this$1
    void run() -> run
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$2 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$2:
    int[] screenloc -> screenloc
    int keyboardHeight -> keyboardHeight
    boolean keyboardShowing -> keyboardShowing
    android.view.View val$content -> val$content
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2 this$1 -> this$1
    boolean onPreDraw() -> onPreDraw
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable:
    char charAt(int) -> charAt
    int length() -> length
    java.lang.CharSequence subSequence(int,int) -> subSequence
    void getChars(int,int,char[],int) -> getChars
    void removeSpan(java.lang.Object) -> removeSpan
    void setSpan(java.lang.Object,int,int,int) -> setSpan
    int getSpanEnd(java.lang.Object) -> getSpanEnd
    int getSpanFlags(java.lang.Object) -> getSpanFlags
    int getSpanStart(java.lang.Object) -> getSpanStart
    java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    android.text.Editable append(java.lang.CharSequence) -> append
    android.text.Editable append(char) -> append
    android.text.Editable append(java.lang.CharSequence,int,int) -> append
    void clear() -> clear
    void clearSpans() -> clearSpans
    android.text.Editable delete(int,int) -> delete
    android.text.InputFilter[] getFilters() -> getFilters
    android.text.Editable insert(int,java.lang.CharSequence) -> insert
    android.text.Editable insert(int,java.lang.CharSequence,int,int) -> insert
    android.text.Editable replace(int,int,java.lang.CharSequence) -> replace
    android.text.Editable replace(int,int,java.lang.CharSequence,int,int) -> replace
    void setFilters(android.text.InputFilter[]) -> setFilters
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
com.badlogic.gdx.backends.android.AndroidPreferences -> com.badlogic.gdx.backends.android.AndroidPreferences:
    android.content.SharedPreferences sharedPrefs -> sharedPrefs
    android.content.SharedPreferences$Editor editor -> editor
    com.badlogic.gdx.Preferences putBoolean(java.lang.String,boolean) -> putBoolean
    com.badlogic.gdx.Preferences putInteger(java.lang.String,int) -> putInteger
    com.badlogic.gdx.Preferences putLong(java.lang.String,long) -> putLong
    com.badlogic.gdx.Preferences putFloat(java.lang.String,float) -> putFloat
    com.badlogic.gdx.Preferences putString(java.lang.String,java.lang.String) -> putString
    com.badlogic.gdx.Preferences put(java.util.Map) -> put
    boolean getBoolean(java.lang.String) -> getBoolean
    int getInteger(java.lang.String) -> getInteger
    long getLong(java.lang.String) -> getLong
    float getFloat(java.lang.String) -> getFloat
    java.lang.String getString(java.lang.String) -> getString
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    int getInteger(java.lang.String,int) -> getInteger
    long getLong(java.lang.String,long) -> getLong
    float getFloat(java.lang.String,float) -> getFloat
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    java.util.Map get() -> get
    boolean contains(java.lang.String) -> contains
    void clear() -> clear
    void flush() -> flush
    void remove(java.lang.String) -> remove
    void edit() -> edit
com.badlogic.gdx.backends.android.AndroidSound -> com.badlogic.gdx.backends.android.AndroidSound:
    android.media.SoundPool soundPool -> soundPool
    android.media.AudioManager manager -> manager
    int soundId -> soundId
    com.badlogic.gdx.utils.IntArray streamIds -> streamIds
    void dispose() -> dispose
    long play() -> play
    long play(float) -> play
    void stop() -> stop
    void stop(long) -> stop
    void pause() -> pause
    void pause(long) -> pause
    void resume() -> resume
    void resume(long) -> resume
    void setPitch(long,float) -> setPitch
    void setVolume(long,float) -> setVolume
    long loop() -> loop
    long loop(float) -> loop
    void setLooping(long,boolean) -> setLooping
    void setPan(long,float,float) -> setPan
    long play(float,float,float) -> play
    long loop(float,float,float) -> loop
    void setPriority(long,int) -> setPriority
com.badlogic.gdx.backends.android.AndroidTouchHandler -> com.badlogic.gdx.backends.android.AndroidTouchHandler:
    void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput) -> onTouch
    boolean supportsMultitouch(android.content.Context) -> supportsMultitouch
com.badlogic.gdx.backends.android.AndroidVisibilityListener -> com.badlogic.gdx.backends.android.AndroidVisibilityListener:
    void createListener(com.badlogic.gdx.backends.android.AndroidApplicationBase) -> createListener
com.badlogic.gdx.backends.android.AndroidVisibilityListener$1 -> com.badlogic.gdx.backends.android.AndroidVisibilityListener$1:
    com.badlogic.gdx.backends.android.AndroidApplicationBase val$application -> val$application
    com.badlogic.gdx.backends.android.AndroidVisibilityListener this$0 -> this$0
    void onSystemUiVisibilityChange(int) -> onSystemUiVisibilityChange
com.badlogic.gdx.backends.android.AndroidVisibilityListener$1$1 -> com.badlogic.gdx.backends.android.AndroidVisibilityListener$1$1:
    com.badlogic.gdx.backends.android.AndroidVisibilityListener$1 this$1 -> this$1
    void run() -> run
com.badlogic.gdx.backends.android.AndroidWallpaperListener -> com.badlogic.gdx.backends.android.AndroidWallpaperListener:
    void offsetChange(float,float,float,float,int,int) -> offsetChange
    void previewStateChange(boolean) -> previewStateChange
com.badlogic.gdx.backends.android.InputProcessorLW -> com.badlogic.gdx.backends.android.InputProcessorLW:
    void touchDrop(int,int) -> touchDrop
com.badlogic.gdx.backends.android.surfaceview.FillResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.FillResolutionStrategy:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.FixedResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.FixedResolutionStrategy:
    int width -> width
    int height -> height
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20 -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    void onMeasure(int,int) -> onMeasure
    android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    void init(boolean,int,int) -> init
    void checkEglError(java.lang.String,javax.microedition.khronos.egl.EGL10) -> checkEglError
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$1 -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$1:
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20 this$0 -> this$0
    boolean deleteSurroundingText(int,int) -> deleteSurroundingText
    void sendDownUpKeyEventForBackwardCompatibility(int) -> sendDownUpKeyEventForBackwardCompatibility
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser:
    int EGL_OPENGL_ES2_BIT -> EGL_OPENGL_ES2_BIT
    int[] s_configAttribs2 -> s_configAttribs2
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    int[] mValue -> mValue
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
    void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> printConfigs
    void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> printConfig
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ContextFactory:
    int EGL_CONTEXT_CLIENT_VERSION -> EGL_CONTEXT_CLIENT_VERSION
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18 -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    void onMeasure(int,int) -> onMeasure
    android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    void init(boolean,int,int) -> init
    void checkEglError(java.lang.String,javax.microedition.khronos.egl.EGL10) -> checkEglError
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$1 -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$1:
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18 this$0 -> this$0
    boolean deleteSurroundingText(int,int) -> deleteSurroundingText
    void sendDownUpKeyEventForBackwardCompatibility(int) -> sendDownUpKeyEventForBackwardCompatibility
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ConfigChooser:
    int EGL_OPENGL_ES2_BIT -> EGL_OPENGL_ES2_BIT
    int[] s_configAttribs2 -> s_configAttribs2
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    int[] mValue -> mValue
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
    void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> printConfigs
    void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> printConfig
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ContextFactory:
    int EGL_CONTEXT_CLIENT_VERSION -> EGL_CONTEXT_CLIENT_VERSION
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18 -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18:
    java.lang.String TAG -> TAG
    boolean LOG_ATTACH_DETACH -> LOG_ATTACH_DETACH
    boolean LOG_THREADS -> LOG_THREADS
    boolean LOG_PAUSE_RESUME -> LOG_PAUSE_RESUME
    boolean LOG_SURFACE -> LOG_SURFACE
    boolean LOG_RENDERER -> LOG_RENDERER
    boolean LOG_RENDERER_DRAW_FRAME -> LOG_RENDERER_DRAW_FRAME
    boolean LOG_EGL -> LOG_EGL
    int RENDERMODE_WHEN_DIRTY -> RENDERMODE_WHEN_DIRTY
    int RENDERMODE_CONTINUOUSLY -> RENDERMODE_CONTINUOUSLY
    int DEBUG_CHECK_GL_ERROR -> DEBUG_CHECK_GL_ERROR
    int DEBUG_LOG_GL_CALLS -> DEBUG_LOG_GL_CALLS
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager sGLThreadManager -> sGLThreadManager
    java.lang.ref.WeakReference mThisWeakRef -> mThisWeakRef
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread mGLThread -> mGLThread
    android.opengl.GLSurfaceView$Renderer mRenderer -> mRenderer
    boolean mDetached -> mDetached
    android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser -> mEGLConfigChooser
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLContextFactory mEGLContextFactory -> mEGLContextFactory
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLWindowSurfaceFactory mEGLWindowSurfaceFactory -> mEGLWindowSurfaceFactory
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLWrapper mGLWrapper -> mGLWrapper
    int mDebugFlags -> mDebugFlags
    int mEGLContextClientVersion -> mEGLContextClientVersion
    boolean mPreserveEGLContextOnPause -> mPreserveEGLContextOnPause
    void finalize() -> finalize
    void init() -> init
    void setGLWrapper(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLWrapper) -> setGLWrapper
    void setDebugFlags(int) -> setDebugFlags
    int getDebugFlags() -> getDebugFlags
    void setPreserveEGLContextOnPause(boolean) -> setPreserveEGLContextOnPause
    boolean getPreserveEGLContextOnPause() -> getPreserveEGLContextOnPause
    void setRenderer(android.opengl.GLSurfaceView$Renderer) -> setRenderer
    void setEGLContextFactory(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLContextFactory) -> setEGLContextFactory
    void setEGLWindowSurfaceFactory(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLWindowSurfaceFactory) -> setEGLWindowSurfaceFactory
    void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser) -> setEGLConfigChooser
    void setEGLConfigChooser(boolean) -> setEGLConfigChooser
    void setEGLConfigChooser(int,int,int,int,int,int) -> setEGLConfigChooser
    void setEGLContextClientVersion(int) -> setEGLContextClientVersion
    void setRenderMode(int) -> setRenderMode
    int getRenderMode() -> getRenderMode
    void requestRender() -> requestRender
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void onPause() -> onPause
    void onResume() -> onResume
    void queueEvent(java.lang.Runnable) -> queueEvent
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void checkRenderThreadState() -> checkRenderThreadState
    int access$200(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> access$200
    android.opengl.GLSurfaceView$EGLConfigChooser access$300(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> access$300
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLContextFactory access$400(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> access$400
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLWindowSurfaceFactory access$500(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> access$500
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLWrapper access$600(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> access$600
    int access$700(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> access$700
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager access$800() -> access$800
    boolean access$900(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> access$900
    android.opengl.GLSurfaceView$Renderer access$1000(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> access$1000
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$1 -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$1:
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$BaseConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$BaseConfigChooser:
    int[] mConfigSpec -> mConfigSpec
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18 this$0 -> this$0
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int[] filterConfigSpec(int[]) -> filterConfigSpec
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$ComponentSizeChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$ComponentSizeChooser:
    int[] mValue -> mValue
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18 this$0 -> this$0
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$DefaultContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$DefaultContextFactory:
    int EGL_CONTEXT_CLIENT_VERSION -> EGL_CONTEXT_CLIENT_VERSION
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18 this$0 -> this$0
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$DefaultWindowSurfaceFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$DefaultWindowSurfaceFactory:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLContextFactory:
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLWindowSurfaceFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLWindowSurfaceFactory:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper:
    java.lang.ref.WeakReference mGLSurfaceViewWeakRef -> mGLSurfaceViewWeakRef
    javax.microedition.khronos.egl.EGL10 mEgl -> mEgl
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> mEglDisplay
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> mEglSurface
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> mEglConfig
    javax.microedition.khronos.egl.EGLContext mEglContext -> mEglContext
    void start() -> start
    boolean createSurface() -> createSurface
    javax.microedition.khronos.opengles.GL createGL() -> createGL
    int swap() -> swap
    void destroySurface() -> destroySurface
    void destroySurfaceImp() -> destroySurfaceImp
    void finish() -> finish
    void throwEglException(java.lang.String) -> throwEglException
    void throwEglException(java.lang.String,int) -> throwEglException
    void logEglErrorAsWarning(java.lang.String,java.lang.String,int) -> logEglErrorAsWarning
    java.lang.String getErrorString(int) -> getErrorString
    java.lang.String formatEglError(java.lang.String,int) -> formatEglError
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread:
    boolean mShouldExit -> mShouldExit
    boolean mExited -> mExited
    boolean mRequestPaused -> mRequestPaused
    boolean mPaused -> mPaused
    boolean mHasSurface -> mHasSurface
    boolean mSurfaceIsBad -> mSurfaceIsBad
    boolean mWaitingForSurface -> mWaitingForSurface
    boolean mHaveEglContext -> mHaveEglContext
    boolean mHaveEglSurface -> mHaveEglSurface
    boolean mFinishedCreatingEglSurface -> mFinishedCreatingEglSurface
    boolean mShouldReleaseEglContext -> mShouldReleaseEglContext
    int mWidth -> mWidth
    int mHeight -> mHeight
    int mRenderMode -> mRenderMode
    boolean mRequestRender -> mRequestRender
    boolean mRenderComplete -> mRenderComplete
    java.util.ArrayList mEventQueue -> mEventQueue
    boolean mSizeChanged -> mSizeChanged
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper mEglHelper -> mEglHelper
    java.lang.ref.WeakReference mGLSurfaceViewWeakRef -> mGLSurfaceViewWeakRef
    void run() -> run
    void stopEglSurfaceLocked() -> stopEglSurfaceLocked
    void stopEglContextLocked() -> stopEglContextLocked
    void guardedRun() -> guardedRun
    boolean ableToDraw() -> ableToDraw
    boolean readyToDraw() -> readyToDraw
    void setRenderMode(int) -> setRenderMode
    int getRenderMode() -> getRenderMode
    void requestRender() -> requestRender
    void surfaceCreated() -> surfaceCreated
    void surfaceDestroyed() -> surfaceDestroyed
    void onPause() -> onPause
    void onResume() -> onResume
    void onWindowResize(int,int) -> onWindowResize
    void requestExitAndWait() -> requestExitAndWait
    void requestReleaseEglContextLocked() -> requestReleaseEglContextLocked
    void queueEvent(java.lang.Runnable) -> queueEvent
    boolean access$1102(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread,boolean) -> access$1102
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager:
    java.lang.String TAG -> TAG
    boolean mGLESVersionCheckComplete -> mGLESVersionCheckComplete
    int mGLESVersion -> mGLESVersion
    boolean mGLESDriverCheckComplete -> mGLESDriverCheckComplete
    boolean mMultipleGLESContextsAllowed -> mMultipleGLESContextsAllowed
    boolean mLimitedGLESContexts -> mLimitedGLESContexts
    int kGLES_20 -> kGLES_20
    java.lang.String kMSM7K_RENDERER_PREFIX -> kMSM7K_RENDERER_PREFIX
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread mEglOwner -> mEglOwner
    void threadExiting(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread) -> threadExiting
    boolean tryAcquireEglContextLocked(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread) -> tryAcquireEglContextLocked
    void releaseEglContextLocked(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread) -> releaseEglContextLocked
    boolean shouldReleaseEGLContextWhenPausing() -> shouldReleaseEGLContextWhenPausing
    boolean shouldTerminateEGLWhenPausing() -> shouldTerminateEGLWhenPausing
    void checkGLDriver(javax.microedition.khronos.opengles.GL10) -> checkGLDriver
    void checkGLESVersion() -> checkGLESVersion
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLWrapper -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLWrapper:
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL) -> wrap
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$LogWriter -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$LogWriter:
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$SimpleEGLConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$SimpleEGLConfigChooser:
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18 this$0 -> this$0
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser:
    int EGL_OPENGL_ES2_BIT -> EGL_OPENGL_ES2_BIT
    int EGL_COVERAGE_BUFFERS_NV -> EGL_COVERAGE_BUFFERS_NV
    int EGL_COVERAGE_SAMPLES_NV -> EGL_COVERAGE_SAMPLES_NV
    java.lang.String TAG -> TAG
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    int mNumSamples -> mNumSamples
    int[] mConfigAttribs -> mConfigAttribs
    int[] mValue -> mValue
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
    void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> printConfigs
    void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> printConfig
com.badlogic.gdx.backends.android.surfaceview.RatioResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.RatioResolutionStrategy:
    float ratio -> ratio
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension -> com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension:
    int width -> width
    int height -> height
com.badlogic.gdx.files.FileHandle -> com.badlogic.gdx.files.FileHandle:
    java.io.File file -> file
    com.badlogic.gdx.Files$FileType type -> type
    java.lang.String path() -> path
    java.lang.String name() -> name
    java.lang.String extension() -> extension
    java.lang.String nameWithoutExtension() -> nameWithoutExtension
    java.lang.String pathWithoutExtension() -> pathWithoutExtension
    com.badlogic.gdx.Files$FileType type() -> type
    java.io.File file() -> file
    java.io.InputStream read() -> read
    java.io.BufferedInputStream read(int) -> read
    java.io.Reader reader() -> reader
    java.io.Reader reader(java.lang.String) -> reader
    java.io.BufferedReader reader(int) -> reader
    java.io.BufferedReader reader(int,java.lang.String) -> reader
    java.lang.String readString() -> readString
    java.lang.String readString(java.lang.String) -> readString
    byte[] readBytes() -> readBytes
    int estimateLength() -> estimateLength
    int readBytes(byte[],int,int) -> readBytes
    java.io.OutputStream write(boolean) -> write
    java.io.OutputStream write(boolean,int) -> write
    void write(java.io.InputStream,boolean) -> write
    java.io.Writer writer(boolean) -> writer
    java.io.Writer writer(boolean,java.lang.String) -> writer
    void writeString(java.lang.String,boolean) -> writeString
    void writeString(java.lang.String,boolean,java.lang.String) -> writeString
    void writeBytes(byte[],boolean) -> writeBytes
    void writeBytes(byte[],int,int,boolean) -> writeBytes
    com.badlogic.gdx.files.FileHandle[] list() -> list
    com.badlogic.gdx.files.FileHandle[] list(java.io.FileFilter) -> list
    com.badlogic.gdx.files.FileHandle[] list(java.io.FilenameFilter) -> list
    com.badlogic.gdx.files.FileHandle[] list(java.lang.String) -> list
    boolean isDirectory() -> isDirectory
    com.badlogic.gdx.files.FileHandle child(java.lang.String) -> child
    com.badlogic.gdx.files.FileHandle sibling(java.lang.String) -> sibling
    com.badlogic.gdx.files.FileHandle parent() -> parent
    void mkdirs() -> mkdirs
    boolean exists() -> exists
    boolean delete() -> delete
    boolean deleteDirectory() -> deleteDirectory
    void emptyDirectory() -> emptyDirectory
    void emptyDirectory(boolean) -> emptyDirectory
    void copyTo(com.badlogic.gdx.files.FileHandle) -> copyTo
    void moveTo(com.badlogic.gdx.files.FileHandle) -> moveTo
    long length() -> length
    long lastModified() -> lastModified
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.badlogic.gdx.files.FileHandle tempFile(java.lang.String) -> tempFile
    com.badlogic.gdx.files.FileHandle tempDirectory(java.lang.String) -> tempDirectory
    void emptyDirectory(java.io.File,boolean) -> emptyDirectory
    boolean deleteDirectory(java.io.File) -> deleteDirectory
    void copyFile(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle) -> copyFile
    void copyDirectory(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle) -> copyDirectory
com.badlogic.gdx.files.FileHandle$1 -> com.badlogic.gdx.files.FileHandle$1:
    int[] $SwitchMap$com$badlogic$gdx$Files$FileType -> $SwitchMap$com$badlogic$gdx$Files$FileType
com.badlogic.gdx.files.FileHandleStream -> com.badlogic.gdx.files.FileHandleStream:
    boolean isDirectory() -> isDirectory
    long length() -> length
    boolean exists() -> exists
    com.badlogic.gdx.files.FileHandle child(java.lang.String) -> child
    com.badlogic.gdx.files.FileHandle sibling(java.lang.String) -> sibling
    com.badlogic.gdx.files.FileHandle parent() -> parent
    java.io.InputStream read() -> read
    java.io.OutputStream write(boolean) -> write
    com.badlogic.gdx.files.FileHandle[] list() -> list
    void mkdirs() -> mkdirs
    boolean delete() -> delete
    boolean deleteDirectory() -> deleteDirectory
    void copyTo(com.badlogic.gdx.files.FileHandle) -> copyTo
    void moveTo(com.badlogic.gdx.files.FileHandle) -> moveTo
com.badlogic.gdx.files.package-info -> com.badlogic.gdx.files.package-info:
com.badlogic.gdx.graphics.Camera -> com.badlogic.gdx.graphics.Camera:
    com.badlogic.gdx.math.Vector3 position -> position
    com.badlogic.gdx.math.Vector3 direction -> direction
    com.badlogic.gdx.math.Vector3 up -> up
    com.badlogic.gdx.math.Matrix4 projection -> projection
    com.badlogic.gdx.math.Matrix4 view -> view
    com.badlogic.gdx.math.Matrix4 combined -> combined
    com.badlogic.gdx.math.Matrix4 invProjectionView -> invProjectionView
    float near -> near
    float far -> far
    float viewportWidth -> viewportWidth
    float viewportHeight -> viewportHeight
    com.badlogic.gdx.math.Frustum frustum -> frustum
    com.badlogic.gdx.math.Vector3 tmpVec -> tmpVec
    com.badlogic.gdx.math.collision.Ray ray -> ray
    void update() -> update
    void update(boolean) -> update
    void lookAt(float,float,float) -> lookAt
    void lookAt(com.badlogic.gdx.math.Vector3) -> lookAt
    void normalizeUp() -> normalizeUp
    void rotate(float,float,float,float) -> rotate
    void rotate(com.badlogic.gdx.math.Vector3,float) -> rotate
    void rotate(com.badlogic.gdx.math.Matrix4) -> rotate
    void rotate(com.badlogic.gdx.math.Quaternion) -> rotate
    void rotateAround(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float) -> rotateAround
    void transform(com.badlogic.gdx.math.Matrix4) -> transform
    void translate(float,float,float) -> translate
    void translate(com.badlogic.gdx.math.Vector3) -> translate
    com.badlogic.gdx.math.Vector3 unproject(com.badlogic.gdx.math.Vector3,float,float,float,float) -> unproject
    com.badlogic.gdx.math.Vector3 unproject(com.badlogic.gdx.math.Vector3) -> unproject
    com.badlogic.gdx.math.Vector3 project(com.badlogic.gdx.math.Vector3) -> project
    com.badlogic.gdx.math.Vector3 project(com.badlogic.gdx.math.Vector3,float,float,float,float) -> project
    com.badlogic.gdx.math.collision.Ray getPickRay(float,float,float,float,float,float) -> getPickRay
    com.badlogic.gdx.math.collision.Ray getPickRay(float,float) -> getPickRay
com.badlogic.gdx.graphics.Color -> com.badlogic.gdx.graphics.Color:
    com.badlogic.gdx.graphics.Color CLEAR -> CLEAR
    com.badlogic.gdx.graphics.Color WHITE -> WHITE
    com.badlogic.gdx.graphics.Color BLACK -> BLACK
    com.badlogic.gdx.graphics.Color RED -> RED
    com.badlogic.gdx.graphics.Color GREEN -> GREEN
    com.badlogic.gdx.graphics.Color BLUE -> BLUE
    com.badlogic.gdx.graphics.Color LIGHT_GRAY -> LIGHT_GRAY
    com.badlogic.gdx.graphics.Color GRAY -> GRAY
    com.badlogic.gdx.graphics.Color DARK_GRAY -> DARK_GRAY
    com.badlogic.gdx.graphics.Color PINK -> PINK
    com.badlogic.gdx.graphics.Color ORANGE -> ORANGE
    com.badlogic.gdx.graphics.Color YELLOW -> YELLOW
    com.badlogic.gdx.graphics.Color MAGENTA -> MAGENTA
    com.badlogic.gdx.graphics.Color CYAN -> CYAN
    com.badlogic.gdx.graphics.Color OLIVE -> OLIVE
    com.badlogic.gdx.graphics.Color PURPLE -> PURPLE
    com.badlogic.gdx.graphics.Color MAROON -> MAROON
    com.badlogic.gdx.graphics.Color TEAL -> TEAL
    com.badlogic.gdx.graphics.Color NAVY -> NAVY
    com.badlogic.gdx.graphics.Color tmp -> tmp
    float r -> r
    float g -> g
    float b -> b
    float a -> a
    com.badlogic.gdx.graphics.Color set(com.badlogic.gdx.graphics.Color) -> set
    com.badlogic.gdx.graphics.Color mul(com.badlogic.gdx.graphics.Color) -> mul
    com.badlogic.gdx.graphics.Color mul(float) -> mul
    com.badlogic.gdx.graphics.Color add(com.badlogic.gdx.graphics.Color) -> add
    com.badlogic.gdx.graphics.Color sub(com.badlogic.gdx.graphics.Color) -> sub
    com.badlogic.gdx.graphics.Color clamp() -> clamp
    com.badlogic.gdx.graphics.Color set(float,float,float,float) -> set
    com.badlogic.gdx.graphics.Color set(int) -> set
    com.badlogic.gdx.graphics.Color add(float,float,float,float) -> add
    com.badlogic.gdx.graphics.Color sub(float,float,float,float) -> sub
    com.badlogic.gdx.graphics.Color mul(float,float,float,float) -> mul
    com.badlogic.gdx.graphics.Color lerp(com.badlogic.gdx.graphics.Color,float) -> lerp
    com.badlogic.gdx.graphics.Color lerp(float,float,float,float,float) -> lerp
    com.badlogic.gdx.graphics.Color premultiplyAlpha() -> premultiplyAlpha
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    float toFloatBits() -> toFloatBits
    int toIntBits() -> toIntBits
    java.lang.String toString() -> toString
    com.badlogic.gdx.graphics.Color valueOf(java.lang.String) -> valueOf
    float toFloatBits(int,int,int,int) -> toFloatBits
    float toFloatBits(float,float,float,float) -> toFloatBits
    int toIntBits(int,int,int,int) -> toIntBits
    int alpha(float) -> alpha
    int luminanceAlpha(float,float) -> luminanceAlpha
    int rgb565(float,float,float) -> rgb565
    int rgba4444(float,float,float,float) -> rgba4444
    int rgb888(float,float,float) -> rgb888
    int rgba8888(float,float,float,float) -> rgba8888
    int argb8888(float,float,float,float) -> argb8888
    int rgb565(com.badlogic.gdx.graphics.Color) -> rgb565
    int rgba4444(com.badlogic.gdx.graphics.Color) -> rgba4444
    int rgb888(com.badlogic.gdx.graphics.Color) -> rgb888
    int rgba8888(com.badlogic.gdx.graphics.Color) -> rgba8888
    int argb8888(com.badlogic.gdx.graphics.Color) -> argb8888
    void rgb565ToColor(com.badlogic.gdx.graphics.Color,int) -> rgb565ToColor
    void rgba4444ToColor(com.badlogic.gdx.graphics.Color,int) -> rgba4444ToColor
    void rgb888ToColor(com.badlogic.gdx.graphics.Color,int) -> rgb888ToColor
    void rgba8888ToColor(com.badlogic.gdx.graphics.Color,int) -> rgba8888ToColor
    void argb8888ToColor(com.badlogic.gdx.graphics.Color,int) -> argb8888ToColor
    com.badlogic.gdx.graphics.Color tmp() -> tmp
    com.badlogic.gdx.graphics.Color cpy() -> cpy
com.badlogic.gdx.graphics.Colors -> com.badlogic.gdx.graphics.Colors:
    com.badlogic.gdx.utils.ObjectMap map -> map
    com.badlogic.gdx.utils.ObjectMap getColors() -> getColors
    com.badlogic.gdx.graphics.Color get(java.lang.String) -> get
    com.badlogic.gdx.graphics.Color put(java.lang.String,com.badlogic.gdx.graphics.Color) -> put
    void reset() -> reset
com.badlogic.gdx.graphics.Cubemap -> com.badlogic.gdx.graphics.Cubemap:
    com.badlogic.gdx.assets.AssetManager assetManager -> assetManager
    java.util.Map managedCubemaps -> managedCubemaps
    com.badlogic.gdx.graphics.CubemapData data -> data
    void load(com.badlogic.gdx.graphics.CubemapData) -> load
    com.badlogic.gdx.graphics.CubemapData getCubemapData() -> getCubemapData
    boolean isManaged() -> isManaged
    void reload() -> reload
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    int getDepth() -> getDepth
    void dispose() -> dispose
    void addManagedCubemap(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.Cubemap) -> addManagedCubemap
    void clearAllCubemaps(com.badlogic.gdx.Application) -> clearAllCubemaps
    void invalidateAllCubemaps(com.badlogic.gdx.Application) -> invalidateAllCubemaps
    void setAssetManager(com.badlogic.gdx.assets.AssetManager) -> setAssetManager
    java.lang.String getManagedStatus() -> getManagedStatus
    int getNumManagedCubemaps() -> getNumManagedCubemaps
com.badlogic.gdx.graphics.Cubemap$1 -> com.badlogic.gdx.graphics.Cubemap$1:
    int val$refCount -> val$refCount
    void finishedLoading(com.badlogic.gdx.assets.AssetManager,java.lang.String,java.lang.Class) -> finishedLoading
com.badlogic.gdx.graphics.Cubemap$CubemapSide -> com.badlogic.gdx.graphics.Cubemap$CubemapSide:
    com.badlogic.gdx.graphics.Cubemap$CubemapSide PositiveX -> PositiveX
    com.badlogic.gdx.graphics.Cubemap$CubemapSide NegativeX -> NegativeX
    com.badlogic.gdx.graphics.Cubemap$CubemapSide PositiveY -> PositiveY
    com.badlogic.gdx.graphics.Cubemap$CubemapSide NegativeY -> NegativeY
    com.badlogic.gdx.graphics.Cubemap$CubemapSide PositiveZ -> PositiveZ
    com.badlogic.gdx.graphics.Cubemap$CubemapSide NegativeZ -> NegativeZ
    int index -> index
    int glEnum -> glEnum
    com.badlogic.gdx.graphics.Cubemap$CubemapSide[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.Cubemap$CubemapSide[] values() -> values
    com.badlogic.gdx.graphics.Cubemap$CubemapSide valueOf(java.lang.String) -> valueOf
    int getGLEnum() -> getGLEnum
com.badlogic.gdx.graphics.CubemapData -> com.badlogic.gdx.graphics.CubemapData:
    boolean isPrepared() -> isPrepared
    void prepare() -> prepare
    void consumeCubemapData() -> consumeCubemapData
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    boolean isManaged() -> isManaged
com.badlogic.gdx.graphics.FPSLogger -> com.badlogic.gdx.graphics.FPSLogger:
    long startTime -> startTime
    void log() -> log
com.badlogic.gdx.graphics.GL20 -> com.badlogic.gdx.graphics.GL20:
    int GL_ES_VERSION_2_0 -> GL_ES_VERSION_2_0
    int GL_DEPTH_BUFFER_BIT -> GL_DEPTH_BUFFER_BIT
    int GL_STENCIL_BUFFER_BIT -> GL_STENCIL_BUFFER_BIT
    int GL_COLOR_BUFFER_BIT -> GL_COLOR_BUFFER_BIT
    int GL_FALSE -> GL_FALSE
    int GL_TRUE -> GL_TRUE
    int GL_POINTS -> GL_POINTS
    int GL_LINES -> GL_LINES
    int GL_LINE_LOOP -> GL_LINE_LOOP
    int GL_LINE_STRIP -> GL_LINE_STRIP
    int GL_TRIANGLES -> GL_TRIANGLES
    int GL_TRIANGLE_STRIP -> GL_TRIANGLE_STRIP
    int GL_TRIANGLE_FAN -> GL_TRIANGLE_FAN
    int GL_ZERO -> GL_ZERO
    int GL_ONE -> GL_ONE
    int GL_SRC_COLOR -> GL_SRC_COLOR
    int GL_ONE_MINUS_SRC_COLOR -> GL_ONE_MINUS_SRC_COLOR
    int GL_SRC_ALPHA -> GL_SRC_ALPHA
    int GL_ONE_MINUS_SRC_ALPHA -> GL_ONE_MINUS_SRC_ALPHA
    int GL_DST_ALPHA -> GL_DST_ALPHA
    int GL_ONE_MINUS_DST_ALPHA -> GL_ONE_MINUS_DST_ALPHA
    int GL_DST_COLOR -> GL_DST_COLOR
    int GL_ONE_MINUS_DST_COLOR -> GL_ONE_MINUS_DST_COLOR
    int GL_SRC_ALPHA_SATURATE -> GL_SRC_ALPHA_SATURATE
    int GL_FUNC_ADD -> GL_FUNC_ADD
    int GL_BLEND_EQUATION -> GL_BLEND_EQUATION
    int GL_BLEND_EQUATION_RGB -> GL_BLEND_EQUATION_RGB
    int GL_BLEND_EQUATION_ALPHA -> GL_BLEND_EQUATION_ALPHA
    int GL_FUNC_SUBTRACT -> GL_FUNC_SUBTRACT
    int GL_FUNC_REVERSE_SUBTRACT -> GL_FUNC_REVERSE_SUBTRACT
    int GL_BLEND_DST_RGB -> GL_BLEND_DST_RGB
    int GL_BLEND_SRC_RGB -> GL_BLEND_SRC_RGB
    int GL_BLEND_DST_ALPHA -> GL_BLEND_DST_ALPHA
    int GL_BLEND_SRC_ALPHA -> GL_BLEND_SRC_ALPHA
    int GL_CONSTANT_COLOR -> GL_CONSTANT_COLOR
    int GL_ONE_MINUS_CONSTANT_COLOR -> GL_ONE_MINUS_CONSTANT_COLOR
    int GL_CONSTANT_ALPHA -> GL_CONSTANT_ALPHA
    int GL_ONE_MINUS_CONSTANT_ALPHA -> GL_ONE_MINUS_CONSTANT_ALPHA
    int GL_BLEND_COLOR -> GL_BLEND_COLOR
    int GL_ARRAY_BUFFER -> GL_ARRAY_BUFFER
    int GL_ELEMENT_ARRAY_BUFFER -> GL_ELEMENT_ARRAY_BUFFER
    int GL_ARRAY_BUFFER_BINDING -> GL_ARRAY_BUFFER_BINDING
    int GL_ELEMENT_ARRAY_BUFFER_BINDING -> GL_ELEMENT_ARRAY_BUFFER_BINDING
    int GL_STREAM_DRAW -> GL_STREAM_DRAW
    int GL_STATIC_DRAW -> GL_STATIC_DRAW
    int GL_DYNAMIC_DRAW -> GL_DYNAMIC_DRAW
    int GL_BUFFER_SIZE -> GL_BUFFER_SIZE
    int GL_BUFFER_USAGE -> GL_BUFFER_USAGE
    int GL_CURRENT_VERTEX_ATTRIB -> GL_CURRENT_VERTEX_ATTRIB
    int GL_FRONT -> GL_FRONT
    int GL_BACK -> GL_BACK
    int GL_FRONT_AND_BACK -> GL_FRONT_AND_BACK
    int GL_TEXTURE_2D -> GL_TEXTURE_2D
    int GL_CULL_FACE -> GL_CULL_FACE
    int GL_BLEND -> GL_BLEND
    int GL_DITHER -> GL_DITHER
    int GL_STENCIL_TEST -> GL_STENCIL_TEST
    int GL_DEPTH_TEST -> GL_DEPTH_TEST
    int GL_SCISSOR_TEST -> GL_SCISSOR_TEST
    int GL_POLYGON_OFFSET_FILL -> GL_POLYGON_OFFSET_FILL
    int GL_SAMPLE_ALPHA_TO_COVERAGE -> GL_SAMPLE_ALPHA_TO_COVERAGE
    int GL_SAMPLE_COVERAGE -> GL_SAMPLE_COVERAGE
    int GL_NO_ERROR -> GL_NO_ERROR
    int GL_INVALID_ENUM -> GL_INVALID_ENUM
    int GL_INVALID_VALUE -> GL_INVALID_VALUE
    int GL_INVALID_OPERATION -> GL_INVALID_OPERATION
    int GL_OUT_OF_MEMORY -> GL_OUT_OF_MEMORY
    int GL_CW -> GL_CW
    int GL_CCW -> GL_CCW
    int GL_LINE_WIDTH -> GL_LINE_WIDTH
    int GL_ALIASED_POINT_SIZE_RANGE -> GL_ALIASED_POINT_SIZE_RANGE
    int GL_ALIASED_LINE_WIDTH_RANGE -> GL_ALIASED_LINE_WIDTH_RANGE
    int GL_CULL_FACE_MODE -> GL_CULL_FACE_MODE
    int GL_FRONT_FACE -> GL_FRONT_FACE
    int GL_DEPTH_RANGE -> GL_DEPTH_RANGE
    int GL_DEPTH_WRITEMASK -> GL_DEPTH_WRITEMASK
    int GL_DEPTH_CLEAR_VALUE -> GL_DEPTH_CLEAR_VALUE
    int GL_DEPTH_FUNC -> GL_DEPTH_FUNC
    int GL_STENCIL_CLEAR_VALUE -> GL_STENCIL_CLEAR_VALUE
    int GL_STENCIL_FUNC -> GL_STENCIL_FUNC
    int GL_STENCIL_FAIL -> GL_STENCIL_FAIL
    int GL_STENCIL_PASS_DEPTH_FAIL -> GL_STENCIL_PASS_DEPTH_FAIL
    int GL_STENCIL_PASS_DEPTH_PASS -> GL_STENCIL_PASS_DEPTH_PASS
    int GL_STENCIL_REF -> GL_STENCIL_REF
    int GL_STENCIL_VALUE_MASK -> GL_STENCIL_VALUE_MASK
    int GL_STENCIL_WRITEMASK -> GL_STENCIL_WRITEMASK
    int GL_STENCIL_BACK_FUNC -> GL_STENCIL_BACK_FUNC
    int GL_STENCIL_BACK_FAIL -> GL_STENCIL_BACK_FAIL
    int GL_STENCIL_BACK_PASS_DEPTH_FAIL -> GL_STENCIL_BACK_PASS_DEPTH_FAIL
    int GL_STENCIL_BACK_PASS_DEPTH_PASS -> GL_STENCIL_BACK_PASS_DEPTH_PASS
    int GL_STENCIL_BACK_REF -> GL_STENCIL_BACK_REF
    int GL_STENCIL_BACK_VALUE_MASK -> GL_STENCIL_BACK_VALUE_MASK
    int GL_STENCIL_BACK_WRITEMASK -> GL_STENCIL_BACK_WRITEMASK
    int GL_VIEWPORT -> GL_VIEWPORT
    int GL_SCISSOR_BOX -> GL_SCISSOR_BOX
    int GL_COLOR_CLEAR_VALUE -> GL_COLOR_CLEAR_VALUE
    int GL_COLOR_WRITEMASK -> GL_COLOR_WRITEMASK
    int GL_UNPACK_ALIGNMENT -> GL_UNPACK_ALIGNMENT
    int GL_PACK_ALIGNMENT -> GL_PACK_ALIGNMENT
    int GL_MAX_TEXTURE_SIZE -> GL_MAX_TEXTURE_SIZE
    int GL_MAX_TEXTURE_UNITS -> GL_MAX_TEXTURE_UNITS
    int GL_MAX_VIEWPORT_DIMS -> GL_MAX_VIEWPORT_DIMS
    int GL_SUBPIXEL_BITS -> GL_SUBPIXEL_BITS
    int GL_RED_BITS -> GL_RED_BITS
    int GL_GREEN_BITS -> GL_GREEN_BITS
    int GL_BLUE_BITS -> GL_BLUE_BITS
    int GL_ALPHA_BITS -> GL_ALPHA_BITS
    int GL_DEPTH_BITS -> GL_DEPTH_BITS
    int GL_STENCIL_BITS -> GL_STENCIL_BITS
    int GL_POLYGON_OFFSET_UNITS -> GL_POLYGON_OFFSET_UNITS
    int GL_POLYGON_OFFSET_FACTOR -> GL_POLYGON_OFFSET_FACTOR
    int GL_TEXTURE_BINDING_2D -> GL_TEXTURE_BINDING_2D
    int GL_SAMPLE_BUFFERS -> GL_SAMPLE_BUFFERS
    int GL_SAMPLES -> GL_SAMPLES
    int GL_SAMPLE_COVERAGE_VALUE -> GL_SAMPLE_COVERAGE_VALUE
    int GL_SAMPLE_COVERAGE_INVERT -> GL_SAMPLE_COVERAGE_INVERT
    int GL_NUM_COMPRESSED_TEXTURE_FORMATS -> GL_NUM_COMPRESSED_TEXTURE_FORMATS
    int GL_COMPRESSED_TEXTURE_FORMATS -> GL_COMPRESSED_TEXTURE_FORMATS
    int GL_DONT_CARE -> GL_DONT_CARE
    int GL_FASTEST -> GL_FASTEST
    int GL_NICEST -> GL_NICEST
    int GL_GENERATE_MIPMAP -> GL_GENERATE_MIPMAP
    int GL_GENERATE_MIPMAP_HINT -> GL_GENERATE_MIPMAP_HINT
    int GL_BYTE -> GL_BYTE
    int GL_UNSIGNED_BYTE -> GL_UNSIGNED_BYTE
    int GL_SHORT -> GL_SHORT
    int GL_UNSIGNED_SHORT -> GL_UNSIGNED_SHORT
    int GL_INT -> GL_INT
    int GL_UNSIGNED_INT -> GL_UNSIGNED_INT
    int GL_FLOAT -> GL_FLOAT
    int GL_FIXED -> GL_FIXED
    int GL_DEPTH_COMPONENT -> GL_DEPTH_COMPONENT
    int GL_ALPHA -> GL_ALPHA
    int GL_RGB -> GL_RGB
    int GL_RGBA -> GL_RGBA
    int GL_LUMINANCE -> GL_LUMINANCE
    int GL_LUMINANCE_ALPHA -> GL_LUMINANCE_ALPHA
    int GL_UNSIGNED_SHORT_4_4_4_4 -> GL_UNSIGNED_SHORT_4_4_4_4
    int GL_UNSIGNED_SHORT_5_5_5_1 -> GL_UNSIGNED_SHORT_5_5_5_1
    int GL_UNSIGNED_SHORT_5_6_5 -> GL_UNSIGNED_SHORT_5_6_5
    int GL_FRAGMENT_SHADER -> GL_FRAGMENT_SHADER
    int GL_VERTEX_SHADER -> GL_VERTEX_SHADER
    int GL_MAX_VERTEX_ATTRIBS -> GL_MAX_VERTEX_ATTRIBS
    int GL_MAX_VERTEX_UNIFORM_VECTORS -> GL_MAX_VERTEX_UNIFORM_VECTORS
    int GL_MAX_VARYING_VECTORS -> GL_MAX_VARYING_VECTORS
    int GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS -> GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
    int GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS -> GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
    int GL_MAX_TEXTURE_IMAGE_UNITS -> GL_MAX_TEXTURE_IMAGE_UNITS
    int GL_MAX_FRAGMENT_UNIFORM_VECTORS -> GL_MAX_FRAGMENT_UNIFORM_VECTORS
    int GL_SHADER_TYPE -> GL_SHADER_TYPE
    int GL_DELETE_STATUS -> GL_DELETE_STATUS
    int GL_LINK_STATUS -> GL_LINK_STATUS
    int GL_VALIDATE_STATUS -> GL_VALIDATE_STATUS
    int GL_ATTACHED_SHADERS -> GL_ATTACHED_SHADERS
    int GL_ACTIVE_UNIFORMS -> GL_ACTIVE_UNIFORMS
    int GL_ACTIVE_UNIFORM_MAX_LENGTH -> GL_ACTIVE_UNIFORM_MAX_LENGTH
    int GL_ACTIVE_ATTRIBUTES -> GL_ACTIVE_ATTRIBUTES
    int GL_ACTIVE_ATTRIBUTE_MAX_LENGTH -> GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
    int GL_SHADING_LANGUAGE_VERSION -> GL_SHADING_LANGUAGE_VERSION
    int GL_CURRENT_PROGRAM -> GL_CURRENT_PROGRAM
    int GL_NEVER -> GL_NEVER
    int GL_LESS -> GL_LESS
    int GL_EQUAL -> GL_EQUAL
    int GL_LEQUAL -> GL_LEQUAL
    int GL_GREATER -> GL_GREATER
    int GL_NOTEQUAL -> GL_NOTEQUAL
    int GL_GEQUAL -> GL_GEQUAL
    int GL_ALWAYS -> GL_ALWAYS
    int GL_KEEP -> GL_KEEP
    int GL_REPLACE -> GL_REPLACE
    int GL_INCR -> GL_INCR
    int GL_DECR -> GL_DECR
    int GL_INVERT -> GL_INVERT
    int GL_INCR_WRAP -> GL_INCR_WRAP
    int GL_DECR_WRAP -> GL_DECR_WRAP
    int GL_VENDOR -> GL_VENDOR
    int GL_RENDERER -> GL_RENDERER
    int GL_VERSION -> GL_VERSION
    int GL_EXTENSIONS -> GL_EXTENSIONS
    int GL_NEAREST -> GL_NEAREST
    int GL_LINEAR -> GL_LINEAR
    int GL_NEAREST_MIPMAP_NEAREST -> GL_NEAREST_MIPMAP_NEAREST
    int GL_LINEAR_MIPMAP_NEAREST -> GL_LINEAR_MIPMAP_NEAREST
    int GL_NEAREST_MIPMAP_LINEAR -> GL_NEAREST_MIPMAP_LINEAR
    int GL_LINEAR_MIPMAP_LINEAR -> GL_LINEAR_MIPMAP_LINEAR
    int GL_TEXTURE_MAG_FILTER -> GL_TEXTURE_MAG_FILTER
    int GL_TEXTURE_MIN_FILTER -> GL_TEXTURE_MIN_FILTER
    int GL_TEXTURE_WRAP_S -> GL_TEXTURE_WRAP_S
    int GL_TEXTURE_WRAP_T -> GL_TEXTURE_WRAP_T
    int GL_TEXTURE -> GL_TEXTURE
    int GL_TEXTURE_CUBE_MAP -> GL_TEXTURE_CUBE_MAP
    int GL_TEXTURE_BINDING_CUBE_MAP -> GL_TEXTURE_BINDING_CUBE_MAP
    int GL_TEXTURE_CUBE_MAP_POSITIVE_X -> GL_TEXTURE_CUBE_MAP_POSITIVE_X
    int GL_TEXTURE_CUBE_MAP_NEGATIVE_X -> GL_TEXTURE_CUBE_MAP_NEGATIVE_X
    int GL_TEXTURE_CUBE_MAP_POSITIVE_Y -> GL_TEXTURE_CUBE_MAP_POSITIVE_Y
    int GL_TEXTURE_CUBE_MAP_NEGATIVE_Y -> GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
    int GL_TEXTURE_CUBE_MAP_POSITIVE_Z -> GL_TEXTURE_CUBE_MAP_POSITIVE_Z
    int GL_TEXTURE_CUBE_MAP_NEGATIVE_Z -> GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
    int GL_MAX_CUBE_MAP_TEXTURE_SIZE -> GL_MAX_CUBE_MAP_TEXTURE_SIZE
    int GL_TEXTURE0 -> GL_TEXTURE0
    int GL_TEXTURE1 -> GL_TEXTURE1
    int GL_TEXTURE2 -> GL_TEXTURE2
    int GL_TEXTURE3 -> GL_TEXTURE3
    int GL_TEXTURE4 -> GL_TEXTURE4
    int GL_TEXTURE5 -> GL_TEXTURE5
    int GL_TEXTURE6 -> GL_TEXTURE6
    int GL_TEXTURE7 -> GL_TEXTURE7
    int GL_TEXTURE8 -> GL_TEXTURE8
    int GL_TEXTURE9 -> GL_TEXTURE9
    int GL_TEXTURE10 -> GL_TEXTURE10
    int GL_TEXTURE11 -> GL_TEXTURE11
    int GL_TEXTURE12 -> GL_TEXTURE12
    int GL_TEXTURE13 -> GL_TEXTURE13
    int GL_TEXTURE14 -> GL_TEXTURE14
    int GL_TEXTURE15 -> GL_TEXTURE15
    int GL_TEXTURE16 -> GL_TEXTURE16
    int GL_TEXTURE17 -> GL_TEXTURE17
    int GL_TEXTURE18 -> GL_TEXTURE18
    int GL_TEXTURE19 -> GL_TEXTURE19
    int GL_TEXTURE20 -> GL_TEXTURE20
    int GL_TEXTURE21 -> GL_TEXTURE21
    int GL_TEXTURE22 -> GL_TEXTURE22
    int GL_TEXTURE23 -> GL_TEXTURE23
    int GL_TEXTURE24 -> GL_TEXTURE24
    int GL_TEXTURE25 -> GL_TEXTURE25
    int GL_TEXTURE26 -> GL_TEXTURE26
    int GL_TEXTURE27 -> GL_TEXTURE27
    int GL_TEXTURE28 -> GL_TEXTURE28
    int GL_TEXTURE29 -> GL_TEXTURE29
    int GL_TEXTURE30 -> GL_TEXTURE30
    int GL_TEXTURE31 -> GL_TEXTURE31
    int GL_ACTIVE_TEXTURE -> GL_ACTIVE_TEXTURE
    int GL_REPEAT -> GL_REPEAT
    int GL_CLAMP_TO_EDGE -> GL_CLAMP_TO_EDGE
    int GL_MIRRORED_REPEAT -> GL_MIRRORED_REPEAT
    int GL_FLOAT_VEC2 -> GL_FLOAT_VEC2
    int GL_FLOAT_VEC3 -> GL_FLOAT_VEC3
    int GL_FLOAT_VEC4 -> GL_FLOAT_VEC4
    int GL_INT_VEC2 -> GL_INT_VEC2
    int GL_INT_VEC3 -> GL_INT_VEC3
    int GL_INT_VEC4 -> GL_INT_VEC4
    int GL_BOOL -> GL_BOOL
    int GL_BOOL_VEC2 -> GL_BOOL_VEC2
    int GL_BOOL_VEC3 -> GL_BOOL_VEC3
    int GL_BOOL_VEC4 -> GL_BOOL_VEC4
    int GL_FLOAT_MAT2 -> GL_FLOAT_MAT2
    int GL_FLOAT_MAT3 -> GL_FLOAT_MAT3
    int GL_FLOAT_MAT4 -> GL_FLOAT_MAT4
    int GL_SAMPLER_2D -> GL_SAMPLER_2D
    int GL_SAMPLER_CUBE -> GL_SAMPLER_CUBE
    int GL_VERTEX_ATTRIB_ARRAY_ENABLED -> GL_VERTEX_ATTRIB_ARRAY_ENABLED
    int GL_VERTEX_ATTRIB_ARRAY_SIZE -> GL_VERTEX_ATTRIB_ARRAY_SIZE
    int GL_VERTEX_ATTRIB_ARRAY_STRIDE -> GL_VERTEX_ATTRIB_ARRAY_STRIDE
    int GL_VERTEX_ATTRIB_ARRAY_TYPE -> GL_VERTEX_ATTRIB_ARRAY_TYPE
    int GL_VERTEX_ATTRIB_ARRAY_NORMALIZED -> GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
    int GL_VERTEX_ATTRIB_ARRAY_POINTER -> GL_VERTEX_ATTRIB_ARRAY_POINTER
    int GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING -> GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
    int GL_IMPLEMENTATION_COLOR_READ_TYPE -> GL_IMPLEMENTATION_COLOR_READ_TYPE
    int GL_IMPLEMENTATION_COLOR_READ_FORMAT -> GL_IMPLEMENTATION_COLOR_READ_FORMAT
    int GL_COMPILE_STATUS -> GL_COMPILE_STATUS
    int GL_INFO_LOG_LENGTH -> GL_INFO_LOG_LENGTH
    int GL_SHADER_SOURCE_LENGTH -> GL_SHADER_SOURCE_LENGTH
    int GL_SHADER_COMPILER -> GL_SHADER_COMPILER
    int GL_SHADER_BINARY_FORMATS -> GL_SHADER_BINARY_FORMATS
    int GL_NUM_SHADER_BINARY_FORMATS -> GL_NUM_SHADER_BINARY_FORMATS
    int GL_LOW_FLOAT -> GL_LOW_FLOAT
    int GL_MEDIUM_FLOAT -> GL_MEDIUM_FLOAT
    int GL_HIGH_FLOAT -> GL_HIGH_FLOAT
    int GL_LOW_INT -> GL_LOW_INT
    int GL_MEDIUM_INT -> GL_MEDIUM_INT
    int GL_HIGH_INT -> GL_HIGH_INT
    int GL_FRAMEBUFFER -> GL_FRAMEBUFFER
    int GL_RENDERBUFFER -> GL_RENDERBUFFER
    int GL_RGBA4 -> GL_RGBA4
    int GL_RGB5_A1 -> GL_RGB5_A1
    int GL_RGB565 -> GL_RGB565
    int GL_DEPTH_COMPONENT16 -> GL_DEPTH_COMPONENT16
    int GL_STENCIL_INDEX -> GL_STENCIL_INDEX
    int GL_STENCIL_INDEX8 -> GL_STENCIL_INDEX8
    int GL_RENDERBUFFER_WIDTH -> GL_RENDERBUFFER_WIDTH
    int GL_RENDERBUFFER_HEIGHT -> GL_RENDERBUFFER_HEIGHT
    int GL_RENDERBUFFER_INTERNAL_FORMAT -> GL_RENDERBUFFER_INTERNAL_FORMAT
    int GL_RENDERBUFFER_RED_SIZE -> GL_RENDERBUFFER_RED_SIZE
    int GL_RENDERBUFFER_GREEN_SIZE -> GL_RENDERBUFFER_GREEN_SIZE
    int GL_RENDERBUFFER_BLUE_SIZE -> GL_RENDERBUFFER_BLUE_SIZE
    int GL_RENDERBUFFER_ALPHA_SIZE -> GL_RENDERBUFFER_ALPHA_SIZE
    int GL_RENDERBUFFER_DEPTH_SIZE -> GL_RENDERBUFFER_DEPTH_SIZE
    int GL_RENDERBUFFER_STENCIL_SIZE -> GL_RENDERBUFFER_STENCIL_SIZE
    int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE -> GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
    int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME -> GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
    int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL -> GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
    int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE -> GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
    int GL_COLOR_ATTACHMENT0 -> GL_COLOR_ATTACHMENT0
    int GL_DEPTH_ATTACHMENT -> GL_DEPTH_ATTACHMENT
    int GL_STENCIL_ATTACHMENT -> GL_STENCIL_ATTACHMENT
    int GL_NONE -> GL_NONE
    int GL_FRAMEBUFFER_COMPLETE -> GL_FRAMEBUFFER_COMPLETE
    int GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT -> GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
    int GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT -> GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
    int GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS -> GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS
    int GL_FRAMEBUFFER_UNSUPPORTED -> GL_FRAMEBUFFER_UNSUPPORTED
    int GL_FRAMEBUFFER_BINDING -> GL_FRAMEBUFFER_BINDING
    int GL_RENDERBUFFER_BINDING -> GL_RENDERBUFFER_BINDING
    int GL_MAX_RENDERBUFFER_SIZE -> GL_MAX_RENDERBUFFER_SIZE
    int GL_INVALID_FRAMEBUFFER_OPERATION -> GL_INVALID_FRAMEBUFFER_OPERATION
    int GL_VERTEX_PROGRAM_POINT_SIZE -> GL_VERTEX_PROGRAM_POINT_SIZE
    int GL_COVERAGE_BUFFER_BIT_NV -> GL_COVERAGE_BUFFER_BIT_NV
    int GL_TEXTURE_MAX_ANISOTROPY_EXT -> GL_TEXTURE_MAX_ANISOTROPY_EXT
    int GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT -> GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT
    void glActiveTexture(int) -> glActiveTexture
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearDepthf(float) -> glClearDepthf
    void glClearStencil(int) -> glClearStencil
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    void glCullFace(int) -> glCullFace
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDeleteTexture(int) -> glDeleteTexture
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDisable(int) -> glDisable
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFrontFace(int) -> glFrontFace
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    int glGenTexture() -> glGenTexture
    int glGetError() -> glGetError
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glHint(int,int) -> glHint
    void glLineWidth(float) -> glLineWidth
    void glPixelStorei(int,int) -> glPixelStorei
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glScissor(int,int,int,int) -> glScissor
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilMask(int) -> glStencilMask
    void glStencilOp(int,int,int) -> glStencilOp
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glViewport(int,int,int,int) -> glViewport
    void glAttachShader(int,int) -> glAttachShader
    void glBindAttribLocation(int,int,java.lang.String) -> glBindAttribLocation
    void glBindBuffer(int,int) -> glBindBuffer
    void glBindFramebuffer(int,int) -> glBindFramebuffer
    void glBindRenderbuffer(int,int) -> glBindRenderbuffer
    void glBlendColor(float,float,float,float) -> glBlendColor
    void glBlendEquation(int) -> glBlendEquation
    void glBlendEquationSeparate(int,int) -> glBlendEquationSeparate
    void glBlendFuncSeparate(int,int,int,int) -> glBlendFuncSeparate
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    int glCheckFramebufferStatus(int) -> glCheckFramebufferStatus
    void glCompileShader(int) -> glCompileShader
    int glCreateProgram() -> glCreateProgram
    int glCreateShader(int) -> glCreateShader
    void glDeleteBuffer(int) -> glDeleteBuffer
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glDeleteFramebuffer(int) -> glDeleteFramebuffer
    void glDeleteFramebuffers(int,java.nio.IntBuffer) -> glDeleteFramebuffers
    void glDeleteProgram(int) -> glDeleteProgram
    void glDeleteRenderbuffer(int) -> glDeleteRenderbuffer
    void glDeleteRenderbuffers(int,java.nio.IntBuffer) -> glDeleteRenderbuffers
    void glDeleteShader(int) -> glDeleteShader
    void glDetachShader(int,int) -> glDetachShader
    void glDisableVertexAttribArray(int) -> glDisableVertexAttribArray
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glEnableVertexAttribArray(int) -> glEnableVertexAttribArray
    void glFramebufferRenderbuffer(int,int,int,int) -> glFramebufferRenderbuffer
    void glFramebufferTexture2D(int,int,int,int,int) -> glFramebufferTexture2D
    int glGenBuffer() -> glGenBuffer
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGenerateMipmap(int) -> glGenerateMipmap
    int glGenFramebuffer() -> glGenFramebuffer
    void glGenFramebuffers(int,java.nio.IntBuffer) -> glGenFramebuffers
    int glGenRenderbuffer() -> glGenRenderbuffer
    void glGenRenderbuffers(int,java.nio.IntBuffer) -> glGenRenderbuffers
    java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveAttrib
    java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveUniform
    void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer) -> glGetAttachedShaders
    int glGetAttribLocation(int,java.lang.String) -> glGetAttribLocation
    void glGetBooleanv(int,java.nio.Buffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer) -> glGetFramebufferAttachmentParameteriv
    void glGetProgramiv(int,int,java.nio.IntBuffer) -> glGetProgramiv
    java.lang.String glGetProgramInfoLog(int) -> glGetProgramInfoLog
    void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer) -> glGetRenderbufferParameteriv
    void glGetShaderiv(int,int,java.nio.IntBuffer) -> glGetShaderiv
    java.lang.String glGetShaderInfoLog(int) -> glGetShaderInfoLog
    void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer) -> glGetShaderPrecisionFormat
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    void glGetUniformfv(int,int,java.nio.FloatBuffer) -> glGetUniformfv
    void glGetUniformiv(int,int,java.nio.IntBuffer) -> glGetUniformiv
    int glGetUniformLocation(int,java.lang.String) -> glGetUniformLocation
    void glGetVertexAttribfv(int,int,java.nio.FloatBuffer) -> glGetVertexAttribfv
    void glGetVertexAttribiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribiv
    void glGetVertexAttribPointerv(int,int,java.nio.Buffer) -> glGetVertexAttribPointerv
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsFramebuffer(int) -> glIsFramebuffer
    boolean glIsProgram(int) -> glIsProgram
    boolean glIsRenderbuffer(int) -> glIsRenderbuffer
    boolean glIsShader(int) -> glIsShader
    boolean glIsTexture(int) -> glIsTexture
    void glLinkProgram(int) -> glLinkProgram
    void glReleaseShaderCompiler() -> glReleaseShaderCompiler
    void glRenderbufferStorage(int,int,int,int) -> glRenderbufferStorage
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int) -> glShaderBinary
    void glShaderSource(int,java.lang.String) -> glShaderSource
    void glStencilFuncSeparate(int,int,int,int) -> glStencilFuncSeparate
    void glStencilMaskSeparate(int,int) -> glStencilMaskSeparate
    void glStencilOpSeparate(int,int,int,int) -> glStencilOpSeparate
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glUniform1f(int,float) -> glUniform1f
    void glUniform1fv(int,int,java.nio.FloatBuffer) -> glUniform1fv
    void glUniform1fv(int,int,float[],int) -> glUniform1fv
    void glUniform1i(int,int) -> glUniform1i
    void glUniform1iv(int,int,java.nio.IntBuffer) -> glUniform1iv
    void glUniform1iv(int,int,int[],int) -> glUniform1iv
    void glUniform2f(int,float,float) -> glUniform2f
    void glUniform2fv(int,int,java.nio.FloatBuffer) -> glUniform2fv
    void glUniform2fv(int,int,float[],int) -> glUniform2fv
    void glUniform2i(int,int,int) -> glUniform2i
    void glUniform2iv(int,int,java.nio.IntBuffer) -> glUniform2iv
    void glUniform2iv(int,int,int[],int) -> glUniform2iv
    void glUniform3f(int,float,float,float) -> glUniform3f
    void glUniform3fv(int,int,java.nio.FloatBuffer) -> glUniform3fv
    void glUniform3fv(int,int,float[],int) -> glUniform3fv
    void glUniform3i(int,int,int,int) -> glUniform3i
    void glUniform3iv(int,int,java.nio.IntBuffer) -> glUniform3iv
    void glUniform3iv(int,int,int[],int) -> glUniform3iv
    void glUniform4f(int,float,float,float,float) -> glUniform4f
    void glUniform4fv(int,int,java.nio.FloatBuffer) -> glUniform4fv
    void glUniform4fv(int,int,float[],int) -> glUniform4fv
    void glUniform4i(int,int,int,int,int) -> glUniform4i
    void glUniform4iv(int,int,java.nio.IntBuffer) -> glUniform4iv
    void glUniform4iv(int,int,int[],int) -> glUniform4iv
    void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2fv
    void glUniformMatrix2fv(int,int,boolean,float[],int) -> glUniformMatrix2fv
    void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3fv
    void glUniformMatrix3fv(int,int,boolean,float[],int) -> glUniformMatrix3fv
    void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4fv
    void glUniformMatrix4fv(int,int,boolean,float[],int) -> glUniformMatrix4fv
    void glUseProgram(int) -> glUseProgram
    void glValidateProgram(int) -> glValidateProgram
    void glVertexAttrib1f(int,float) -> glVertexAttrib1f
    void glVertexAttrib1fv(int,java.nio.FloatBuffer) -> glVertexAttrib1fv
    void glVertexAttrib2f(int,float,float) -> glVertexAttrib2f
    void glVertexAttrib2fv(int,java.nio.FloatBuffer) -> glVertexAttrib2fv
    void glVertexAttrib3f(int,float,float,float) -> glVertexAttrib3f
    void glVertexAttrib3fv(int,java.nio.FloatBuffer) -> glVertexAttrib3fv
    void glVertexAttrib4f(int,float,float,float,float) -> glVertexAttrib4f
    void glVertexAttrib4fv(int,java.nio.FloatBuffer) -> glVertexAttrib4fv
    void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer) -> glVertexAttribPointer
    void glVertexAttribPointer(int,int,int,boolean,int,int) -> glVertexAttribPointer
com.badlogic.gdx.graphics.GL30 -> com.badlogic.gdx.graphics.GL30:
    int GL_READ_BUFFER -> GL_READ_BUFFER
    int GL_UNPACK_ROW_LENGTH -> GL_UNPACK_ROW_LENGTH
    int GL_UNPACK_SKIP_ROWS -> GL_UNPACK_SKIP_ROWS
    int GL_UNPACK_SKIP_PIXELS -> GL_UNPACK_SKIP_PIXELS
    int GL_PACK_ROW_LENGTH -> GL_PACK_ROW_LENGTH
    int GL_PACK_SKIP_ROWS -> GL_PACK_SKIP_ROWS
    int GL_PACK_SKIP_PIXELS -> GL_PACK_SKIP_PIXELS
    int GL_COLOR -> GL_COLOR
    int GL_DEPTH -> GL_DEPTH
    int GL_STENCIL -> GL_STENCIL
    int GL_RED -> GL_RED
    int GL_RGB8 -> GL_RGB8
    int GL_RGBA8 -> GL_RGBA8
    int GL_RGB10_A2 -> GL_RGB10_A2
    int GL_TEXTURE_BINDING_3D -> GL_TEXTURE_BINDING_3D
    int GL_UNPACK_SKIP_IMAGES -> GL_UNPACK_SKIP_IMAGES
    int GL_UNPACK_IMAGE_HEIGHT -> GL_UNPACK_IMAGE_HEIGHT
    int GL_TEXTURE_3D -> GL_TEXTURE_3D
    int GL_TEXTURE_WRAP_R -> GL_TEXTURE_WRAP_R
    int GL_MAX_3D_TEXTURE_SIZE -> GL_MAX_3D_TEXTURE_SIZE
    int GL_UNSIGNED_INT_2_10_10_10_REV -> GL_UNSIGNED_INT_2_10_10_10_REV
    int GL_MAX_ELEMENTS_VERTICES -> GL_MAX_ELEMENTS_VERTICES
    int GL_MAX_ELEMENTS_INDICES -> GL_MAX_ELEMENTS_INDICES
    int GL_TEXTURE_MIN_LOD -> GL_TEXTURE_MIN_LOD
    int GL_TEXTURE_MAX_LOD -> GL_TEXTURE_MAX_LOD
    int GL_TEXTURE_BASE_LEVEL -> GL_TEXTURE_BASE_LEVEL
    int GL_TEXTURE_MAX_LEVEL -> GL_TEXTURE_MAX_LEVEL
    int GL_MIN -> GL_MIN
    int GL_MAX -> GL_MAX
    int GL_DEPTH_COMPONENT24 -> GL_DEPTH_COMPONENT24
    int GL_MAX_TEXTURE_LOD_BIAS -> GL_MAX_TEXTURE_LOD_BIAS
    int GL_TEXTURE_COMPARE_MODE -> GL_TEXTURE_COMPARE_MODE
    int GL_TEXTURE_COMPARE_FUNC -> GL_TEXTURE_COMPARE_FUNC
    int GL_CURRENT_QUERY -> GL_CURRENT_QUERY
    int GL_QUERY_RESULT -> GL_QUERY_RESULT
    int GL_QUERY_RESULT_AVAILABLE -> GL_QUERY_RESULT_AVAILABLE
    int GL_BUFFER_MAPPED -> GL_BUFFER_MAPPED
    int GL_BUFFER_MAP_POINTER -> GL_BUFFER_MAP_POINTER
    int GL_STREAM_READ -> GL_STREAM_READ
    int GL_STREAM_COPY -> GL_STREAM_COPY
    int GL_STATIC_READ -> GL_STATIC_READ
    int GL_STATIC_COPY -> GL_STATIC_COPY
    int GL_DYNAMIC_READ -> GL_DYNAMIC_READ
    int GL_DYNAMIC_COPY -> GL_DYNAMIC_COPY
    int GL_MAX_DRAW_BUFFERS -> GL_MAX_DRAW_BUFFERS
    int GL_DRAW_BUFFER0 -> GL_DRAW_BUFFER0
    int GL_DRAW_BUFFER1 -> GL_DRAW_BUFFER1
    int GL_DRAW_BUFFER2 -> GL_DRAW_BUFFER2
    int GL_DRAW_BUFFER3 -> GL_DRAW_BUFFER3
    int GL_DRAW_BUFFER4 -> GL_DRAW_BUFFER4
    int GL_DRAW_BUFFER5 -> GL_DRAW_BUFFER5
    int GL_DRAW_BUFFER6 -> GL_DRAW_BUFFER6
    int GL_DRAW_BUFFER7 -> GL_DRAW_BUFFER7
    int GL_DRAW_BUFFER8 -> GL_DRAW_BUFFER8
    int GL_DRAW_BUFFER9 -> GL_DRAW_BUFFER9
    int GL_DRAW_BUFFER10 -> GL_DRAW_BUFFER10
    int GL_DRAW_BUFFER11 -> GL_DRAW_BUFFER11
    int GL_DRAW_BUFFER12 -> GL_DRAW_BUFFER12
    int GL_DRAW_BUFFER13 -> GL_DRAW_BUFFER13
    int GL_DRAW_BUFFER14 -> GL_DRAW_BUFFER14
    int GL_DRAW_BUFFER15 -> GL_DRAW_BUFFER15
    int GL_MAX_FRAGMENT_UNIFORM_COMPONENTS -> GL_MAX_FRAGMENT_UNIFORM_COMPONENTS
    int GL_MAX_VERTEX_UNIFORM_COMPONENTS -> GL_MAX_VERTEX_UNIFORM_COMPONENTS
    int GL_SAMPLER_3D -> GL_SAMPLER_3D
    int GL_SAMPLER_2D_SHADOW -> GL_SAMPLER_2D_SHADOW
    int GL_FRAGMENT_SHADER_DERIVATIVE_HINT -> GL_FRAGMENT_SHADER_DERIVATIVE_HINT
    int GL_PIXEL_PACK_BUFFER -> GL_PIXEL_PACK_BUFFER
    int GL_PIXEL_UNPACK_BUFFER -> GL_PIXEL_UNPACK_BUFFER
    int GL_PIXEL_PACK_BUFFER_BINDING -> GL_PIXEL_PACK_BUFFER_BINDING
    int GL_PIXEL_UNPACK_BUFFER_BINDING -> GL_PIXEL_UNPACK_BUFFER_BINDING
    int GL_FLOAT_MAT2x3 -> GL_FLOAT_MAT2x3
    int GL_FLOAT_MAT2x4 -> GL_FLOAT_MAT2x4
    int GL_FLOAT_MAT3x2 -> GL_FLOAT_MAT3x2
    int GL_FLOAT_MAT3x4 -> GL_FLOAT_MAT3x4
    int GL_FLOAT_MAT4x2 -> GL_FLOAT_MAT4x2
    int GL_FLOAT_MAT4x3 -> GL_FLOAT_MAT4x3
    int GL_SRGB -> GL_SRGB
    int GL_SRGB8 -> GL_SRGB8
    int GL_SRGB8_ALPHA8 -> GL_SRGB8_ALPHA8
    int GL_COMPARE_REF_TO_TEXTURE -> GL_COMPARE_REF_TO_TEXTURE
    int GL_MAJOR_VERSION -> GL_MAJOR_VERSION
    int GL_MINOR_VERSION -> GL_MINOR_VERSION
    int GL_NUM_EXTENSIONS -> GL_NUM_EXTENSIONS
    int GL_RGBA32F -> GL_RGBA32F
    int GL_RGB32F -> GL_RGB32F
    int GL_RGBA16F -> GL_RGBA16F
    int GL_RGB16F -> GL_RGB16F
    int GL_VERTEX_ATTRIB_ARRAY_INTEGER -> GL_VERTEX_ATTRIB_ARRAY_INTEGER
    int GL_MAX_ARRAY_TEXTURE_LAYERS -> GL_MAX_ARRAY_TEXTURE_LAYERS
    int GL_MIN_PROGRAM_TEXEL_OFFSET -> GL_MIN_PROGRAM_TEXEL_OFFSET
    int GL_MAX_PROGRAM_TEXEL_OFFSET -> GL_MAX_PROGRAM_TEXEL_OFFSET
    int GL_MAX_VARYING_COMPONENTS -> GL_MAX_VARYING_COMPONENTS
    int GL_TEXTURE_2D_ARRAY -> GL_TEXTURE_2D_ARRAY
    int GL_TEXTURE_BINDING_2D_ARRAY -> GL_TEXTURE_BINDING_2D_ARRAY
    int GL_R11F_G11F_B10F -> GL_R11F_G11F_B10F
    int GL_UNSIGNED_INT_10F_11F_11F_REV -> GL_UNSIGNED_INT_10F_11F_11F_REV
    int GL_RGB9_E5 -> GL_RGB9_E5
    int GL_UNSIGNED_INT_5_9_9_9_REV -> GL_UNSIGNED_INT_5_9_9_9_REV
    int GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH -> GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH
    int GL_TRANSFORM_FEEDBACK_BUFFER_MODE -> GL_TRANSFORM_FEEDBACK_BUFFER_MODE
    int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS -> GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS
    int GL_TRANSFORM_FEEDBACK_VARYINGS -> GL_TRANSFORM_FEEDBACK_VARYINGS
    int GL_TRANSFORM_FEEDBACK_BUFFER_START -> GL_TRANSFORM_FEEDBACK_BUFFER_START
    int GL_TRANSFORM_FEEDBACK_BUFFER_SIZE -> GL_TRANSFORM_FEEDBACK_BUFFER_SIZE
    int GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN -> GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN
    int GL_RASTERIZER_DISCARD -> GL_RASTERIZER_DISCARD
    int GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS -> GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS
    int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS -> GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS
    int GL_INTERLEAVED_ATTRIBS -> GL_INTERLEAVED_ATTRIBS
    int GL_SEPARATE_ATTRIBS -> GL_SEPARATE_ATTRIBS
    int GL_TRANSFORM_FEEDBACK_BUFFER -> GL_TRANSFORM_FEEDBACK_BUFFER
    int GL_TRANSFORM_FEEDBACK_BUFFER_BINDING -> GL_TRANSFORM_FEEDBACK_BUFFER_BINDING
    int GL_RGBA32UI -> GL_RGBA32UI
    int GL_RGB32UI -> GL_RGB32UI
    int GL_RGBA16UI -> GL_RGBA16UI
    int GL_RGB16UI -> GL_RGB16UI
    int GL_RGBA8UI -> GL_RGBA8UI
    int GL_RGB8UI -> GL_RGB8UI
    int GL_RGBA32I -> GL_RGBA32I
    int GL_RGB32I -> GL_RGB32I
    int GL_RGBA16I -> GL_RGBA16I
    int GL_RGB16I -> GL_RGB16I
    int GL_RGBA8I -> GL_RGBA8I
    int GL_RGB8I -> GL_RGB8I
    int GL_RED_INTEGER -> GL_RED_INTEGER
    int GL_RGB_INTEGER -> GL_RGB_INTEGER
    int GL_RGBA_INTEGER -> GL_RGBA_INTEGER
    int GL_SAMPLER_2D_ARRAY -> GL_SAMPLER_2D_ARRAY
    int GL_SAMPLER_2D_ARRAY_SHADOW -> GL_SAMPLER_2D_ARRAY_SHADOW
    int GL_SAMPLER_CUBE_SHADOW -> GL_SAMPLER_CUBE_SHADOW
    int GL_UNSIGNED_INT_VEC2 -> GL_UNSIGNED_INT_VEC2
    int GL_UNSIGNED_INT_VEC3 -> GL_UNSIGNED_INT_VEC3
    int GL_UNSIGNED_INT_VEC4 -> GL_UNSIGNED_INT_VEC4
    int GL_INT_SAMPLER_2D -> GL_INT_SAMPLER_2D
    int GL_INT_SAMPLER_3D -> GL_INT_SAMPLER_3D
    int GL_INT_SAMPLER_CUBE -> GL_INT_SAMPLER_CUBE
    int GL_INT_SAMPLER_2D_ARRAY -> GL_INT_SAMPLER_2D_ARRAY
    int GL_UNSIGNED_INT_SAMPLER_2D -> GL_UNSIGNED_INT_SAMPLER_2D
    int GL_UNSIGNED_INT_SAMPLER_3D -> GL_UNSIGNED_INT_SAMPLER_3D
    int GL_UNSIGNED_INT_SAMPLER_CUBE -> GL_UNSIGNED_INT_SAMPLER_CUBE
    int GL_UNSIGNED_INT_SAMPLER_2D_ARRAY -> GL_UNSIGNED_INT_SAMPLER_2D_ARRAY
    int GL_BUFFER_ACCESS_FLAGS -> GL_BUFFER_ACCESS_FLAGS
    int GL_BUFFER_MAP_LENGTH -> GL_BUFFER_MAP_LENGTH
    int GL_BUFFER_MAP_OFFSET -> GL_BUFFER_MAP_OFFSET
    int GL_DEPTH_COMPONENT32F -> GL_DEPTH_COMPONENT32F
    int GL_DEPTH32F_STENCIL8 -> GL_DEPTH32F_STENCIL8
    int GL_FLOAT_32_UNSIGNED_INT_24_8_REV -> GL_FLOAT_32_UNSIGNED_INT_24_8_REV
    int GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING -> GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
    int GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE -> GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
    int GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE -> GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
    int GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE -> GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
    int GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE -> GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
    int GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE -> GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
    int GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE -> GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
    int GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE -> GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
    int GL_FRAMEBUFFER_DEFAULT -> GL_FRAMEBUFFER_DEFAULT
    int GL_FRAMEBUFFER_UNDEFINED -> GL_FRAMEBUFFER_UNDEFINED
    int GL_DEPTH_STENCIL_ATTACHMENT -> GL_DEPTH_STENCIL_ATTACHMENT
    int GL_DEPTH_STENCIL -> GL_DEPTH_STENCIL
    int GL_UNSIGNED_INT_24_8 -> GL_UNSIGNED_INT_24_8
    int GL_DEPTH24_STENCIL8 -> GL_DEPTH24_STENCIL8
    int GL_UNSIGNED_NORMALIZED -> GL_UNSIGNED_NORMALIZED
    int GL_DRAW_FRAMEBUFFER_BINDING -> GL_DRAW_FRAMEBUFFER_BINDING
    int GL_READ_FRAMEBUFFER -> GL_READ_FRAMEBUFFER
    int GL_DRAW_FRAMEBUFFER -> GL_DRAW_FRAMEBUFFER
    int GL_READ_FRAMEBUFFER_BINDING -> GL_READ_FRAMEBUFFER_BINDING
    int GL_RENDERBUFFER_SAMPLES -> GL_RENDERBUFFER_SAMPLES
    int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER -> GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
    int GL_MAX_COLOR_ATTACHMENTS -> GL_MAX_COLOR_ATTACHMENTS
    int GL_COLOR_ATTACHMENT1 -> GL_COLOR_ATTACHMENT1
    int GL_COLOR_ATTACHMENT2 -> GL_COLOR_ATTACHMENT2
    int GL_COLOR_ATTACHMENT3 -> GL_COLOR_ATTACHMENT3
    int GL_COLOR_ATTACHMENT4 -> GL_COLOR_ATTACHMENT4
    int GL_COLOR_ATTACHMENT5 -> GL_COLOR_ATTACHMENT5
    int GL_COLOR_ATTACHMENT6 -> GL_COLOR_ATTACHMENT6
    int GL_COLOR_ATTACHMENT7 -> GL_COLOR_ATTACHMENT7
    int GL_COLOR_ATTACHMENT8 -> GL_COLOR_ATTACHMENT8
    int GL_COLOR_ATTACHMENT9 -> GL_COLOR_ATTACHMENT9
    int GL_COLOR_ATTACHMENT10 -> GL_COLOR_ATTACHMENT10
    int GL_COLOR_ATTACHMENT11 -> GL_COLOR_ATTACHMENT11
    int GL_COLOR_ATTACHMENT12 -> GL_COLOR_ATTACHMENT12
    int GL_COLOR_ATTACHMENT13 -> GL_COLOR_ATTACHMENT13
    int GL_COLOR_ATTACHMENT14 -> GL_COLOR_ATTACHMENT14
    int GL_COLOR_ATTACHMENT15 -> GL_COLOR_ATTACHMENT15
    int GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE -> GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
    int GL_MAX_SAMPLES -> GL_MAX_SAMPLES
    int GL_HALF_FLOAT -> GL_HALF_FLOAT
    int GL_MAP_READ_BIT -> GL_MAP_READ_BIT
    int GL_MAP_WRITE_BIT -> GL_MAP_WRITE_BIT
    int GL_MAP_INVALIDATE_RANGE_BIT -> GL_MAP_INVALIDATE_RANGE_BIT
    int GL_MAP_INVALIDATE_BUFFER_BIT -> GL_MAP_INVALIDATE_BUFFER_BIT
    int GL_MAP_FLUSH_EXPLICIT_BIT -> GL_MAP_FLUSH_EXPLICIT_BIT
    int GL_MAP_UNSYNCHRONIZED_BIT -> GL_MAP_UNSYNCHRONIZED_BIT
    int GL_RG -> GL_RG
    int GL_RG_INTEGER -> GL_RG_INTEGER
    int GL_R8 -> GL_R8
    int GL_RG8 -> GL_RG8
    int GL_R16F -> GL_R16F
    int GL_R32F -> GL_R32F
    int GL_RG16F -> GL_RG16F
    int GL_RG32F -> GL_RG32F
    int GL_R8I -> GL_R8I
    int GL_R8UI -> GL_R8UI
    int GL_R16I -> GL_R16I
    int GL_R16UI -> GL_R16UI
    int GL_R32I -> GL_R32I
    int GL_R32UI -> GL_R32UI
    int GL_RG8I -> GL_RG8I
    int GL_RG8UI -> GL_RG8UI
    int GL_RG16I -> GL_RG16I
    int GL_RG16UI -> GL_RG16UI
    int GL_RG32I -> GL_RG32I
    int GL_RG32UI -> GL_RG32UI
    int GL_VERTEX_ARRAY_BINDING -> GL_VERTEX_ARRAY_BINDING
    int GL_R8_SNORM -> GL_R8_SNORM
    int GL_RG8_SNORM -> GL_RG8_SNORM
    int GL_RGB8_SNORM -> GL_RGB8_SNORM
    int GL_RGBA8_SNORM -> GL_RGBA8_SNORM
    int GL_SIGNED_NORMALIZED -> GL_SIGNED_NORMALIZED
    int GL_PRIMITIVE_RESTART_FIXED_INDEX -> GL_PRIMITIVE_RESTART_FIXED_INDEX
    int GL_COPY_READ_BUFFER -> GL_COPY_READ_BUFFER
    int GL_COPY_WRITE_BUFFER -> GL_COPY_WRITE_BUFFER
    int GL_COPY_READ_BUFFER_BINDING -> GL_COPY_READ_BUFFER_BINDING
    int GL_COPY_WRITE_BUFFER_BINDING -> GL_COPY_WRITE_BUFFER_BINDING
    int GL_UNIFORM_BUFFER -> GL_UNIFORM_BUFFER
    int GL_UNIFORM_BUFFER_BINDING -> GL_UNIFORM_BUFFER_BINDING
    int GL_UNIFORM_BUFFER_START -> GL_UNIFORM_BUFFER_START
    int GL_UNIFORM_BUFFER_SIZE -> GL_UNIFORM_BUFFER_SIZE
    int GL_MAX_VERTEX_UNIFORM_BLOCKS -> GL_MAX_VERTEX_UNIFORM_BLOCKS
    int GL_MAX_FRAGMENT_UNIFORM_BLOCKS -> GL_MAX_FRAGMENT_UNIFORM_BLOCKS
    int GL_MAX_COMBINED_UNIFORM_BLOCKS -> GL_MAX_COMBINED_UNIFORM_BLOCKS
    int GL_MAX_UNIFORM_BUFFER_BINDINGS -> GL_MAX_UNIFORM_BUFFER_BINDINGS
    int GL_MAX_UNIFORM_BLOCK_SIZE -> GL_MAX_UNIFORM_BLOCK_SIZE
    int GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS -> GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS
    int GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS -> GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS
    int GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT -> GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT
    int GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH -> GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH
    int GL_ACTIVE_UNIFORM_BLOCKS -> GL_ACTIVE_UNIFORM_BLOCKS
    int GL_UNIFORM_TYPE -> GL_UNIFORM_TYPE
    int GL_UNIFORM_SIZE -> GL_UNIFORM_SIZE
    int GL_UNIFORM_NAME_LENGTH -> GL_UNIFORM_NAME_LENGTH
    int GL_UNIFORM_BLOCK_INDEX -> GL_UNIFORM_BLOCK_INDEX
    int GL_UNIFORM_OFFSET -> GL_UNIFORM_OFFSET
    int GL_UNIFORM_ARRAY_STRIDE -> GL_UNIFORM_ARRAY_STRIDE
    int GL_UNIFORM_MATRIX_STRIDE -> GL_UNIFORM_MATRIX_STRIDE
    int GL_UNIFORM_IS_ROW_MAJOR -> GL_UNIFORM_IS_ROW_MAJOR
    int GL_UNIFORM_BLOCK_BINDING -> GL_UNIFORM_BLOCK_BINDING
    int GL_UNIFORM_BLOCK_DATA_SIZE -> GL_UNIFORM_BLOCK_DATA_SIZE
    int GL_UNIFORM_BLOCK_NAME_LENGTH -> GL_UNIFORM_BLOCK_NAME_LENGTH
    int GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS -> GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS
    int GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES -> GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES
    int GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER -> GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER
    int GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER -> GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER
    int GL_INVALID_INDEX -> GL_INVALID_INDEX
    int GL_MAX_VERTEX_OUTPUT_COMPONENTS -> GL_MAX_VERTEX_OUTPUT_COMPONENTS
    int GL_MAX_FRAGMENT_INPUT_COMPONENTS -> GL_MAX_FRAGMENT_INPUT_COMPONENTS
    int GL_MAX_SERVER_WAIT_TIMEOUT -> GL_MAX_SERVER_WAIT_TIMEOUT
    int GL_OBJECT_TYPE -> GL_OBJECT_TYPE
    int GL_SYNC_CONDITION -> GL_SYNC_CONDITION
    int GL_SYNC_STATUS -> GL_SYNC_STATUS
    int GL_SYNC_FLAGS -> GL_SYNC_FLAGS
    int GL_SYNC_FENCE -> GL_SYNC_FENCE
    int GL_SYNC_GPU_COMMANDS_COMPLETE -> GL_SYNC_GPU_COMMANDS_COMPLETE
    int GL_UNSIGNALED -> GL_UNSIGNALED
    int GL_SIGNALED -> GL_SIGNALED
    int GL_ALREADY_SIGNALED -> GL_ALREADY_SIGNALED
    int GL_TIMEOUT_EXPIRED -> GL_TIMEOUT_EXPIRED
    int GL_CONDITION_SATISFIED -> GL_CONDITION_SATISFIED
    int GL_WAIT_FAILED -> GL_WAIT_FAILED
    int GL_SYNC_FLUSH_COMMANDS_BIT -> GL_SYNC_FLUSH_COMMANDS_BIT
    long GL_TIMEOUT_IGNORED -> GL_TIMEOUT_IGNORED
    int GL_VERTEX_ATTRIB_ARRAY_DIVISOR -> GL_VERTEX_ATTRIB_ARRAY_DIVISOR
    int GL_ANY_SAMPLES_PASSED -> GL_ANY_SAMPLES_PASSED
    int GL_ANY_SAMPLES_PASSED_CONSERVATIVE -> GL_ANY_SAMPLES_PASSED_CONSERVATIVE
    int GL_SAMPLER_BINDING -> GL_SAMPLER_BINDING
    int GL_RGB10_A2UI -> GL_RGB10_A2UI
    int GL_TEXTURE_SWIZZLE_R -> GL_TEXTURE_SWIZZLE_R
    int GL_TEXTURE_SWIZZLE_G -> GL_TEXTURE_SWIZZLE_G
    int GL_TEXTURE_SWIZZLE_B -> GL_TEXTURE_SWIZZLE_B
    int GL_TEXTURE_SWIZZLE_A -> GL_TEXTURE_SWIZZLE_A
    int GL_GREEN -> GL_GREEN
    int GL_BLUE -> GL_BLUE
    int GL_INT_2_10_10_10_REV -> GL_INT_2_10_10_10_REV
    int GL_TRANSFORM_FEEDBACK -> GL_TRANSFORM_FEEDBACK
    int GL_TRANSFORM_FEEDBACK_PAUSED -> GL_TRANSFORM_FEEDBACK_PAUSED
    int GL_TRANSFORM_FEEDBACK_ACTIVE -> GL_TRANSFORM_FEEDBACK_ACTIVE
    int GL_TRANSFORM_FEEDBACK_BINDING -> GL_TRANSFORM_FEEDBACK_BINDING
    int GL_PROGRAM_BINARY_RETRIEVABLE_HINT -> GL_PROGRAM_BINARY_RETRIEVABLE_HINT
    int GL_PROGRAM_BINARY_LENGTH -> GL_PROGRAM_BINARY_LENGTH
    int GL_NUM_PROGRAM_BINARY_FORMATS -> GL_NUM_PROGRAM_BINARY_FORMATS
    int GL_PROGRAM_BINARY_FORMATS -> GL_PROGRAM_BINARY_FORMATS
    int GL_COMPRESSED_R11_EAC -> GL_COMPRESSED_R11_EAC
    int GL_COMPRESSED_SIGNED_R11_EAC -> GL_COMPRESSED_SIGNED_R11_EAC
    int GL_COMPRESSED_RG11_EAC -> GL_COMPRESSED_RG11_EAC
    int GL_COMPRESSED_SIGNED_RG11_EAC -> GL_COMPRESSED_SIGNED_RG11_EAC
    int GL_COMPRESSED_RGB8_ETC2 -> GL_COMPRESSED_RGB8_ETC2
    int GL_COMPRESSED_SRGB8_ETC2 -> GL_COMPRESSED_SRGB8_ETC2
    int GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 -> GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2
    int GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 -> GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2
    int GL_COMPRESSED_RGBA8_ETC2_EAC -> GL_COMPRESSED_RGBA8_ETC2_EAC
    int GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC -> GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC
    int GL_TEXTURE_IMMUTABLE_FORMAT -> GL_TEXTURE_IMMUTABLE_FORMAT
    int GL_MAX_ELEMENT_INDEX -> GL_MAX_ELEMENT_INDEX
    int GL_NUM_SAMPLE_COUNTS -> GL_NUM_SAMPLE_COUNTS
    int GL_TEXTURE_IMMUTABLE_LEVELS -> GL_TEXTURE_IMMUTABLE_LEVELS
    void glReadBuffer(int) -> glReadBuffer
    void glDrawRangeElements(int,int,int,int,int,java.nio.Buffer) -> glDrawRangeElements
    void glDrawRangeElements(int,int,int,int,int,int) -> glDrawRangeElements
    void glTexImage3D(int,int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage3D
    void glTexImage3D(int,int,int,int,int,int,int,int,int,int) -> glTexImage3D
    void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage3D
    void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,int) -> glTexSubImage3D
    void glCopyTexSubImage3D(int,int,int,int,int,int,int,int,int) -> glCopyTexSubImage3D
    void glGenQueries(int,int[],int) -> glGenQueries
    void glGenQueries(int,java.nio.IntBuffer) -> glGenQueries
    void glDeleteQueries(int,int[],int) -> glDeleteQueries
    void glDeleteQueries(int,java.nio.IntBuffer) -> glDeleteQueries
    boolean glIsQuery(int) -> glIsQuery
    void glBeginQuery(int,int) -> glBeginQuery
    void glEndQuery(int) -> glEndQuery
    void glGetQueryiv(int,int,java.nio.IntBuffer) -> glGetQueryiv
    void glGetQueryObjectuiv(int,int,java.nio.IntBuffer) -> glGetQueryObjectuiv
    boolean glUnmapBuffer(int) -> glUnmapBuffer
    java.nio.Buffer glGetBufferPointerv(int,int) -> glGetBufferPointerv
    void glDrawBuffers(int,java.nio.IntBuffer) -> glDrawBuffers
    void glUniformMatrix2x3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2x3fv
    void glUniformMatrix3x2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3x2fv
    void glUniformMatrix2x4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2x4fv
    void glUniformMatrix4x2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4x2fv
    void glUniformMatrix3x4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3x4fv
    void glUniformMatrix4x3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4x3fv
    void glBlitFramebuffer(int,int,int,int,int,int,int,int,int,int) -> glBlitFramebuffer
    void glRenderbufferStorageMultisample(int,int,int,int,int) -> glRenderbufferStorageMultisample
    void glFramebufferTextureLayer(int,int,int,int,int) -> glFramebufferTextureLayer
    void glFlushMappedBufferRange(int,int,int) -> glFlushMappedBufferRange
    void glBindVertexArray(int) -> glBindVertexArray
    void glDeleteVertexArrays(int,int[],int) -> glDeleteVertexArrays
    void glDeleteVertexArrays(int,java.nio.IntBuffer) -> glDeleteVertexArrays
    void glGenVertexArrays(int,int[],int) -> glGenVertexArrays
    void glGenVertexArrays(int,java.nio.IntBuffer) -> glGenVertexArrays
    boolean glIsVertexArray(int) -> glIsVertexArray
    void glBeginTransformFeedback(int) -> glBeginTransformFeedback
    void glEndTransformFeedback() -> glEndTransformFeedback
    void glBindBufferRange(int,int,int,int,int) -> glBindBufferRange
    void glBindBufferBase(int,int,int) -> glBindBufferBase
    void glTransformFeedbackVaryings(int,java.lang.String[],int) -> glTransformFeedbackVaryings
    void glVertexAttribIPointer(int,int,int,int,int) -> glVertexAttribIPointer
    void glGetVertexAttribIiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribIiv
    void glGetVertexAttribIuiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribIuiv
    void glVertexAttribI4i(int,int,int,int,int) -> glVertexAttribI4i
    void glVertexAttribI4ui(int,int,int,int,int) -> glVertexAttribI4ui
    void glGetUniformuiv(int,int,java.nio.IntBuffer) -> glGetUniformuiv
    int glGetFragDataLocation(int,java.lang.String) -> glGetFragDataLocation
    void glUniform1uiv(int,int,java.nio.IntBuffer) -> glUniform1uiv
    void glUniform3uiv(int,int,java.nio.IntBuffer) -> glUniform3uiv
    void glUniform4uiv(int,int,java.nio.IntBuffer) -> glUniform4uiv
    void glClearBufferiv(int,int,java.nio.IntBuffer) -> glClearBufferiv
    void glClearBufferuiv(int,int,java.nio.IntBuffer) -> glClearBufferuiv
    void glClearBufferfv(int,int,java.nio.FloatBuffer) -> glClearBufferfv
    void glClearBufferfi(int,int,float,int) -> glClearBufferfi
    java.lang.String glGetStringi(int,int) -> glGetStringi
    void glCopyBufferSubData(int,int,int,int,int) -> glCopyBufferSubData
    void glGetUniformIndices(int,java.lang.String[],java.nio.IntBuffer) -> glGetUniformIndices
    void glGetActiveUniformsiv(int,int,java.nio.IntBuffer,int,java.nio.IntBuffer) -> glGetActiveUniformsiv
    int glGetUniformBlockIndex(int,java.lang.String) -> glGetUniformBlockIndex
    void glGetActiveUniformBlockiv(int,int,int,java.nio.IntBuffer) -> glGetActiveUniformBlockiv
    void glGetActiveUniformBlockName(int,int,java.nio.Buffer,java.nio.Buffer) -> glGetActiveUniformBlockName
    java.lang.String glGetActiveUniformBlockName(int,int) -> glGetActiveUniformBlockName
    void glUniformBlockBinding(int,int,int) -> glUniformBlockBinding
    void glDrawArraysInstanced(int,int,int,int) -> glDrawArraysInstanced
    void glDrawElementsInstanced(int,int,int,int,int) -> glDrawElementsInstanced
    void glGetInteger64v(int,java.nio.LongBuffer) -> glGetInteger64v
    void glGetBufferParameteri64v(int,int,java.nio.LongBuffer) -> glGetBufferParameteri64v
    void glGenSamplers(int,int[],int) -> glGenSamplers
    void glGenSamplers(int,java.nio.IntBuffer) -> glGenSamplers
    void glDeleteSamplers(int,int[],int) -> glDeleteSamplers
    void glDeleteSamplers(int,java.nio.IntBuffer) -> glDeleteSamplers
    boolean glIsSampler(int) -> glIsSampler
    void glBindSampler(int,int) -> glBindSampler
    void glSamplerParameteri(int,int,int) -> glSamplerParameteri
    void glSamplerParameteriv(int,int,java.nio.IntBuffer) -> glSamplerParameteriv
    void glSamplerParameterf(int,int,float) -> glSamplerParameterf
    void glSamplerParameterfv(int,int,java.nio.FloatBuffer) -> glSamplerParameterfv
    void glGetSamplerParameteriv(int,int,java.nio.IntBuffer) -> glGetSamplerParameteriv
    void glGetSamplerParameterfv(int,int,java.nio.FloatBuffer) -> glGetSamplerParameterfv
    void glVertexAttribDivisor(int,int) -> glVertexAttribDivisor
    void glBindTransformFeedback(int,int) -> glBindTransformFeedback
    void glDeleteTransformFeedbacks(int,int[],int) -> glDeleteTransformFeedbacks
    void glDeleteTransformFeedbacks(int,java.nio.IntBuffer) -> glDeleteTransformFeedbacks
    void glGenTransformFeedbacks(int,int[],int) -> glGenTransformFeedbacks
    void glGenTransformFeedbacks(int,java.nio.IntBuffer) -> glGenTransformFeedbacks
    boolean glIsTransformFeedback(int) -> glIsTransformFeedback
    void glPauseTransformFeedback() -> glPauseTransformFeedback
    void glResumeTransformFeedback() -> glResumeTransformFeedback
    void glProgramParameteri(int,int,int) -> glProgramParameteri
    void glInvalidateFramebuffer(int,int,java.nio.IntBuffer) -> glInvalidateFramebuffer
    void glInvalidateSubFramebuffer(int,int,java.nio.IntBuffer,int,int,int,int) -> glInvalidateSubFramebuffer
com.badlogic.gdx.graphics.GLTexture -> com.badlogic.gdx.graphics.GLTexture:
    int glTarget -> glTarget
    int glHandle -> glHandle
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> minFilter
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> magFilter
    com.badlogic.gdx.graphics.Texture$TextureWrap uWrap -> uWrap
    com.badlogic.gdx.graphics.Texture$TextureWrap vWrap -> vWrap
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    int getDepth() -> getDepth
    boolean isManaged() -> isManaged
    void reload() -> reload
    void bind() -> bind
    void bind(int) -> bind
    com.badlogic.gdx.graphics.Texture$TextureFilter getMinFilter() -> getMinFilter
    com.badlogic.gdx.graphics.Texture$TextureFilter getMagFilter() -> getMagFilter
    com.badlogic.gdx.graphics.Texture$TextureWrap getUWrap() -> getUWrap
    com.badlogic.gdx.graphics.Texture$TextureWrap getVWrap() -> getVWrap
    int getTextureObjectHandle() -> getTextureObjectHandle
    void unsafeSetWrap(com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap) -> unsafeSetWrap
    void unsafeSetWrap(com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap,boolean) -> unsafeSetWrap
    void setWrap(com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap) -> setWrap
    void unsafeSetFilter(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter) -> unsafeSetFilter
    void unsafeSetFilter(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,boolean) -> unsafeSetFilter
    void setFilter(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter) -> setFilter
    void delete() -> delete
    void dispose() -> dispose
    com.badlogic.gdx.graphics.TextureData createTextureData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap$Format,boolean) -> createTextureData
    com.badlogic.gdx.graphics.TextureData createTextureData(com.badlogic.gdx.files.FileHandle,boolean) -> createTextureData
    int createGLHandle() -> createGLHandle
    void uploadImageData(int,com.badlogic.gdx.graphics.TextureData) -> uploadImageData
    void uploadImageData(int,com.badlogic.gdx.graphics.TextureData,int) -> uploadImageData
com.badlogic.gdx.graphics.Mesh -> com.badlogic.gdx.graphics.Mesh:
    java.util.Map meshes -> meshes
    com.badlogic.gdx.graphics.glutils.VertexData vertices -> vertices
    com.badlogic.gdx.graphics.glutils.IndexData indices -> indices
    boolean autoBind -> autoBind
    boolean isVertexArray -> isVertexArray
    com.badlogic.gdx.math.Vector3 tmpV -> tmpV
    com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh,com.badlogic.gdx.math.Matrix4[]) -> create
    com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh[]) -> create
    com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh[],com.badlogic.gdx.math.Matrix4[]) -> create
    com.badlogic.gdx.graphics.Mesh setVertices(float[]) -> setVertices
    com.badlogic.gdx.graphics.Mesh setVertices(float[],int,int) -> setVertices
    com.badlogic.gdx.graphics.Mesh updateVertices(int,float[]) -> updateVertices
    com.badlogic.gdx.graphics.Mesh updateVertices(int,float[],int,int) -> updateVertices
    float[] getVertices(float[]) -> getVertices
    float[] getVertices(int,float[]) -> getVertices
    float[] getVertices(int,int,float[]) -> getVertices
    float[] getVertices(int,int,float[],int) -> getVertices
    com.badlogic.gdx.graphics.Mesh setIndices(short[]) -> setIndices
    com.badlogic.gdx.graphics.Mesh setIndices(short[],int,int) -> setIndices
    void getIndices(short[]) -> getIndices
    void getIndices(short[],int) -> getIndices
    void getIndices(int,short[],int) -> getIndices
    void getIndices(int,int,short[],int) -> getIndices
    int getNumIndices() -> getNumIndices
    int getNumVertices() -> getNumVertices
    int getMaxVertices() -> getMaxVertices
    int getMaxIndices() -> getMaxIndices
    int getVertexSize() -> getVertexSize
    void setAutoBind(boolean) -> setAutoBind
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> bind
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> bind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> unbind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> unbind
    void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,int) -> render
    void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,int,int,int) -> render
    void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,int,int,int,boolean) -> render
    void dispose() -> dispose
    com.badlogic.gdx.graphics.VertexAttribute getVertexAttribute(int) -> getVertexAttribute
    com.badlogic.gdx.graphics.VertexAttributes getVertexAttributes() -> getVertexAttributes
    java.nio.FloatBuffer getVerticesBuffer() -> getVerticesBuffer
    com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox() -> calculateBoundingBox
    void calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> calculateBoundingBox
    com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int) -> calculateBoundingBox
    com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int,com.badlogic.gdx.math.Matrix4) -> calculateBoundingBox
    com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int) -> extendBoundingBox
    com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int,com.badlogic.gdx.math.Matrix4) -> extendBoundingBox
    float calculateRadiusSquared(float,float,float,int,int,com.badlogic.gdx.math.Matrix4) -> calculateRadiusSquared
    float calculateRadius(float,float,float,int,int,com.badlogic.gdx.math.Matrix4) -> calculateRadius
    float calculateRadius(com.badlogic.gdx.math.Vector3,int,int,com.badlogic.gdx.math.Matrix4) -> calculateRadius
    float calculateRadius(float,float,float,int,int) -> calculateRadius
    float calculateRadius(com.badlogic.gdx.math.Vector3,int,int) -> calculateRadius
    float calculateRadius(float,float,float) -> calculateRadius
    float calculateRadius(com.badlogic.gdx.math.Vector3) -> calculateRadius
    java.nio.ShortBuffer getIndicesBuffer() -> getIndicesBuffer
    void addManagedMesh(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.Mesh) -> addManagedMesh
    void invalidateAllMeshes(com.badlogic.gdx.Application) -> invalidateAllMeshes
    void clearAllMeshes(com.badlogic.gdx.Application) -> clearAllMeshes
    java.lang.String getManagedStatus() -> getManagedStatus
    void scale(float,float,float) -> scale
    void transform(com.badlogic.gdx.math.Matrix4) -> transform
    void transform(com.badlogic.gdx.math.Matrix4,int,int) -> transform
    void transform(com.badlogic.gdx.math.Matrix4,float[],int,int,int,int,int) -> transform
    void transformUV(com.badlogic.gdx.math.Matrix3) -> transformUV
    void transformUV(com.badlogic.gdx.math.Matrix3,int,int) -> transformUV
    void transformUV(com.badlogic.gdx.math.Matrix3,float[],int,int,int,int) -> transformUV
    com.badlogic.gdx.graphics.Mesh copy(boolean,boolean,int[]) -> copy
    com.badlogic.gdx.graphics.Mesh copy(boolean) -> copy
com.badlogic.gdx.graphics.Mesh$VertexDataType -> com.badlogic.gdx.graphics.Mesh$VertexDataType:
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexArray -> VertexArray
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexBufferObject -> VertexBufferObject
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexBufferObjectSubData -> VertexBufferObjectSubData
    com.badlogic.gdx.graphics.Mesh$VertexDataType[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.Mesh$VertexDataType[] values() -> values
    com.badlogic.gdx.graphics.Mesh$VertexDataType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.OrthographicCamera -> com.badlogic.gdx.graphics.OrthographicCamera:
    float zoom -> zoom
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    void update() -> update
    void update(boolean) -> update
    void setToOrtho(boolean) -> setToOrtho
    void setToOrtho(boolean,float,float) -> setToOrtho
    void rotate(float) -> rotate
    void translate(float,float) -> translate
    void translate(com.badlogic.gdx.math.Vector2) -> translate
com.badlogic.gdx.graphics.PerspectiveCamera -> com.badlogic.gdx.graphics.PerspectiveCamera:
    float fieldOfView -> fieldOfView
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    void update() -> update
    void update(boolean) -> update
com.badlogic.gdx.graphics.Pixmap -> com.badlogic.gdx.graphics.Pixmap:
    com.badlogic.gdx.graphics.Pixmap$Blending blending -> blending
    com.badlogic.gdx.graphics.g2d.Gdx2DPixmap pixmap -> pixmap
    int color -> color
    boolean disposed -> disposed
    void setBlending(com.badlogic.gdx.graphics.Pixmap$Blending) -> setBlending
    void setFilter(com.badlogic.gdx.graphics.Pixmap$Filter) -> setFilter
    void setColor(int) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void fill() -> fill
    void drawLine(int,int,int,int) -> drawLine
    void drawRectangle(int,int,int,int) -> drawRectangle
    void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int) -> drawPixmap
    void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int,int,int,int,int) -> drawPixmap
    void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int,int,int,int,int,int,int) -> drawPixmap
    void fillRectangle(int,int,int,int) -> fillRectangle
    void drawCircle(int,int,int) -> drawCircle
    void fillCircle(int,int,int) -> fillCircle
    void fillTriangle(int,int,int,int,int,int) -> fillTriangle
    int getPixel(int,int) -> getPixel
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    void dispose() -> dispose
    void drawPixel(int,int) -> drawPixel
    void drawPixel(int,int,int) -> drawPixel
    int getGLFormat() -> getGLFormat
    int getGLInternalFormat() -> getGLInternalFormat
    int getGLType() -> getGLType
    java.nio.ByteBuffer getPixels() -> getPixels
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    com.badlogic.gdx.graphics.Pixmap$Blending getBlending() -> getBlending
com.badlogic.gdx.graphics.Pixmap$Blending -> com.badlogic.gdx.graphics.Pixmap$Blending:
    com.badlogic.gdx.graphics.Pixmap$Blending None -> None
    com.badlogic.gdx.graphics.Pixmap$Blending SourceOver -> SourceOver
    com.badlogic.gdx.graphics.Pixmap$Blending[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.Pixmap$Blending[] values() -> values
    com.badlogic.gdx.graphics.Pixmap$Blending valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.Pixmap$Filter -> com.badlogic.gdx.graphics.Pixmap$Filter:
    com.badlogic.gdx.graphics.Pixmap$Filter NearestNeighbour -> NearestNeighbour
    com.badlogic.gdx.graphics.Pixmap$Filter BiLinear -> BiLinear
    com.badlogic.gdx.graphics.Pixmap$Filter[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.Pixmap$Filter[] values() -> values
    com.badlogic.gdx.graphics.Pixmap$Filter valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.Pixmap$Format -> com.badlogic.gdx.graphics.Pixmap$Format:
    com.badlogic.gdx.graphics.Pixmap$Format Alpha -> Alpha
    com.badlogic.gdx.graphics.Pixmap$Format Intensity -> Intensity
    com.badlogic.gdx.graphics.Pixmap$Format LuminanceAlpha -> LuminanceAlpha
    com.badlogic.gdx.graphics.Pixmap$Format RGB565 -> RGB565
    com.badlogic.gdx.graphics.Pixmap$Format RGBA4444 -> RGBA4444
    com.badlogic.gdx.graphics.Pixmap$Format RGB888 -> RGB888
    com.badlogic.gdx.graphics.Pixmap$Format RGBA8888 -> RGBA8888
    com.badlogic.gdx.graphics.Pixmap$Format[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.Pixmap$Format[] values() -> values
    com.badlogic.gdx.graphics.Pixmap$Format valueOf(java.lang.String) -> valueOf
    int toGdx2DPixmapFormat(com.badlogic.gdx.graphics.Pixmap$Format) -> toGdx2DPixmapFormat
    com.badlogic.gdx.graphics.Pixmap$Format fromGdx2DPixmapFormat(int) -> fromGdx2DPixmapFormat
com.badlogic.gdx.graphics.PixmapIO -> com.badlogic.gdx.graphics.PixmapIO:
    void writeCIM(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap) -> writeCIM
    com.badlogic.gdx.graphics.Pixmap readCIM(com.badlogic.gdx.files.FileHandle) -> readCIM
    void writePNG(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap) -> writePNG
com.badlogic.gdx.graphics.PixmapIO$CIM -> com.badlogic.gdx.graphics.PixmapIO$CIM:
    int BUFFER_SIZE -> BUFFER_SIZE
    byte[] writeBuffer -> writeBuffer
    byte[] readBuffer -> readBuffer
    void write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap) -> write
    com.badlogic.gdx.graphics.Pixmap read(com.badlogic.gdx.files.FileHandle) -> read
com.badlogic.gdx.graphics.PixmapIO$PNG -> com.badlogic.gdx.graphics.PixmapIO$PNG:
    byte[] SIGNATURE -> SIGNATURE
    int IHDR -> IHDR
    int IDAT -> IDAT
    int IEND -> IEND
    byte COLOR_ARGB -> COLOR_ARGB
    byte COMPRESSION_DEFLATE -> COMPRESSION_DEFLATE
    byte FILTER_NONE -> FILTER_NONE
    byte INTERLACE_NONE -> INTERLACE_NONE
    byte PAETH -> PAETH
    com.badlogic.gdx.graphics.PixmapIO$PNG$ChunkBuffer buffer -> buffer
    java.util.zip.DeflaterOutputStream deflaterOutput -> deflaterOutput
    java.util.zip.Deflater deflater -> deflater
    com.badlogic.gdx.utils.ByteArray lineOutBytes -> lineOutBytes
    com.badlogic.gdx.utils.ByteArray curLineBytes -> curLineBytes
    com.badlogic.gdx.utils.ByteArray prevLineBytes -> prevLineBytes
    boolean flipY -> flipY
    int lastLineLen -> lastLineLen
    void setFlipY(boolean) -> setFlipY
    void setCompression(int) -> setCompression
    void write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap) -> write
    void write(java.io.OutputStream,com.badlogic.gdx.graphics.Pixmap) -> write
    void dispose() -> dispose
com.badlogic.gdx.graphics.PixmapIO$PNG$ChunkBuffer -> com.badlogic.gdx.graphics.PixmapIO$PNG$ChunkBuffer:
    java.io.ByteArrayOutputStream buffer -> buffer
    java.util.zip.CRC32 crc -> crc
    void endChunk(java.io.DataOutputStream) -> endChunk
com.badlogic.gdx.graphics.Texture -> com.badlogic.gdx.graphics.Texture:
    com.badlogic.gdx.assets.AssetManager assetManager -> assetManager
    java.util.Map managedTextures -> managedTextures
    com.badlogic.gdx.graphics.TextureData data -> data
    void load(com.badlogic.gdx.graphics.TextureData) -> load
    void reload() -> reload
    void draw(com.badlogic.gdx.graphics.Pixmap,int,int) -> draw
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    int getDepth() -> getDepth
    com.badlogic.gdx.graphics.TextureData getTextureData() -> getTextureData
    boolean isManaged() -> isManaged
    void dispose() -> dispose
    void addManagedTexture(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.Texture) -> addManagedTexture
    void clearAllTextures(com.badlogic.gdx.Application) -> clearAllTextures
    void invalidateAllTextures(com.badlogic.gdx.Application) -> invalidateAllTextures
    void setAssetManager(com.badlogic.gdx.assets.AssetManager) -> setAssetManager
    java.lang.String getManagedStatus() -> getManagedStatus
    int getNumManagedTextures() -> getNumManagedTextures
com.badlogic.gdx.graphics.Texture$1 -> com.badlogic.gdx.graphics.Texture$1:
    int val$refCount -> val$refCount
    void finishedLoading(com.badlogic.gdx.assets.AssetManager,java.lang.String,java.lang.Class) -> finishedLoading
com.badlogic.gdx.graphics.Texture$TextureFilter -> com.badlogic.gdx.graphics.Texture$TextureFilter:
    com.badlogic.gdx.graphics.Texture$TextureFilter Nearest -> Nearest
    com.badlogic.gdx.graphics.Texture$TextureFilter Linear -> Linear
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMap -> MipMap
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapNearestNearest -> MipMapNearestNearest
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapLinearNearest -> MipMapLinearNearest
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapNearestLinear -> MipMapNearestLinear
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapLinearLinear -> MipMapLinearLinear
    int glEnum -> glEnum
    com.badlogic.gdx.graphics.Texture$TextureFilter[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.Texture$TextureFilter[] values() -> values
    com.badlogic.gdx.graphics.Texture$TextureFilter valueOf(java.lang.String) -> valueOf
    boolean isMipMap() -> isMipMap
    int getGLEnum() -> getGLEnum
com.badlogic.gdx.graphics.Texture$TextureWrap -> com.badlogic.gdx.graphics.Texture$TextureWrap:
    com.badlogic.gdx.graphics.Texture$TextureWrap MirroredRepeat -> MirroredRepeat
    com.badlogic.gdx.graphics.Texture$TextureWrap ClampToEdge -> ClampToEdge
    com.badlogic.gdx.graphics.Texture$TextureWrap Repeat -> Repeat
    int glEnum -> glEnum
    com.badlogic.gdx.graphics.Texture$TextureWrap[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.Texture$TextureWrap[] values() -> values
    com.badlogic.gdx.graphics.Texture$TextureWrap valueOf(java.lang.String) -> valueOf
    int getGLEnum() -> getGLEnum
com.badlogic.gdx.graphics.TextureData -> com.badlogic.gdx.graphics.TextureData:
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> getType
    boolean isPrepared() -> isPrepared
    void prepare() -> prepare
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> consumePixmap
    boolean disposePixmap() -> disposePixmap
    void consumeCustomData(int) -> consumeCustomData
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    boolean useMipMaps() -> useMipMaps
    boolean isManaged() -> isManaged
com.badlogic.gdx.graphics.TextureData$Factory -> com.badlogic.gdx.graphics.TextureData$Factory:
    com.badlogic.gdx.graphics.TextureData loadFromFile(com.badlogic.gdx.files.FileHandle,boolean) -> loadFromFile
    com.badlogic.gdx.graphics.TextureData loadFromFile(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap$Format,boolean) -> loadFromFile
com.badlogic.gdx.graphics.TextureData$TextureDataType -> com.badlogic.gdx.graphics.TextureData$TextureDataType:
    com.badlogic.gdx.graphics.TextureData$TextureDataType Pixmap -> Pixmap
    com.badlogic.gdx.graphics.TextureData$TextureDataType Custom -> Custom
    com.badlogic.gdx.graphics.TextureData$TextureDataType[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.TextureData$TextureDataType[] values() -> values
    com.badlogic.gdx.graphics.TextureData$TextureDataType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.VertexAttribute -> com.badlogic.gdx.graphics.VertexAttribute:
    int usage -> usage
    int numComponents -> numComponents
    boolean normalized -> normalized
    int type -> type
    int offset -> offset
    java.lang.String alias -> alias
    int unit -> unit
    int usageIndex -> usageIndex
    com.badlogic.gdx.graphics.VertexAttribute Position() -> Position
    com.badlogic.gdx.graphics.VertexAttribute TexCoords(int) -> TexCoords
    com.badlogic.gdx.graphics.VertexAttribute Normal() -> Normal
    com.badlogic.gdx.graphics.VertexAttribute Color() -> Color
    com.badlogic.gdx.graphics.VertexAttribute ColorPacked() -> ColorPacked
    com.badlogic.gdx.graphics.VertexAttribute ColorUnpacked() -> ColorUnpacked
    com.badlogic.gdx.graphics.VertexAttribute Tangent() -> Tangent
    com.badlogic.gdx.graphics.VertexAttribute Binormal() -> Binormal
    com.badlogic.gdx.graphics.VertexAttribute BoneWeight(int) -> BoneWeight
    boolean equals(java.lang.Object) -> equals
    boolean equals(com.badlogic.gdx.graphics.VertexAttribute) -> equals
    int getKey() -> getKey
    int hashCode() -> hashCode
com.badlogic.gdx.graphics.VertexAttributes -> com.badlogic.gdx.graphics.VertexAttributes:
    com.badlogic.gdx.graphics.VertexAttribute[] attributes -> attributes
    int vertexSize -> vertexSize
    long mask -> mask
    com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterable iterable -> iterable
    int getOffset(int) -> getOffset
    com.badlogic.gdx.graphics.VertexAttribute findByUsage(int) -> findByUsage
    int calculateOffsets() -> calculateOffsets
    int size() -> size
    com.badlogic.gdx.graphics.VertexAttribute get(int) -> get
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    long getMask() -> getMask
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterable -> com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterable:
    java.lang.Object[] array -> array
    com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator iterator1 -> iterator1
    com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator iterator2 -> iterator2
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator -> com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator:
    java.lang.Object[] array -> array
    int index -> index
    boolean valid -> valid
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    void reset() -> reset
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.graphics.VertexAttributes$Usage -> com.badlogic.gdx.graphics.VertexAttributes$Usage:
    int Position -> Position
    int Color -> Color
    int ColorUnpacked -> ColorUnpacked
    int ColorPacked -> ColorPacked
    int Normal -> Normal
    int TextureCoordinates -> TextureCoordinates
    int Generic -> Generic
    int BoneWeight -> BoneWeight
    int Tangent -> Tangent
    int BiNormal -> BiNormal
com.badlogic.gdx.graphics.g2d.Animation -> com.badlogic.gdx.graphics.g2d.Animation:
    com.badlogic.gdx.graphics.g2d.TextureRegion[] keyFrames -> keyFrames
    float frameDuration -> frameDuration
    float animationDuration -> animationDuration
    int lastFrameNumber -> lastFrameNumber
    float lastStateTime -> lastStateTime
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode playMode -> playMode
    com.badlogic.gdx.graphics.g2d.TextureRegion getKeyFrame(float,boolean) -> getKeyFrame
    com.badlogic.gdx.graphics.g2d.TextureRegion getKeyFrame(float) -> getKeyFrame
    int getKeyFrameIndex(float) -> getKeyFrameIndex
    com.badlogic.gdx.graphics.g2d.TextureRegion[] getKeyFrames() -> getKeyFrames
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode getPlayMode() -> getPlayMode
    void setPlayMode(com.badlogic.gdx.graphics.g2d.Animation$PlayMode) -> setPlayMode
    boolean isAnimationFinished(float) -> isAnimationFinished
    void setFrameDuration(float) -> setFrameDuration
    float getFrameDuration() -> getFrameDuration
    float getAnimationDuration() -> getAnimationDuration
com.badlogic.gdx.graphics.g2d.Animation$1 -> com.badlogic.gdx.graphics.g2d.Animation$1:
    int[] $SwitchMap$com$badlogic$gdx$graphics$g2d$Animation$PlayMode -> $SwitchMap$com$badlogic$gdx$graphics$g2d$Animation$PlayMode
com.badlogic.gdx.graphics.g2d.Animation$PlayMode -> com.badlogic.gdx.graphics.g2d.Animation$PlayMode:
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode NORMAL -> NORMAL
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode REVERSED -> REVERSED
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode LOOP -> LOOP
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode LOOP_REVERSED -> LOOP_REVERSED
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode LOOP_PINGPONG -> LOOP_PINGPONG
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode LOOP_RANDOM -> LOOP_RANDOM
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode[] values() -> values
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g2d.Batch -> com.badlogic.gdx.graphics.g2d.Batch:
    int X1 -> X1
    int Y1 -> Y1
    int C1 -> C1
    int U1 -> U1
    int V1 -> V1
    int X2 -> X2
    int Y2 -> Y2
    int C2 -> C2
    int U2 -> U2
    int V2 -> V2
    int X3 -> X3
    int Y3 -> Y3
    int C3 -> C3
    int U3 -> U3
    int V3 -> V3
    int X4 -> X4
    int Y4 -> Y4
    int C4 -> C4
    int U4 -> U4
    int V4 -> V4
    void begin() -> begin
    void end() -> end
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setColor(float) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    float getPackedColor() -> getPackedColor
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float[],int,int) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float,boolean) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,com.badlogic.gdx.math.Affine2) -> draw
    void flush() -> flush
    void disableBlending() -> disableBlending
    void enableBlending() -> enableBlending
    void setBlendFunction(int,int) -> setBlendFunction
    int getBlendSrcFunc() -> getBlendSrcFunc
    int getBlendDstFunc() -> getBlendDstFunc
    com.badlogic.gdx.math.Matrix4 getProjectionMatrix() -> getProjectionMatrix
    com.badlogic.gdx.math.Matrix4 getTransformMatrix() -> getTransformMatrix
    void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> setProjectionMatrix
    void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> setTransformMatrix
    void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> setShader
    boolean isBlendingEnabled() -> isBlendingEnabled
    boolean isDrawing() -> isDrawing
com.badlogic.gdx.graphics.g2d.BitmapFont -> com.badlogic.gdx.graphics.g2d.BitmapFont:
    int LOG2_PAGE_SIZE -> LOG2_PAGE_SIZE
    int PAGE_SIZE -> PAGE_SIZE
    int PAGES -> PAGES
    char[] xChars -> xChars
    char[] capChars -> capChars
    com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData data -> data
    com.badlogic.gdx.graphics.g2d.TextureRegion[] regions -> regions
    com.badlogic.gdx.graphics.g2d.BitmapFontCache cache -> cache
    boolean flipped -> flipped
    boolean integer -> integer
    boolean ownsTexture -> ownsTexture
    boolean markupEnabled -> markupEnabled
    char[] breakChars -> breakChars
    void load(com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData) -> load
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds draw(com.badlogic.gdx.graphics.g2d.Batch,java.lang.CharSequence,float,float) -> draw
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds draw(com.badlogic.gdx.graphics.g2d.Batch,java.lang.CharSequence,float,float,int,int) -> draw
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawMultiLine(com.badlogic.gdx.graphics.g2d.Batch,java.lang.CharSequence,float,float) -> drawMultiLine
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawMultiLine(com.badlogic.gdx.graphics.g2d.Batch,java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> drawMultiLine
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawWrapped(com.badlogic.gdx.graphics.g2d.Batch,java.lang.CharSequence,float,float,float) -> drawWrapped
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawWrapped(com.badlogic.gdx.graphics.g2d.Batch,java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> drawWrapped
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence) -> getBounds
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds) -> getBounds
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence,int,int) -> getBounds
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence,int,int,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds) -> getBounds
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getMultiLineBounds(java.lang.CharSequence) -> getMultiLineBounds
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getMultiLineBounds(java.lang.CharSequence,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds) -> getMultiLineBounds
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getWrappedBounds(java.lang.CharSequence,float) -> getWrappedBounds
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getWrappedBounds(java.lang.CharSequence,float,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds) -> getWrappedBounds
    void computeGlyphAdvancesAndPositions(java.lang.CharSequence,com.badlogic.gdx.utils.FloatArray,com.badlogic.gdx.utils.FloatArray) -> computeGlyphAdvancesAndPositions
    int computeVisibleGlyphs(java.lang.CharSequence,int,int,float) -> computeVisibleGlyphs
    void setColor(float) -> setColor
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void setScale(float,float) -> setScale
    void setScale(float) -> setScale
    void scale(float) -> scale
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
    com.badlogic.gdx.graphics.g2d.TextureRegion getRegion() -> getRegion
    com.badlogic.gdx.graphics.g2d.TextureRegion[] getRegions() -> getRegions
    com.badlogic.gdx.graphics.g2d.TextureRegion getRegion(int) -> getRegion
    float getLineHeight() -> getLineHeight
    float getSpaceWidth() -> getSpaceWidth
    float getXHeight() -> getXHeight
    float getCapHeight() -> getCapHeight
    float getAscent() -> getAscent
    float getDescent() -> getDescent
    boolean isFlipped() -> isFlipped
    boolean isMarkupEnabled() -> isMarkupEnabled
    void setMarkupEnabled(boolean) -> setMarkupEnabled
    void dispose() -> dispose
    void setFixedWidthGlyphs(java.lang.CharSequence) -> setFixedWidthGlyphs
    boolean containsCharacter(char) -> containsCharacter
    void setUseIntegerPositions(boolean) -> setUseIntegerPositions
    boolean usesIntegerPositions() -> usesIntegerPositions
    com.badlogic.gdx.graphics.g2d.BitmapFontCache getCache() -> getCache
    com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData getData() -> getData
    boolean ownsTexture() -> ownsTexture
    void setOwnsTexture(boolean) -> setOwnsTexture
    java.lang.String toString() -> toString
    int indexOf(java.lang.CharSequence,char,int) -> indexOf
    void setBreakChars(char[]) -> setBreakChars
    boolean isBreakChar(char) -> isBreakChar
    boolean isWhitespace(char) -> isWhitespace
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData -> com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData:
    java.lang.String imagePath -> imagePath
    java.lang.String[] imagePaths -> imagePaths
    com.badlogic.gdx.files.FileHandle fontFile -> fontFile
    boolean flipped -> flipped
    float lineHeight -> lineHeight
    float capHeight -> capHeight
    float ascent -> ascent
    float descent -> descent
    float down -> down
    float scaleX -> scaleX
    float scaleY -> scaleY
    com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph[][] glyphs -> glyphs
    float spaceWidth -> spaceWidth
    float xHeight -> xHeight
    void setGlyph(int,com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph) -> setGlyph
    com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph getFirstGlyph() -> getFirstGlyph
    com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph getGlyph(char) -> getGlyph
    java.lang.String getImagePath() -> getImagePath
    java.lang.String getImagePath(int) -> getImagePath
    java.lang.String[] getImagePaths() -> getImagePaths
    com.badlogic.gdx.files.FileHandle getFontFile() -> getFontFile
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph -> com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph:
    int id -> id
    int srcX -> srcX
    int srcY -> srcY
    int width -> width
    int height -> height
    float u -> u
    float v -> v
    float u2 -> u2
    float v2 -> v2
    int xoffset -> xoffset
    int yoffset -> yoffset
    int xadvance -> xadvance
    byte[][] kerning -> kerning
    int page -> page
    int getKerning(char) -> getKerning
    void setKerning(int,int) -> setKerning
com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment -> com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment:
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment LEFT -> LEFT
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment CENTER -> CENTER
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment RIGHT -> RIGHT
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment[] values() -> values
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds -> com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds:
    float width -> width
    float height -> height
    void set(com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds) -> set
com.badlogic.gdx.graphics.g2d.BitmapFontCache -> com.badlogic.gdx.graphics.g2d.BitmapFontCache:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    float[][] vertexData -> vertexData
    int[] idx -> idx
    int[] tmpGlyphCount -> tmpGlyphCount
    float x -> x
    float y -> y
    float color -> color
    com.badlogic.gdx.graphics.Color tempColor -> tempColor
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds textBounds -> textBounds
    boolean integer -> integer
    int glyphCount -> glyphCount
    com.badlogic.gdx.utils.IntArray[] glyphIndices -> glyphIndices
    boolean textChanged -> textChanged
    float oldTint -> oldTint
    com.badlogic.gdx.graphics.g2d.TextMarkup markup -> markup
    int charsCount -> charsCount
    void setPosition(float,float) -> setPosition
    void translate(float,float) -> translate
    com.badlogic.gdx.graphics.Color setColor(com.badlogic.gdx.graphics.Color,float) -> setColor
    void tint(com.badlogic.gdx.graphics.Color) -> tint
    void setColors(float) -> setColors
    void setColors(com.badlogic.gdx.graphics.Color) -> setColors
    void setColors(float,float,float,float) -> setColors
    void setColors(com.badlogic.gdx.graphics.Color,int,int) -> setColors
    void setColors(float,int,int) -> setColors
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setColor(float) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void draw(com.badlogic.gdx.graphics.g2d.Batch) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.Batch,int,int) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void clear() -> clear
    int countGlyphs(java.lang.CharSequence,int,int) -> countGlyphs
    void requireSequence(java.lang.CharSequence,int,int) -> requireSequence
    void require(int,int) -> require
    float addToCache(java.lang.CharSequence,float,float,int,int) -> addToCache
    void addGlyph(com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph,float,float,float,float) -> addGlyph
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setText(java.lang.CharSequence,float,float) -> setText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setText(java.lang.CharSequence,float,float,int,int) -> setText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addText(java.lang.CharSequence,float,float) -> addText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addText(java.lang.CharSequence,float,float,int,int) -> addText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setMultiLineText(java.lang.CharSequence,float,float) -> setMultiLineText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setMultiLineText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> setMultiLineText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addMultiLineText(java.lang.CharSequence,float,float) -> addMultiLineText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addMultiLineText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> addMultiLineText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setWrappedText(java.lang.CharSequence,float,float,float) -> setWrappedText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setWrappedText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> setWrappedText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addWrappedText(java.lang.CharSequence,float,float,float) -> addWrappedText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addWrappedText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> addWrappedText
    void setBreakChars(char[]) -> setBreakChars
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds() -> getBounds
    float getX() -> getX
    float getY() -> getY
    com.badlogic.gdx.graphics.g2d.BitmapFont getFont() -> getFont
    void setUseIntegerPositions(boolean) -> setUseIntegerPositions
    boolean usesIntegerPositions() -> usesIntegerPositions
    float[] getVertices() -> getVertices
    float[] getVertices(int) -> getVertices
    int getCharsCount() -> getCharsCount
com.badlogic.gdx.graphics.g2d.CpuSpriteBatch -> com.badlogic.gdx.graphics.g2d.CpuSpriteBatch:
    com.badlogic.gdx.math.Matrix4 virtualMatrix -> virtualMatrix
    com.badlogic.gdx.math.Affine2 adjustAffine -> adjustAffine
    boolean adjustNeeded -> adjustNeeded
    boolean haveIdentityRealMatrix -> haveIdentityRealMatrix
    com.badlogic.gdx.math.Affine2 tmpAffine -> tmpAffine
    void flushAndSyncTransformMatrix() -> flushAndSyncTransformMatrix
    com.badlogic.gdx.math.Matrix4 getTransformMatrix() -> getTransformMatrix
    void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> setTransformMatrix
    void setTransformMatrix(com.badlogic.gdx.math.Affine2) -> setTransformMatrix
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float,boolean) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float[],int,int) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,com.badlogic.gdx.math.Affine2) -> draw
    void drawAdjusted(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float) -> drawAdjusted
    void drawAdjusted(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean) -> drawAdjusted
    void drawAdjustedUV(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,float,float,float,float,boolean,boolean) -> drawAdjustedUV
    void drawAdjusted(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float,boolean) -> drawAdjusted
    void drawAdjusted(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,com.badlogic.gdx.math.Affine2) -> drawAdjusted
    void drawAdjusted(com.badlogic.gdx.graphics.Texture,float[],int,int) -> drawAdjusted
    boolean checkEqual(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> checkEqual
    boolean checkEqual(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Affine2) -> checkEqual
    boolean checkIdt(com.badlogic.gdx.math.Matrix4) -> checkIdt
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap -> com.badlogic.gdx.graphics.g2d.Gdx2DPixmap:
    int GDX2D_FORMAT_ALPHA -> GDX2D_FORMAT_ALPHA
    int GDX2D_FORMAT_LUMINANCE_ALPHA -> GDX2D_FORMAT_LUMINANCE_ALPHA
    int GDX2D_FORMAT_RGB888 -> GDX2D_FORMAT_RGB888
    int GDX2D_FORMAT_RGBA8888 -> GDX2D_FORMAT_RGBA8888
    int GDX2D_FORMAT_RGB565 -> GDX2D_FORMAT_RGB565
    int GDX2D_FORMAT_RGBA4444 -> GDX2D_FORMAT_RGBA4444
    int GDX2D_SCALE_NEAREST -> GDX2D_SCALE_NEAREST
    int GDX2D_SCALE_LINEAR -> GDX2D_SCALE_LINEAR
    int GDX2D_BLEND_NONE -> GDX2D_BLEND_NONE
    int GDX2D_BLEND_SRC_OVER -> GDX2D_BLEND_SRC_OVER
    long basePtr -> basePtr
    int width -> width
    int height -> height
    int format -> format
    java.nio.ByteBuffer pixelPtr -> pixelPtr
    long[] nativeData -> nativeData
    void convert(int) -> convert
    void dispose() -> dispose
    void clear(int) -> clear
    void setPixel(int,int,int) -> setPixel
    int getPixel(int,int) -> getPixel
    void drawLine(int,int,int,int,int) -> drawLine
    void drawRect(int,int,int,int,int) -> drawRect
    void drawCircle(int,int,int,int) -> drawCircle
    void fillRect(int,int,int,int,int) -> fillRect
    void fillCircle(int,int,int,int) -> fillCircle
    void fillTriangle(int,int,int,int,int,int,int) -> fillTriangle
    void drawPixmap(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap,int,int,int,int,int,int) -> drawPixmap
    void drawPixmap(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap,int,int,int,int,int,int,int,int) -> drawPixmap
    com.badlogic.gdx.graphics.g2d.Gdx2DPixmap newPixmap(java.io.InputStream,int) -> newPixmap
    com.badlogic.gdx.graphics.g2d.Gdx2DPixmap newPixmap(int,int,int) -> newPixmap
    java.nio.ByteBuffer getPixels() -> getPixels
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    int getFormat() -> getFormat
    int getGLInternalFormat() -> getGLInternalFormat
    int getGLFormat() -> getGLFormat
    int getGLType() -> getGLType
    java.lang.String getFormatString() -> getFormatString
    java.nio.ByteBuffer load(long[],byte[],int,int) -> load
    java.nio.ByteBuffer newPixmap(long[],int,int,int) -> newPixmap
    void free(long) -> free
    void clear(long,int) -> clear
    void setPixel(long,int,int,int) -> setPixel
    int getPixel(long,int,int) -> getPixel
    void drawLine(long,int,int,int,int,int) -> drawLine
    void drawRect(long,int,int,int,int,int) -> drawRect
    void drawCircle(long,int,int,int,int) -> drawCircle
    void fillRect(long,int,int,int,int,int) -> fillRect
    void fillCircle(long,int,int,int,int) -> fillCircle
    void fillTriangle(long,int,int,int,int,int,int,int) -> fillTriangle
    void drawPixmap(long,long,int,int,int,int,int,int,int,int) -> drawPixmap
    void setBlend(int) -> setBlend
    void setScale(int) -> setScale
    java.lang.String getFailureReason() -> getFailureReason
com.badlogic.gdx.graphics.g2d.NinePatch -> com.badlogic.gdx.graphics.g2d.NinePatch:
    int TOP_LEFT -> TOP_LEFT
    int TOP_CENTER -> TOP_CENTER
    int TOP_RIGHT -> TOP_RIGHT
    int MIDDLE_LEFT -> MIDDLE_LEFT
    int MIDDLE_CENTER -> MIDDLE_CENTER
    int MIDDLE_RIGHT -> MIDDLE_RIGHT
    int BOTTOM_LEFT -> BOTTOM_LEFT
    int BOTTOM_CENTER -> BOTTOM_CENTER
    int BOTTOM_RIGHT -> BOTTOM_RIGHT
    com.badlogic.gdx.graphics.Color tmpDrawColor -> tmpDrawColor
    com.badlogic.gdx.graphics.Texture texture -> texture
    int bottomLeft -> bottomLeft
    int bottomCenter -> bottomCenter
    int bottomRight -> bottomRight
    int middleLeft -> middleLeft
    int middleCenter -> middleCenter
    int middleRight -> middleRight
    int topLeft -> topLeft
    int topCenter -> topCenter
    int topRight -> topRight
    float leftWidth -> leftWidth
    float rightWidth -> rightWidth
    float middleWidth -> middleWidth
    float middleHeight -> middleHeight
    float topHeight -> topHeight
    float bottomHeight -> bottomHeight
    float[] vertices -> vertices
    int idx -> idx
    com.badlogic.gdx.graphics.Color color -> color
    int padLeft -> padLeft
    int padRight -> padRight
    int padTop -> padTop
    int padBottom -> padBottom
    void load(com.badlogic.gdx.graphics.g2d.TextureRegion[]) -> load
    int add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,boolean,boolean) -> add
    void set(int,float,float,float,float,float) -> set
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float) -> draw
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    float getLeftWidth() -> getLeftWidth
    void setLeftWidth(float) -> setLeftWidth
    float getRightWidth() -> getRightWidth
    void setRightWidth(float) -> setRightWidth
    float getTopHeight() -> getTopHeight
    void setTopHeight(float) -> setTopHeight
    float getBottomHeight() -> getBottomHeight
    void setBottomHeight(float) -> setBottomHeight
    float getMiddleWidth() -> getMiddleWidth
    void setMiddleWidth(float) -> setMiddleWidth
    float getMiddleHeight() -> getMiddleHeight
    void setMiddleHeight(float) -> setMiddleHeight
    float getTotalWidth() -> getTotalWidth
    float getTotalHeight() -> getTotalHeight
    void setPadding(int,int,int,int) -> setPadding
    float getPadLeft() -> getPadLeft
    void setPadLeft(int) -> setPadLeft
    float getPadRight() -> getPadRight
    void setPadRight(int) -> setPadRight
    float getPadTop() -> getPadTop
    void setPadTop(int) -> setPadTop
    float getPadBottom() -> getPadBottom
    void setPadBottom(int) -> setPadBottom
    void scale(float,float) -> scale
    com.badlogic.gdx.graphics.Texture getTexture() -> getTexture
com.badlogic.gdx.graphics.g2d.ParticleEffect -> com.badlogic.gdx.graphics.g2d.ParticleEffect:
    com.badlogic.gdx.utils.Array emitters -> emitters
    com.badlogic.gdx.math.collision.BoundingBox bounds -> bounds
    boolean ownsTexture -> ownsTexture
    void start() -> start
    void reset() -> reset
    void update(float) -> update
    void draw(com.badlogic.gdx.graphics.g2d.Batch) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void allowCompletion() -> allowCompletion
    boolean isComplete() -> isComplete
    void setDuration(int) -> setDuration
    void setPosition(float,float) -> setPosition
    void setFlip(boolean,boolean) -> setFlip
    void flipY() -> flipY
    com.badlogic.gdx.utils.Array getEmitters() -> getEmitters
    com.badlogic.gdx.graphics.g2d.ParticleEmitter findEmitter(java.lang.String) -> findEmitter
    void save(java.io.Writer) -> save
    void load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle) -> load
    void load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureAtlas) -> load
    void load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureAtlas,java.lang.String) -> load
    void loadEmitters(com.badlogic.gdx.files.FileHandle) -> loadEmitters
    void loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas) -> loadEmitterImages
    void loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas,java.lang.String) -> loadEmitterImages
    void loadEmitterImages(com.badlogic.gdx.files.FileHandle) -> loadEmitterImages
    com.badlogic.gdx.graphics.Texture loadTexture(com.badlogic.gdx.files.FileHandle) -> loadTexture
    void dispose() -> dispose
    com.badlogic.gdx.math.collision.BoundingBox getBoundingBox() -> getBoundingBox
    void scaleEffect(float) -> scaleEffect
com.badlogic.gdx.graphics.g2d.ParticleEffectPool -> com.badlogic.gdx.graphics.g2d.ParticleEffectPool:
    com.badlogic.gdx.graphics.g2d.ParticleEffect effect -> effect
    com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect newObject() -> newObject
    com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect obtain() -> obtain
    java.lang.Object obtain() -> obtain
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect -> com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect:
    com.badlogic.gdx.graphics.g2d.ParticleEffectPool this$0 -> this$0
    void reset() -> reset
    void free() -> free
com.badlogic.gdx.graphics.g2d.ParticleEmitter -> com.badlogic.gdx.graphics.g2d.ParticleEmitter:
    int UPDATE_SCALE -> UPDATE_SCALE
    int UPDATE_ANGLE -> UPDATE_ANGLE
    int UPDATE_ROTATION -> UPDATE_ROTATION
    int UPDATE_VELOCITY -> UPDATE_VELOCITY
    int UPDATE_WIND -> UPDATE_WIND
    int UPDATE_GRAVITY -> UPDATE_GRAVITY
    int UPDATE_TINT -> UPDATE_TINT
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue delayValue -> delayValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue lifeOffsetValue -> lifeOffsetValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue durationValue -> durationValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue lifeValue -> lifeValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue emissionValue -> emissionValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue scaleValue -> scaleValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue rotationValue -> rotationValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue velocityValue -> velocityValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue angleValue -> angleValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue windValue -> windValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue gravityValue -> gravityValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue transparencyValue -> transparencyValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue tintValue -> tintValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue xOffsetValue -> xOffsetValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue yOffsetValue -> yOffsetValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue spawnWidthValue -> spawnWidthValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue spawnHeightValue -> spawnHeightValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue spawnShapeValue -> spawnShapeValue
    float accumulator -> accumulator
    com.badlogic.gdx.graphics.g2d.Sprite sprite -> sprite
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle[] particles -> particles
    int minParticleCount -> minParticleCount
    int maxParticleCount -> maxParticleCount
    float x -> x
    float y -> y
    java.lang.String name -> name
    java.lang.String imagePath -> imagePath
    int activeCount -> activeCount
    boolean[] active -> active
    boolean firstUpdate -> firstUpdate
    boolean flipX -> flipX
    boolean flipY -> flipY
    int updateFlags -> updateFlags
    boolean allowCompletion -> allowCompletion
    com.badlogic.gdx.math.collision.BoundingBox bounds -> bounds
    int emission -> emission
    int emissionDiff -> emissionDiff
    int emissionDelta -> emissionDelta
    int lifeOffset -> lifeOffset
    int lifeOffsetDiff -> lifeOffsetDiff
    int life -> life
    int lifeDiff -> lifeDiff
    float spawnWidth -> spawnWidth
    float spawnWidthDiff -> spawnWidthDiff
    float spawnHeight -> spawnHeight
    float spawnHeightDiff -> spawnHeightDiff
    float duration -> duration
    float durationTimer -> durationTimer
    float delay -> delay
    float delayTimer -> delayTimer
    boolean attached -> attached
    boolean continuous -> continuous
    boolean aligned -> aligned
    boolean behind -> behind
    boolean additive -> additive
    boolean premultipliedAlpha -> premultipliedAlpha
    void initialize() -> initialize
    void setMaxParticleCount(int) -> setMaxParticleCount
    void addParticle() -> addParticle
    void addParticles(int) -> addParticles
    void update(float) -> update
    void draw(com.badlogic.gdx.graphics.g2d.Batch) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void start() -> start
    void reset() -> reset
    void restart() -> restart
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle newParticle(com.badlogic.gdx.graphics.g2d.Sprite) -> newParticle
    void activateParticle(int) -> activateParticle
    boolean updateParticle(com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle,float,int) -> updateParticle
    void setPosition(float,float) -> setPosition
    void setSprite(com.badlogic.gdx.graphics.g2d.Sprite) -> setSprite
    void allowCompletion() -> allowCompletion
    com.badlogic.gdx.graphics.g2d.Sprite getSprite() -> getSprite
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getLife() -> getLife
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getScale() -> getScale
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getRotation() -> getRotation
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue getTint() -> getTint
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getVelocity() -> getVelocity
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getWind() -> getWind
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getGravity() -> getGravity
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getAngle() -> getAngle
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getEmission() -> getEmission
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getTransparency() -> getTransparency
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getDuration() -> getDuration
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getDelay() -> getDelay
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getLifeOffset() -> getLifeOffset
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getXOffsetValue() -> getXOffsetValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getYOffsetValue() -> getYOffsetValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getSpawnWidth() -> getSpawnWidth
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getSpawnHeight() -> getSpawnHeight
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue getSpawnShape() -> getSpawnShape
    boolean isAttached() -> isAttached
    void setAttached(boolean) -> setAttached
    boolean isContinuous() -> isContinuous
    void setContinuous(boolean) -> setContinuous
    boolean isAligned() -> isAligned
    void setAligned(boolean) -> setAligned
    boolean isAdditive() -> isAdditive
    void setAdditive(boolean) -> setAdditive
    boolean isBehind() -> isBehind
    void setBehind(boolean) -> setBehind
    boolean isPremultipliedAlpha() -> isPremultipliedAlpha
    void setPremultipliedAlpha(boolean) -> setPremultipliedAlpha
    int getMinParticleCount() -> getMinParticleCount
    void setMinParticleCount(int) -> setMinParticleCount
    int getMaxParticleCount() -> getMaxParticleCount
    boolean isComplete() -> isComplete
    float getPercentComplete() -> getPercentComplete
    float getX() -> getX
    float getY() -> getY
    int getActiveCount() -> getActiveCount
    java.lang.String getImagePath() -> getImagePath
    void setImagePath(java.lang.String) -> setImagePath
    void setFlip(boolean,boolean) -> setFlip
    void flipY() -> flipY
    com.badlogic.gdx.math.collision.BoundingBox getBoundingBox() -> getBoundingBox
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    java.lang.String readString(java.lang.String) -> readString
    java.lang.String readString(java.io.BufferedReader,java.lang.String) -> readString
    boolean readBoolean(java.lang.String) -> readBoolean
    boolean readBoolean(java.io.BufferedReader,java.lang.String) -> readBoolean
    int readInt(java.io.BufferedReader,java.lang.String) -> readInt
    float readFloat(java.io.BufferedReader,java.lang.String) -> readFloat
com.badlogic.gdx.graphics.g2d.ParticleEmitter$1 -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$1:
    int[] $SwitchMap$com$badlogic$gdx$graphics$g2d$ParticleEmitter$SpawnEllipseSide -> $SwitchMap$com$badlogic$gdx$graphics$g2d$ParticleEmitter$SpawnEllipseSide
    int[] $SwitchMap$com$badlogic$gdx$graphics$g2d$ParticleEmitter$SpawnShape -> $SwitchMap$com$badlogic$gdx$graphics$g2d$ParticleEmitter$SpawnShape
com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue:
    float[] temp -> temp
    float[] colors -> colors
    float[] timeline -> timeline
    float[] getTimeline() -> getTimeline
    void setTimeline(float[]) -> setTimeline
    float[] getColors() -> getColors
    void setColors(float[]) -> setColors
    float[] getColor(float) -> getColor
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue) -> load
com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue:
    float value -> value
    float getValue() -> getValue
    void setValue(float) -> setValue
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue) -> load
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle:
    int life -> life
    int currentLife -> currentLife
    float scale -> scale
    float scaleDiff -> scaleDiff
    float rotation -> rotation
    float rotationDiff -> rotationDiff
    float velocity -> velocity
    float velocityDiff -> velocityDiff
    float angle -> angle
    float angleDiff -> angleDiff
    float angleCos -> angleCos
    float angleSin -> angleSin
    float transparency -> transparency
    float transparencyDiff -> transparencyDiff
    float wind -> wind
    float windDiff -> windDiff
    float gravity -> gravity
    float gravityDiff -> gravityDiff
    float[] tint -> tint
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue:
    boolean active -> active
    boolean alwaysActive -> alwaysActive
    void setAlwaysActive(boolean) -> setAlwaysActive
    boolean isAlwaysActive() -> isAlwaysActive
    boolean isActive() -> isActive
    void setActive(boolean) -> setActive
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue) -> load
com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue:
    float lowMin -> lowMin
    float lowMax -> lowMax
    float newLowValue() -> newLowValue
    void setLow(float) -> setLow
    void setLow(float,float) -> setLow
    float getLowMin() -> getLowMin
    void setLowMin(float) -> setLowMin
    float getLowMax() -> getLowMax
    void setLowMax(float) -> setLowMax
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue) -> load
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue:
    float[] scaling -> scaling
    float[] timeline -> timeline
    float highMin -> highMin
    float highMax -> highMax
    boolean relative -> relative
    float newHighValue() -> newHighValue
    void setHigh(float) -> setHigh
    void setHigh(float,float) -> setHigh
    float getHighMin() -> getHighMin
    void setHighMin(float) -> setHighMin
    float getHighMax() -> getHighMax
    void setHighMax(float) -> setHighMax
    float[] getScaling() -> getScaling
    void setScaling(float[]) -> setScaling
    float[] getTimeline() -> getTimeline
    void setTimeline(float[]) -> setTimeline
    boolean isRelative() -> isRelative
    void setRelative(boolean) -> setRelative
    float getScale(float) -> getScale
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue) -> load
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide:
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide both -> both
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide top -> top
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide bottom -> bottom
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide[] values() -> values
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape:
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape point -> point
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape line -> line
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape square -> square
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape ellipse -> ellipse
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape[] values() -> values
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue:
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape shape -> shape
    boolean edges -> edges
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide side -> side
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape getShape() -> getShape
    void setShape(com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape) -> setShape
    boolean isEdges() -> isEdges
    void setEdges(boolean) -> setEdges
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide getSide() -> getSide
    void setSide(com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide) -> setSide
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue) -> load
com.badlogic.gdx.graphics.g2d.PixmapPacker -> com.badlogic.gdx.graphics.g2d.PixmapPacker:
    int pageWidth -> pageWidth
    int pageHeight -> pageHeight
    com.badlogic.gdx.graphics.Pixmap$Format pageFormat -> pageFormat
    int padding -> padding
    boolean duplicateBorder -> duplicateBorder
    com.badlogic.gdx.utils.Array pages -> pages
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Page currPage -> currPage
    boolean disposed -> disposed
    com.badlogic.gdx.math.Rectangle pack(java.lang.String,com.badlogic.gdx.graphics.Pixmap) -> pack
    void newPage() -> newPage
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node insert(com.badlogic.gdx.graphics.g2d.PixmapPacker$Node,com.badlogic.gdx.math.Rectangle) -> insert
    com.badlogic.gdx.utils.Array getPages() -> getPages
    com.badlogic.gdx.math.Rectangle getRect(java.lang.String) -> getRect
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Page getPage(java.lang.String) -> getPage
    int getPageIndex(java.lang.String) -> getPageIndex
    void dispose() -> dispose
    com.badlogic.gdx.graphics.g2d.TextureAtlas generateTextureAtlas(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,boolean) -> generateTextureAtlas
    void updateTextureAtlas(com.badlogic.gdx.graphics.g2d.TextureAtlas,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,boolean) -> updateTextureAtlas
    int getPageWidth() -> getPageWidth
    int getPageHeight() -> getPageHeight
    int getPadding() -> getPadding
    boolean duplicateBorder() -> duplicateBorder
com.badlogic.gdx.graphics.g2d.PixmapPacker$1 -> com.badlogic.gdx.graphics.g2d.PixmapPacker$1:
    com.badlogic.gdx.graphics.g2d.PixmapPacker this$0 -> this$0
    void dispose() -> dispose
com.badlogic.gdx.graphics.g2d.PixmapPacker$2 -> com.badlogic.gdx.graphics.g2d.PixmapPacker$2:
    com.badlogic.gdx.graphics.g2d.PixmapPacker this$0 -> this$0
    void dispose() -> dispose
com.badlogic.gdx.graphics.g2d.PixmapPacker$Node -> com.badlogic.gdx.graphics.g2d.PixmapPacker$Node:
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node leftChild -> leftChild
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node rightChild -> rightChild
    com.badlogic.gdx.math.Rectangle rect -> rect
    java.lang.String leaveName -> leaveName
com.badlogic.gdx.graphics.g2d.PixmapPacker$Page -> com.badlogic.gdx.graphics.g2d.PixmapPacker$Page:
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node root -> root
    com.badlogic.gdx.utils.OrderedMap rects -> rects
    com.badlogic.gdx.graphics.Pixmap image -> image
    com.badlogic.gdx.graphics.Texture texture -> texture
    com.badlogic.gdx.utils.Array addedRects -> addedRects
    com.badlogic.gdx.graphics.g2d.PixmapPacker this$0 -> this$0
    com.badlogic.gdx.graphics.Pixmap getPixmap() -> getPixmap
    com.badlogic.gdx.utils.OrderedMap getRects() -> getRects
com.badlogic.gdx.graphics.g2d.PixmapPackerIO -> com.badlogic.gdx.graphics.g2d.PixmapPackerIO:
    void save(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PixmapPacker) -> save
    void save(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.g2d.PixmapPackerIO$SaveParameters) -> save
com.badlogic.gdx.graphics.g2d.PixmapPackerIO$1 -> com.badlogic.gdx.graphics.g2d.PixmapPackerIO$1:
    int[] $SwitchMap$com$badlogic$gdx$graphics$g2d$PixmapPackerIO$ImageFormat -> $SwitchMap$com$badlogic$gdx$graphics$g2d$PixmapPackerIO$ImageFormat
com.badlogic.gdx.graphics.g2d.PixmapPackerIO$ImageFormat -> com.badlogic.gdx.graphics.g2d.PixmapPackerIO$ImageFormat:
    com.badlogic.gdx.graphics.g2d.PixmapPackerIO$ImageFormat CIM -> CIM
    com.badlogic.gdx.graphics.g2d.PixmapPackerIO$ImageFormat PNG -> PNG
    java.lang.String extension -> extension
    com.badlogic.gdx.graphics.g2d.PixmapPackerIO$ImageFormat[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.g2d.PixmapPackerIO$ImageFormat[] values() -> values
    com.badlogic.gdx.graphics.g2d.PixmapPackerIO$ImageFormat valueOf(java.lang.String) -> valueOf
    java.lang.String getExtension() -> getExtension
com.badlogic.gdx.graphics.g2d.PixmapPackerIO$SaveParameters -> com.badlogic.gdx.graphics.g2d.PixmapPackerIO$SaveParameters:
    com.badlogic.gdx.graphics.g2d.PixmapPackerIO$ImageFormat format -> format
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> minFilter
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> magFilter
com.badlogic.gdx.graphics.g2d.PolygonRegion -> com.badlogic.gdx.graphics.g2d.PolygonRegion:
    float[] textureCoords -> textureCoords
    float[] vertices -> vertices
    short[] triangles -> triangles
    com.badlogic.gdx.graphics.g2d.TextureRegion region -> region
    float[] getVertices() -> getVertices
    short[] getTriangles() -> getTriangles
    float[] getTextureCoords() -> getTextureCoords
    com.badlogic.gdx.graphics.g2d.TextureRegion getRegion() -> getRegion
com.badlogic.gdx.graphics.g2d.PolygonRegionLoader -> com.badlogic.gdx.graphics.g2d.PolygonRegionLoader:
    com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters defaultParameters -> defaultParameters
    com.badlogic.gdx.math.EarClippingTriangulator triangulator -> triangulator
    com.badlogic.gdx.graphics.g2d.PolygonRegion load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters) -> getDependencies
    com.badlogic.gdx.graphics.g2d.PolygonRegion load(com.badlogic.gdx.graphics.g2d.TextureRegion,com.badlogic.gdx.files.FileHandle) -> load
    java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters -> com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters:
    java.lang.String texturePrefix -> texturePrefix
    int readerBuffer -> readerBuffer
    java.lang.String[] textureExtensions -> textureExtensions
com.badlogic.gdx.graphics.g2d.PolygonSprite -> com.badlogic.gdx.graphics.g2d.PolygonSprite:
    com.badlogic.gdx.graphics.g2d.PolygonRegion region -> region
    float x -> x
    float y -> y
    float width -> width
    float height -> height
    float scaleX -> scaleX
    float scaleY -> scaleY
    float rotation -> rotation
    float originX -> originX
    float originY -> originY
    float[] vertices -> vertices
    boolean dirty -> dirty
    com.badlogic.gdx.math.Rectangle bounds -> bounds
    com.badlogic.gdx.graphics.Color color -> color
    void set(com.badlogic.gdx.graphics.g2d.PolygonSprite) -> set
    void setBounds(float,float,float,float) -> setBounds
    void setSize(float,float) -> setSize
    void setPosition(float,float) -> setPosition
    void setX(float) -> setX
    void setY(float) -> setY
    void translateX(float) -> translateX
    void translateY(float) -> translateY
    void translate(float,float) -> translate
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setOrigin(float,float) -> setOrigin
    void setRotation(float) -> setRotation
    void rotate(float) -> rotate
    void setScale(float) -> setScale
    void setScale(float,float) -> setScale
    void scale(float) -> scale
    float[] getVertices() -> getVertices
    com.badlogic.gdx.math.Rectangle getBoundingRectangle() -> getBoundingRectangle
    void draw(com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch,float) -> draw
    float getX() -> getX
    float getY() -> getY
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    float getOriginX() -> getOriginX
    float getOriginY() -> getOriginY
    float getRotation() -> getRotation
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    com.badlogic.gdx.graphics.Color getVertexColor() -> getVertexColor
    void setRegion(com.badlogic.gdx.graphics.g2d.PolygonRegion) -> setRegion
    com.badlogic.gdx.graphics.g2d.PolygonRegion getRegion() -> getRegion
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch -> com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch:
    com.badlogic.gdx.graphics.Mesh mesh -> mesh
    float[] vertices -> vertices
    short[] triangles -> triangles
    int vertexIndex -> vertexIndex
    int triangleIndex -> triangleIndex
    com.badlogic.gdx.graphics.Texture lastTexture -> lastTexture
    float invTexWidth -> invTexWidth
    float invTexHeight -> invTexHeight
    boolean drawing -> drawing
    com.badlogic.gdx.math.Matrix4 transformMatrix -> transformMatrix
    com.badlogic.gdx.math.Matrix4 projectionMatrix -> projectionMatrix
    com.badlogic.gdx.math.Matrix4 combinedMatrix -> combinedMatrix
    boolean blendingDisabled -> blendingDisabled
    int blendSrcFunc -> blendSrcFunc
    int blendDstFunc -> blendDstFunc
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> shader
    com.badlogic.gdx.graphics.glutils.ShaderProgram customShader -> customShader
    boolean ownsShader -> ownsShader
    float color -> color
    com.badlogic.gdx.graphics.Color tempColor -> tempColor
    int renderCalls -> renderCalls
    int totalRenderCalls -> totalRenderCalls
    int maxTrianglesInBatch -> maxTrianglesInBatch
    void begin() -> begin
    void end() -> end
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setColor(float) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    float getPackedColor() -> getPackedColor
    void draw(com.badlogic.gdx.graphics.g2d.PolygonRegion,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.PolygonRegion,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.PolygonRegion,float,float,float,float,float,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float[],int,int,short[],int,int) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float[],int,int) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float,boolean) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,com.badlogic.gdx.math.Affine2) -> draw
    void flush() -> flush
    void disableBlending() -> disableBlending
    void enableBlending() -> enableBlending
    void setBlendFunction(int,int) -> setBlendFunction
    int getBlendSrcFunc() -> getBlendSrcFunc
    int getBlendDstFunc() -> getBlendDstFunc
    void dispose() -> dispose
    com.badlogic.gdx.math.Matrix4 getProjectionMatrix() -> getProjectionMatrix
    com.badlogic.gdx.math.Matrix4 getTransformMatrix() -> getTransformMatrix
    void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> setProjectionMatrix
    void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> setTransformMatrix
    void setupMatrices() -> setupMatrices
    void switchTexture(com.badlogic.gdx.graphics.Texture) -> switchTexture
    void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> setShader
    boolean isBlendingEnabled() -> isBlendingEnabled
    boolean isDrawing() -> isDrawing
com.badlogic.gdx.graphics.g2d.Sprite -> com.badlogic.gdx.graphics.g2d.Sprite:
    int VERTEX_SIZE -> VERTEX_SIZE
    int SPRITE_SIZE -> SPRITE_SIZE
    float[] vertices -> vertices
    com.badlogic.gdx.graphics.Color color -> color
    float x -> x
    float y -> y
    float width -> width
    float height -> height
    float originX -> originX
    float originY -> originY
    float rotation -> rotation
    float scaleX -> scaleX
    float scaleY -> scaleY
    boolean dirty -> dirty
    com.badlogic.gdx.math.Rectangle bounds -> bounds
    void set(com.badlogic.gdx.graphics.g2d.Sprite) -> set
    void setBounds(float,float,float,float) -> setBounds
    void setSize(float,float) -> setSize
    void setPosition(float,float) -> setPosition
    void setX(float) -> setX
    void setY(float) -> setY
    void setCenterX(float) -> setCenterX
    void setCenterY(float) -> setCenterY
    void setCenter(float,float) -> setCenter
    void translateX(float) -> translateX
    void translateY(float) -> translateY
    void translate(float,float) -> translate
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setAlpha(float) -> setAlpha
    void setColor(float,float,float,float) -> setColor
    void setColor(float) -> setColor
    void setOrigin(float,float) -> setOrigin
    void setOriginCenter() -> setOriginCenter
    void setRotation(float) -> setRotation
    float getRotation() -> getRotation
    void rotate(float) -> rotate
    void rotate90(boolean) -> rotate90
    void setScale(float) -> setScale
    void setScale(float,float) -> setScale
    void scale(float) -> scale
    float[] getVertices() -> getVertices
    com.badlogic.gdx.math.Rectangle getBoundingRectangle() -> getBoundingRectangle
    void draw(com.badlogic.gdx.graphics.g2d.Batch) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    float getX() -> getX
    float getY() -> getY
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    float getOriginX() -> getOriginX
    float getOriginY() -> getOriginY
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void setRegion(float,float,float,float) -> setRegion
    void setU(float) -> setU
    void setV(float) -> setV
    void setU2(float) -> setU2
    void setV2(float) -> setV2
    void setFlip(boolean,boolean) -> setFlip
    void flip(boolean,boolean) -> flip
    void scroll(float,float) -> scroll
com.badlogic.gdx.graphics.g2d.SpriteBatch -> com.badlogic.gdx.graphics.g2d.SpriteBatch:
    com.badlogic.gdx.graphics.Mesh mesh -> mesh
    float[] vertices -> vertices
    int idx -> idx
    com.badlogic.gdx.graphics.Texture lastTexture -> lastTexture
    float invTexWidth -> invTexWidth
    float invTexHeight -> invTexHeight
    boolean drawing -> drawing
    com.badlogic.gdx.math.Matrix4 transformMatrix -> transformMatrix
    com.badlogic.gdx.math.Matrix4 projectionMatrix -> projectionMatrix
    com.badlogic.gdx.math.Matrix4 combinedMatrix -> combinedMatrix
    boolean blendingDisabled -> blendingDisabled
    int blendSrcFunc -> blendSrcFunc
    int blendDstFunc -> blendDstFunc
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> shader
    com.badlogic.gdx.graphics.glutils.ShaderProgram customShader -> customShader
    boolean ownsShader -> ownsShader
    float color -> color
    com.badlogic.gdx.graphics.Color tempColor -> tempColor
    int renderCalls -> renderCalls
    int totalRenderCalls -> totalRenderCalls
    int maxSpritesInBatch -> maxSpritesInBatch
    com.badlogic.gdx.graphics.glutils.ShaderProgram createDefaultShader() -> createDefaultShader
    void begin() -> begin
    void end() -> end
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setColor(float) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    float getPackedColor() -> getPackedColor
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float[],int,int) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float,boolean) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,com.badlogic.gdx.math.Affine2) -> draw
    void flush() -> flush
    void disableBlending() -> disableBlending
    void enableBlending() -> enableBlending
    void setBlendFunction(int,int) -> setBlendFunction
    int getBlendSrcFunc() -> getBlendSrcFunc
    int getBlendDstFunc() -> getBlendDstFunc
    void dispose() -> dispose
    com.badlogic.gdx.math.Matrix4 getProjectionMatrix() -> getProjectionMatrix
    com.badlogic.gdx.math.Matrix4 getTransformMatrix() -> getTransformMatrix
    void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> setProjectionMatrix
    void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> setTransformMatrix
    void setupMatrices() -> setupMatrices
    void switchTexture(com.badlogic.gdx.graphics.Texture) -> switchTexture
    void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> setShader
    boolean isBlendingEnabled() -> isBlendingEnabled
    boolean isDrawing() -> isDrawing
com.badlogic.gdx.graphics.g2d.SpriteCache -> com.badlogic.gdx.graphics.g2d.SpriteCache:
    float[] tempVertices -> tempVertices
    com.badlogic.gdx.graphics.Mesh mesh -> mesh
    boolean drawing -> drawing
    com.badlogic.gdx.math.Matrix4 transformMatrix -> transformMatrix
    com.badlogic.gdx.math.Matrix4 projectionMatrix -> projectionMatrix
    com.badlogic.gdx.utils.Array caches -> caches
    com.badlogic.gdx.math.Matrix4 combinedMatrix -> combinedMatrix
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> shader
    com.badlogic.gdx.graphics.g2d.SpriteCache$Cache currentCache -> currentCache
    com.badlogic.gdx.utils.Array textures -> textures
    com.badlogic.gdx.utils.IntArray counts -> counts
    float color -> color
    com.badlogic.gdx.graphics.Color tempColor -> tempColor
    com.badlogic.gdx.graphics.glutils.ShaderProgram customShader -> customShader
    int renderCalls -> renderCalls
    int totalRenderCalls -> totalRenderCalls
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setColor(float) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void beginCache() -> beginCache
    void beginCache(int) -> beginCache
    int endCache() -> endCache
    void clear() -> clear
    void add(com.badlogic.gdx.graphics.Texture,float[],int,int) -> add
    void add(com.badlogic.gdx.graphics.Texture,float,float) -> add
    void add(com.badlogic.gdx.graphics.Texture,float,float,int,int,float,float,float,float,float) -> add
    void add(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int) -> add
    void add(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean) -> add
    void add(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean) -> add
    void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float) -> add
    void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float) -> add
    void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float) -> add
    void add(com.badlogic.gdx.graphics.g2d.Sprite) -> add
    void begin() -> begin
    void end() -> end
    void draw(int) -> draw
    void draw(int,int,int) -> draw
    void dispose() -> dispose
    com.badlogic.gdx.math.Matrix4 getProjectionMatrix() -> getProjectionMatrix
    void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> setProjectionMatrix
    com.badlogic.gdx.math.Matrix4 getTransformMatrix() -> getTransformMatrix
    void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> setTransformMatrix
    com.badlogic.gdx.graphics.glutils.ShaderProgram createDefaultShader() -> createDefaultShader
    void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> setShader
com.badlogic.gdx.graphics.g2d.SpriteCache$Cache -> com.badlogic.gdx.graphics.g2d.SpriteCache$Cache:
    int id -> id
    int offset -> offset
    int maxCount -> maxCount
    int textureCount -> textureCount
    com.badlogic.gdx.graphics.Texture[] textures -> textures
    int[] counts -> counts
com.badlogic.gdx.graphics.g2d.TextMarkup -> com.badlogic.gdx.graphics.g2d.TextMarkup:
    com.badlogic.gdx.utils.Pool colorChunkPool -> colorChunkPool
    com.badlogic.gdx.graphics.Color tempColor -> tempColor
    com.badlogic.gdx.utils.StringBuilder tempColorBuffer -> tempColorBuffer
    com.badlogic.gdx.utils.Array colorChunks -> colorChunks
    com.badlogic.gdx.utils.Array currentColorStack -> currentColorStack
    com.badlogic.gdx.graphics.Color lastColor -> lastColor
    com.badlogic.gdx.graphics.Color defaultColor -> defaultColor
    int parseColorTag(com.badlogic.gdx.graphics.g2d.TextMarkup,java.lang.CharSequence,int,int,int) -> parseColorTag
    void beginChunk(com.badlogic.gdx.graphics.Color,int) -> beginChunk
    void endChunk(int) -> endChunk
    void tint(com.badlogic.gdx.graphics.g2d.BitmapFontCache,com.badlogic.gdx.graphics.Color) -> tint
    void clear() -> clear
    com.badlogic.gdx.graphics.Color getLastColor() -> getLastColor
    void setDefaultColor(com.badlogic.gdx.graphics.Color) -> setDefaultColor
    void setDefaultChunk(float,int) -> setDefaultChunk
    void setDefaultChunk(int,int) -> setDefaultChunk
    void setDefaultChunk(com.badlogic.gdx.graphics.Color,int) -> setDefaultChunk
com.badlogic.gdx.graphics.g2d.TextMarkup$1 -> com.badlogic.gdx.graphics.g2d.TextMarkup$1:
    com.badlogic.gdx.graphics.g2d.TextMarkup$ColorChunk newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g2d.TextMarkup$ColorChunk -> com.badlogic.gdx.graphics.g2d.TextMarkup$ColorChunk:
    int start -> start
    com.badlogic.gdx.graphics.Color color -> color
com.badlogic.gdx.graphics.g2d.TextureAtlas -> com.badlogic.gdx.graphics.g2d.TextureAtlas:
    java.lang.String[] tuple -> tuple
    com.badlogic.gdx.utils.ObjectSet textures -> textures
    com.badlogic.gdx.utils.Array regions -> regions
    java.util.Comparator indexComparator -> indexComparator
    void load(com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData) -> load
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion addRegion(java.lang.String,com.badlogic.gdx.graphics.Texture,int,int,int,int) -> addRegion
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion addRegion(java.lang.String,com.badlogic.gdx.graphics.g2d.TextureRegion) -> addRegion
    com.badlogic.gdx.utils.Array getRegions() -> getRegions
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion findRegion(java.lang.String) -> findRegion
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion findRegion(java.lang.String,int) -> findRegion
    com.badlogic.gdx.utils.Array findRegions(java.lang.String) -> findRegions
    com.badlogic.gdx.utils.Array createSprites() -> createSprites
    com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String) -> createSprite
    com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String,int) -> createSprite
    com.badlogic.gdx.utils.Array createSprites(java.lang.String) -> createSprites
    com.badlogic.gdx.graphics.g2d.Sprite newSprite(com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion) -> newSprite
    com.badlogic.gdx.graphics.g2d.NinePatch createPatch(java.lang.String) -> createPatch
    com.badlogic.gdx.utils.ObjectSet getTextures() -> getTextures
    void dispose() -> dispose
    java.lang.String readValue(java.io.BufferedReader) -> readValue
    int readTuple(java.io.BufferedReader) -> readTuple
com.badlogic.gdx.graphics.g2d.TextureAtlas$1 -> com.badlogic.gdx.graphics.g2d.TextureAtlas$1:
    int compare(com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region,com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion -> com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion:
    int index -> index
    java.lang.String name -> name
    float offsetX -> offsetX
    float offsetY -> offsetY
    int packedWidth -> packedWidth
    int packedHeight -> packedHeight
    int originalWidth -> originalWidth
    int originalHeight -> originalHeight
    boolean rotate -> rotate
    int[] splits -> splits
    int[] pads -> pads
    void flip(boolean,boolean) -> flip
    float getRotatedPackedWidth() -> getRotatedPackedWidth
    float getRotatedPackedHeight() -> getRotatedPackedHeight
    java.lang.String toString() -> toString
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite -> com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite:
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion region -> region
    float originalOffsetX -> originalOffsetX
    float originalOffsetY -> originalOffsetY
    void setPosition(float,float) -> setPosition
    void setX(float) -> setX
    void setY(float) -> setY
    void setBounds(float,float,float,float) -> setBounds
    void setSize(float,float) -> setSize
    void setOrigin(float,float) -> setOrigin
    void setOriginCenter() -> setOriginCenter
    void flip(boolean,boolean) -> flip
    void rotate90(boolean) -> rotate90
    float getX() -> getX
    float getY() -> getY
    float getOriginX() -> getOriginX
    float getOriginY() -> getOriginY
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    float getWidthRatio() -> getWidthRatio
    float getHeightRatio() -> getHeightRatio
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion getAtlasRegion() -> getAtlasRegion
    java.lang.String toString() -> toString
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData -> com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData:
    com.badlogic.gdx.utils.Array pages -> pages
    com.badlogic.gdx.utils.Array regions -> regions
    com.badlogic.gdx.utils.Array getPages() -> getPages
    com.badlogic.gdx.utils.Array getRegions() -> getRegions
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page -> com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page:
    com.badlogic.gdx.files.FileHandle textureFile -> textureFile
    com.badlogic.gdx.graphics.Texture texture -> texture
    float width -> width
    float height -> height
    boolean useMipMaps -> useMipMaps
    com.badlogic.gdx.graphics.Pixmap$Format format -> format
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> minFilter
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> magFilter
    com.badlogic.gdx.graphics.Texture$TextureWrap uWrap -> uWrap
    com.badlogic.gdx.graphics.Texture$TextureWrap vWrap -> vWrap
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region -> com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region:
    com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page page -> page
    int index -> index
    java.lang.String name -> name
    float offsetX -> offsetX
    float offsetY -> offsetY
    int originalWidth -> originalWidth
    int originalHeight -> originalHeight
    boolean rotate -> rotate
    int left -> left
    int top -> top
    int width -> width
    int height -> height
    boolean flip -> flip
    int[] splits -> splits
    int[] pads -> pads
com.badlogic.gdx.graphics.g2d.TextureRegion -> com.badlogic.gdx.graphics.g2d.TextureRegion:
    com.badlogic.gdx.graphics.Texture texture -> texture
    float u -> u
    float v -> v
    float u2 -> u2
    float v2 -> v2
    int regionWidth -> regionWidth
    int regionHeight -> regionHeight
    void setRegion(com.badlogic.gdx.graphics.Texture) -> setRegion
    void setRegion(int,int,int,int) -> setRegion
    void setRegion(float,float,float,float) -> setRegion
    void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion) -> setRegion
    void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion,int,int,int,int) -> setRegion
    com.badlogic.gdx.graphics.Texture getTexture() -> getTexture
    void setTexture(com.badlogic.gdx.graphics.Texture) -> setTexture
    float getU() -> getU
    void setU(float) -> setU
    float getV() -> getV
    void setV(float) -> setV
    float getU2() -> getU2
    void setU2(float) -> setU2
    float getV2() -> getV2
    void setV2(float) -> setV2
    int getRegionX() -> getRegionX
    void setRegionX(int) -> setRegionX
    int getRegionY() -> getRegionY
    void setRegionY(int) -> setRegionY
    int getRegionWidth() -> getRegionWidth
    void setRegionWidth(int) -> setRegionWidth
    int getRegionHeight() -> getRegionHeight
    void setRegionHeight(int) -> setRegionHeight
    void flip(boolean,boolean) -> flip
    boolean isFlipX() -> isFlipX
    boolean isFlipY() -> isFlipY
    void scroll(float,float) -> scroll
    com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(int,int) -> split
    com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(com.badlogic.gdx.graphics.Texture,int,int) -> split
com.badlogic.gdx.graphics.g3d.Attribute -> com.badlogic.gdx.graphics.g3d.Attribute:
    com.badlogic.gdx.utils.Array types -> types
    long type -> type
    int typeBit -> typeBit
    long getAttributeType(java.lang.String) -> getAttributeType
    java.lang.String getAttributeAlias(long) -> getAttributeAlias
    long register(java.lang.String) -> register
    com.badlogic.gdx.graphics.g3d.Attribute copy() -> copy
    boolean equals(com.badlogic.gdx.graphics.g3d.Attribute) -> equals
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
com.badlogic.gdx.graphics.g3d.Attributes -> com.badlogic.gdx.graphics.g3d.Attributes:
    long mask -> mask
    com.badlogic.gdx.utils.Array attributes -> attributes
    boolean sorted -> sorted
    void sort() -> sort
    long getMask() -> getMask
    com.badlogic.gdx.graphics.g3d.Attribute get(long) -> get
    com.badlogic.gdx.graphics.g3d.Attribute get(java.lang.Class,long) -> get
    com.badlogic.gdx.utils.Array get(com.badlogic.gdx.utils.Array,long) -> get
    void clear() -> clear
    int size() -> size
    void enable(long) -> enable
    void disable(long) -> disable
    void set(com.badlogic.gdx.graphics.g3d.Attribute) -> set
    void set(com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute) -> set
    void set(com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute) -> set
    void set(com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute) -> set
    void set(com.badlogic.gdx.graphics.g3d.Attribute[]) -> set
    void set(java.lang.Iterable) -> set
    void remove(long) -> remove
    boolean has(long) -> has
    int indexOf(long) -> indexOf
    boolean same(com.badlogic.gdx.graphics.g3d.Attributes,boolean) -> same
    boolean same(com.badlogic.gdx.graphics.g3d.Attributes) -> same
    int compare(com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute) -> compare
    java.util.Iterator iterator() -> iterator
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.graphics.g3d.Environment -> com.badlogic.gdx.graphics.g3d.Environment:
    com.badlogic.gdx.graphics.g3d.environment.ShadowMap shadowMap -> shadowMap
    com.badlogic.gdx.utils.Array directionalLights -> directionalLights
    com.badlogic.gdx.utils.Array pointLights -> pointLights
    com.badlogic.gdx.graphics.g3d.Environment add(com.badlogic.gdx.graphics.g3d.environment.BaseLight[]) -> add
    com.badlogic.gdx.graphics.g3d.Environment add(com.badlogic.gdx.utils.Array) -> add
    com.badlogic.gdx.graphics.g3d.Environment add(com.badlogic.gdx.graphics.g3d.environment.BaseLight) -> add
    com.badlogic.gdx.graphics.g3d.Environment remove(com.badlogic.gdx.graphics.g3d.environment.BaseLight[]) -> remove
    com.badlogic.gdx.graphics.g3d.Environment remove(com.badlogic.gdx.utils.Array) -> remove
    com.badlogic.gdx.graphics.g3d.Environment remove(com.badlogic.gdx.graphics.g3d.environment.BaseLight) -> remove
    void clear() -> clear
com.badlogic.gdx.graphics.g3d.Material -> com.badlogic.gdx.graphics.g3d.Material:
    int counter -> counter
    java.lang.String id -> id
    com.badlogic.gdx.graphics.g3d.Material copy() -> copy
    int hashCode() -> hashCode
com.badlogic.gdx.graphics.g3d.Model -> com.badlogic.gdx.graphics.g3d.Model:
    com.badlogic.gdx.utils.Array materials -> materials
    com.badlogic.gdx.utils.Array nodes -> nodes
    com.badlogic.gdx.utils.Array animations -> animations
    com.badlogic.gdx.utils.Array meshes -> meshes
    com.badlogic.gdx.utils.Array meshParts -> meshParts
    com.badlogic.gdx.utils.Array disposables -> disposables
    com.badlogic.gdx.utils.ObjectMap nodePartBones -> nodePartBones
    void load(com.badlogic.gdx.graphics.g3d.model.data.ModelData,com.badlogic.gdx.graphics.g3d.utils.TextureProvider) -> load
    void loadAnimations(java.lang.Iterable) -> loadAnimations
    void loadNodes(java.lang.Iterable) -> loadNodes
    com.badlogic.gdx.graphics.g3d.model.Node loadNode(com.badlogic.gdx.graphics.g3d.model.data.ModelNode) -> loadNode
    void loadMeshes(java.lang.Iterable) -> loadMeshes
    void convertMesh(com.badlogic.gdx.graphics.g3d.model.data.ModelMesh) -> convertMesh
    void loadMaterials(java.lang.Iterable,com.badlogic.gdx.graphics.g3d.utils.TextureProvider) -> loadMaterials
    com.badlogic.gdx.graphics.g3d.Material convertMaterial(com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial,com.badlogic.gdx.graphics.g3d.utils.TextureProvider) -> convertMaterial
    void manageDisposable(com.badlogic.gdx.utils.Disposable) -> manageDisposable
    java.lang.Iterable getManagedDisposables() -> getManagedDisposables
    void dispose() -> dispose
    void calculateTransforms() -> calculateTransforms
    com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> calculateBoundingBox
    com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> extendBoundingBox
    com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String) -> getAnimation
    com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String,boolean) -> getAnimation
    com.badlogic.gdx.graphics.g3d.Material getMaterial(java.lang.String) -> getMaterial
    com.badlogic.gdx.graphics.g3d.Material getMaterial(java.lang.String,boolean) -> getMaterial
    com.badlogic.gdx.graphics.g3d.model.Node getNode(java.lang.String) -> getNode
    com.badlogic.gdx.graphics.g3d.model.Node getNode(java.lang.String,boolean) -> getNode
    com.badlogic.gdx.graphics.g3d.model.Node getNode(java.lang.String,boolean,boolean) -> getNode
com.badlogic.gdx.graphics.g3d.ModelBatch -> com.badlogic.gdx.graphics.g3d.ModelBatch:
    com.badlogic.gdx.graphics.Camera camera -> camera
    com.badlogic.gdx.graphics.g3d.ModelBatch$RenderablePool renderablesPool -> renderablesPool
    com.badlogic.gdx.utils.Array renderables -> renderables
    com.badlogic.gdx.graphics.g3d.utils.RenderContext context -> context
    boolean ownContext -> ownContext
    com.badlogic.gdx.graphics.g3d.utils.ShaderProvider shaderProvider -> shaderProvider
    com.badlogic.gdx.graphics.g3d.utils.RenderableSorter sorter -> sorter
    void begin(com.badlogic.gdx.graphics.Camera) -> begin
    void setCamera(com.badlogic.gdx.graphics.Camera) -> setCamera
    com.badlogic.gdx.graphics.Camera getCamera() -> getCamera
    boolean ownsRenderContext() -> ownsRenderContext
    com.badlogic.gdx.graphics.g3d.utils.RenderContext getRenderContext() -> getRenderContext
    com.badlogic.gdx.graphics.g3d.utils.ShaderProvider getShaderProvider() -> getShaderProvider
    com.badlogic.gdx.graphics.g3d.utils.RenderableSorter getRenderableSorter() -> getRenderableSorter
    void flush() -> flush
    void end() -> end
    void render(com.badlogic.gdx.graphics.g3d.Renderable) -> render
    void render(com.badlogic.gdx.graphics.g3d.RenderableProvider) -> render
    void render(java.lang.Iterable) -> render
    void render(com.badlogic.gdx.graphics.g3d.RenderableProvider,com.badlogic.gdx.graphics.g3d.Environment) -> render
    void render(java.lang.Iterable,com.badlogic.gdx.graphics.g3d.Environment) -> render
    void render(com.badlogic.gdx.graphics.g3d.RenderableProvider,com.badlogic.gdx.graphics.g3d.Shader) -> render
    void render(java.lang.Iterable,com.badlogic.gdx.graphics.g3d.Shader) -> render
    void render(com.badlogic.gdx.graphics.g3d.RenderableProvider,com.badlogic.gdx.graphics.g3d.Environment,com.badlogic.gdx.graphics.g3d.Shader) -> render
    void render(java.lang.Iterable,com.badlogic.gdx.graphics.g3d.Environment,com.badlogic.gdx.graphics.g3d.Shader) -> render
    void dispose() -> dispose
com.badlogic.gdx.graphics.g3d.ModelBatch$RenderablePool -> com.badlogic.gdx.graphics.g3d.ModelBatch$RenderablePool:
    com.badlogic.gdx.utils.Array obtained -> obtained
    com.badlogic.gdx.graphics.g3d.Renderable newObject() -> newObject
    com.badlogic.gdx.graphics.g3d.Renderable obtain() -> obtain
    void flush() -> flush
    java.lang.Object obtain() -> obtain
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.ModelInstance -> com.badlogic.gdx.graphics.g3d.ModelInstance:
    boolean defaultShareKeyframes -> defaultShareKeyframes
    com.badlogic.gdx.utils.Array materials -> materials
    com.badlogic.gdx.utils.Array nodes -> nodes
    com.badlogic.gdx.utils.Array animations -> animations
    com.badlogic.gdx.graphics.g3d.Model model -> model
    com.badlogic.gdx.math.Matrix4 transform -> transform
    java.lang.Object userData -> userData
    com.badlogic.gdx.utils.ObjectMap nodePartBones -> nodePartBones
    com.badlogic.gdx.graphics.g3d.ModelInstance copy() -> copy
    void copyNodes(com.badlogic.gdx.utils.Array) -> copyNodes
    void copyNodes(com.badlogic.gdx.utils.Array,java.lang.String[]) -> copyNodes
    void copyNodes(com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Array) -> copyNodes
    void setBones() -> setBones
    com.badlogic.gdx.graphics.g3d.model.Node copyNode(com.badlogic.gdx.graphics.g3d.model.Node) -> copyNode
    com.badlogic.gdx.graphics.g3d.model.NodePart copyNodePart(com.badlogic.gdx.graphics.g3d.model.NodePart) -> copyNodePart
    void copyAnimations(java.lang.Iterable,boolean) -> copyAnimations
    void getRenderables(com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Pool) -> getRenderables
    com.badlogic.gdx.graphics.g3d.Renderable getRenderable(com.badlogic.gdx.graphics.g3d.Renderable) -> getRenderable
    com.badlogic.gdx.graphics.g3d.Renderable getRenderable(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.model.Node) -> getRenderable
    com.badlogic.gdx.graphics.g3d.Renderable getRenderable(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.model.Node,com.badlogic.gdx.graphics.g3d.model.NodePart) -> getRenderable
    void getRenderables(com.badlogic.gdx.graphics.g3d.model.Node,com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Pool) -> getRenderables
    void calculateTransforms() -> calculateTransforms
    com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> calculateBoundingBox
    com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> extendBoundingBox
    com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String) -> getAnimation
    com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String,boolean) -> getAnimation
    com.badlogic.gdx.graphics.g3d.Material getMaterial(java.lang.String) -> getMaterial
    com.badlogic.gdx.graphics.g3d.Material getMaterial(java.lang.String,boolean) -> getMaterial
    com.badlogic.gdx.graphics.g3d.model.Node getNode(java.lang.String) -> getNode
    com.badlogic.gdx.graphics.g3d.model.Node getNode(java.lang.String,boolean) -> getNode
    com.badlogic.gdx.graphics.g3d.model.Node getNode(java.lang.String,boolean,boolean) -> getNode
com.badlogic.gdx.graphics.g3d.Renderable -> com.badlogic.gdx.graphics.g3d.Renderable:
    com.badlogic.gdx.math.Matrix4 worldTransform -> worldTransform
    com.badlogic.gdx.graphics.Mesh mesh -> mesh
    int meshPartOffset -> meshPartOffset
    int meshPartSize -> meshPartSize
    int primitiveType -> primitiveType
    com.badlogic.gdx.graphics.g3d.Material material -> material
    com.badlogic.gdx.graphics.g3d.Environment environment -> environment
    com.badlogic.gdx.math.Matrix4[] bones -> bones
    com.badlogic.gdx.graphics.g3d.Shader shader -> shader
    java.lang.Object userData -> userData
    com.badlogic.gdx.graphics.g3d.Renderable set(com.badlogic.gdx.graphics.g3d.Renderable) -> set
com.badlogic.gdx.graphics.g3d.RenderableProvider -> com.badlogic.gdx.graphics.g3d.RenderableProvider:
    void getRenderables(com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Pool) -> getRenderables
com.badlogic.gdx.graphics.g3d.Shader -> com.badlogic.gdx.graphics.g3d.Shader:
    void init() -> init
    int compareTo(com.badlogic.gdx.graphics.g3d.Shader) -> compareTo
    boolean canRender(com.badlogic.gdx.graphics.g3d.Renderable) -> canRender
    void begin(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.graphics.g3d.utils.RenderContext) -> begin
    void render(com.badlogic.gdx.graphics.g3d.Renderable) -> render
    void end() -> end
com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute -> com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute:
    java.lang.String Alias -> Alias
    long Type -> Type
    boolean blended -> blended
    int sourceFunction -> sourceFunction
    int destFunction -> destFunction
    float opacity -> opacity
    boolean is(long) -> is
    com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute copy() -> copy
    int hashCode() -> hashCode
    com.badlogic.gdx.graphics.g3d.Attribute copy() -> copy
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute -> com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute:
    java.lang.String DiffuseAlias -> DiffuseAlias
    long Diffuse -> Diffuse
    java.lang.String SpecularAlias -> SpecularAlias
    long Specular -> Specular
    java.lang.String AmbientAlias -> AmbientAlias
    long Ambient -> Ambient
    java.lang.String EmissiveAlias -> EmissiveAlias
    long Emissive -> Emissive
    java.lang.String ReflectionAlias -> ReflectionAlias
    long Reflection -> Reflection
    java.lang.String AmbientLightAlias -> AmbientLightAlias
    long AmbientLight -> AmbientLight
    java.lang.String FogAlias -> FogAlias
    long Fog -> Fog
    long Mask -> Mask
    com.badlogic.gdx.graphics.Color color -> color
    boolean is(long) -> is
    com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createAmbient(com.badlogic.gdx.graphics.Color) -> createAmbient
    com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createAmbient(float,float,float,float) -> createAmbient
    com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createDiffuse(com.badlogic.gdx.graphics.Color) -> createDiffuse
    com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createDiffuse(float,float,float,float) -> createDiffuse
    com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createSpecular(com.badlogic.gdx.graphics.Color) -> createSpecular
    com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createSpecular(float,float,float,float) -> createSpecular
    com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createReflection(com.badlogic.gdx.graphics.Color) -> createReflection
    com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createReflection(float,float,float,float) -> createReflection
    com.badlogic.gdx.graphics.g3d.Attribute copy() -> copy
    int hashCode() -> hashCode
com.badlogic.gdx.graphics.g3d.attributes.CubemapAttribute -> com.badlogic.gdx.graphics.g3d.attributes.CubemapAttribute:
    java.lang.String EnvironmentMapAlias -> EnvironmentMapAlias
    long EnvironmentMap -> EnvironmentMap
    long Mask -> Mask
    com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor textureDescription -> textureDescription
    boolean is(long) -> is
    com.badlogic.gdx.graphics.g3d.Attribute copy() -> copy
    int hashCode() -> hashCode
com.badlogic.gdx.graphics.g3d.attributes.DepthTestAttribute -> com.badlogic.gdx.graphics.g3d.attributes.DepthTestAttribute:
    java.lang.String Alias -> Alias
    long Type -> Type
    long Mask -> Mask
    int depthFunc -> depthFunc
    float depthRangeNear -> depthRangeNear
    float depthRangeFar -> depthRangeFar
    boolean depthMask -> depthMask
    boolean is(long) -> is
    com.badlogic.gdx.graphics.g3d.Attribute copy() -> copy
    int hashCode() -> hashCode
com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute -> com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute:
    java.lang.String ShininessAlias -> ShininessAlias
    long Shininess -> Shininess
    java.lang.String AlphaTestAlias -> AlphaTestAlias
    long AlphaTest -> AlphaTest
    float value -> value
    com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute createShininess(float) -> createShininess
    com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute createAlphaTest(float) -> createAlphaTest
    com.badlogic.gdx.graphics.g3d.Attribute copy() -> copy
    int hashCode() -> hashCode
com.badlogic.gdx.graphics.g3d.attributes.IntAttribute -> com.badlogic.gdx.graphics.g3d.attributes.IntAttribute:
    java.lang.String CullFaceAlias -> CullFaceAlias
    long CullFace -> CullFace
    int value -> value
    com.badlogic.gdx.graphics.g3d.attributes.IntAttribute createCullFace(int) -> createCullFace
    com.badlogic.gdx.graphics.g3d.Attribute copy() -> copy
    int hashCode() -> hashCode
com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute -> com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute:
    java.lang.String DiffuseAlias -> DiffuseAlias
    long Diffuse -> Diffuse
    java.lang.String SpecularAlias -> SpecularAlias
    long Specular -> Specular
    java.lang.String BumpAlias -> BumpAlias
    long Bump -> Bump
    java.lang.String NormalAlias -> NormalAlias
    long Normal -> Normal
    java.lang.String AmbientAlias -> AmbientAlias
    long Ambient -> Ambient
    java.lang.String EmissiveAlias -> EmissiveAlias
    long Emissive -> Emissive
    java.lang.String ReflectionAlias -> ReflectionAlias
    long Reflection -> Reflection
    long Mask -> Mask
    com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor textureDescription -> textureDescription
    float offsetU -> offsetU
    float offsetV -> offsetV
    float scaleU -> scaleU
    float scaleV -> scaleV
    int uvIndex -> uvIndex
    boolean is(long) -> is
    com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createDiffuse(com.badlogic.gdx.graphics.Texture) -> createDiffuse
    com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createDiffuse(com.badlogic.gdx.graphics.g2d.TextureRegion) -> createDiffuse
    com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createSpecular(com.badlogic.gdx.graphics.Texture) -> createSpecular
    com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createSpecular(com.badlogic.gdx.graphics.g2d.TextureRegion) -> createSpecular
    com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createNormal(com.badlogic.gdx.graphics.Texture) -> createNormal
    com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createNormal(com.badlogic.gdx.graphics.g2d.TextureRegion) -> createNormal
    com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createBump(com.badlogic.gdx.graphics.Texture) -> createBump
    com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createBump(com.badlogic.gdx.graphics.g2d.TextureRegion) -> createBump
    com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createAmbient(com.badlogic.gdx.graphics.Texture) -> createAmbient
    com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createAmbient(com.badlogic.gdx.graphics.g2d.TextureRegion) -> createAmbient
    com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createEmissive(com.badlogic.gdx.graphics.Texture) -> createEmissive
    com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createEmissive(com.badlogic.gdx.graphics.g2d.TextureRegion) -> createEmissive
    com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createReflection(com.badlogic.gdx.graphics.Texture) -> createReflection
    com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createReflection(com.badlogic.gdx.graphics.g2d.TextureRegion) -> createReflection
    void set(com.badlogic.gdx.graphics.g2d.TextureRegion) -> set
    com.badlogic.gdx.graphics.g3d.Attribute copy() -> copy
    int hashCode() -> hashCode
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy -> com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy:
    int GROUP_OPAQUE -> GROUP_OPAQUE
    int GROUP_BLEND -> GROUP_BLEND
    com.badlogic.gdx.utils.Pool arrayPool -> arrayPool
    com.badlogic.gdx.utils.Array usedArrays -> usedArrays
    com.badlogic.gdx.utils.ObjectMap materialGroups -> materialGroups
    com.badlogic.gdx.graphics.Camera camera -> camera
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> shader
    java.util.Comparator cameraSorter -> cameraSorter
    void setCamera(com.badlogic.gdx.graphics.Camera) -> setCamera
    com.badlogic.gdx.graphics.Camera getCamera() -> getCamera
    int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal) -> decideGroup
    void beforeGroup(int,com.badlogic.gdx.utils.Array) -> beforeGroup
    void afterGroup(int) -> afterGroup
    void beforeGroups() -> beforeGroups
    void afterGroups() -> afterGroups
    void createDefaultShader() -> createDefaultShader
    com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader(int) -> getGroupShader
    void dispose() -> dispose
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$1 -> com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$1:
    com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy this$0 -> this$0
    com.badlogic.gdx.utils.Array newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$2 -> com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$2:
    com.badlogic.gdx.graphics.Camera val$camera -> val$camera
    int compare(com.badlogic.gdx.graphics.g3d.decals.Decal,com.badlogic.gdx.graphics.g3d.decals.Decal) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.graphics.g3d.decals.Decal -> com.badlogic.gdx.graphics.g3d.decals.Decal:
    int VERTEX_SIZE -> VERTEX_SIZE
    int SIZE -> SIZE
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    com.badlogic.gdx.math.Vector3 tmp2 -> tmp2
    int value -> value
    float[] vertices -> vertices
    com.badlogic.gdx.math.Vector3 position -> position
    com.badlogic.gdx.math.Quaternion rotation -> rotation
    com.badlogic.gdx.math.Vector2 scale -> scale
    com.badlogic.gdx.graphics.Color color -> color
    com.badlogic.gdx.math.Vector2 transformationOffset -> transformationOffset
    com.badlogic.gdx.math.Vector2 dimensions -> dimensions
    com.badlogic.gdx.graphics.g3d.decals.DecalMaterial material -> material
    boolean updated -> updated
    com.badlogic.gdx.math.Vector3 dir -> dir
    int X1 -> X1
    int Y1 -> Y1
    int Z1 -> Z1
    int C1 -> C1
    int U1 -> U1
    int V1 -> V1
    int X2 -> X2
    int Y2 -> Y2
    int Z2 -> Z2
    int C2 -> C2
    int U2 -> U2
    int V2 -> V2
    int X3 -> X3
    int Y3 -> Y3
    int Z3 -> Z3
    int C3 -> C3
    int U3 -> U3
    int V3 -> V3
    int X4 -> X4
    int Y4 -> Y4
    int Z4 -> Z4
    int C4 -> C4
    int U4 -> U4
    int V4 -> V4
    com.badlogic.gdx.math.Quaternion rotator -> rotator
    void setColor(float,float,float,float) -> setColor
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float) -> setColor
    void setRotationX(float) -> setRotationX
    void setRotationY(float) -> setRotationY
    void setRotationZ(float) -> setRotationZ
    void rotateX(float) -> rotateX
    void rotateY(float) -> rotateY
    void rotateZ(float) -> rotateZ
    void setRotation(float,float,float) -> setRotation
    void setRotation(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setRotation
    void setRotation(com.badlogic.gdx.math.Quaternion) -> setRotation
    com.badlogic.gdx.math.Quaternion getRotation() -> getRotation
    void translateX(float) -> translateX
    void setX(float) -> setX
    float getX() -> getX
    void translateY(float) -> translateY
    void setY(float) -> setY
    float getY() -> getY
    void translateZ(float) -> translateZ
    void setZ(float) -> setZ
    float getZ() -> getZ
    void translate(float,float,float) -> translate
    void translate(com.badlogic.gdx.math.Vector3) -> translate
    void setPosition(float,float,float) -> setPosition
    void setPosition(com.badlogic.gdx.math.Vector3) -> setPosition
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    com.badlogic.gdx.math.Vector3 getPosition() -> getPosition
    void setScaleX(float) -> setScaleX
    float getScaleX() -> getScaleX
    void setScaleY(float) -> setScaleY
    float getScaleY() -> getScaleY
    void setScale(float,float) -> setScale
    void setScale(float) -> setScale
    void setWidth(float) -> setWidth
    float getWidth() -> getWidth
    void setHeight(float) -> setHeight
    float getHeight() -> getHeight
    void setDimensions(float,float) -> setDimensions
    float[] getVertices() -> getVertices
    void update() -> update
    void transformVertices() -> transformVertices
    void resetVertices() -> resetVertices
    void updateUVs() -> updateUVs
    void setTextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion) -> setTextureRegion
    com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion() -> getTextureRegion
    void setBlending(int,int) -> setBlending
    com.badlogic.gdx.graphics.g3d.decals.DecalMaterial getMaterial() -> getMaterial
    void lookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> lookAt
    com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(com.badlogic.gdx.graphics.g2d.TextureRegion) -> newDecal
    com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(com.badlogic.gdx.graphics.g2d.TextureRegion,boolean) -> newDecal
    com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(float,float,com.badlogic.gdx.graphics.g2d.TextureRegion) -> newDecal
    com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(float,float,com.badlogic.gdx.graphics.g2d.TextureRegion,boolean) -> newDecal
    com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(float,float,com.badlogic.gdx.graphics.g2d.TextureRegion,int,int) -> newDecal
com.badlogic.gdx.graphics.g3d.decals.DecalBatch -> com.badlogic.gdx.graphics.g3d.decals.DecalBatch:
    int DEFAULT_SIZE -> DEFAULT_SIZE
    float[] vertices -> vertices
    com.badlogic.gdx.graphics.Mesh mesh -> mesh
    com.badlogic.gdx.utils.SortedIntList groupList -> groupList
    com.badlogic.gdx.graphics.g3d.decals.GroupStrategy groupStrategy -> groupStrategy
    com.badlogic.gdx.utils.Pool groupPool -> groupPool
    com.badlogic.gdx.utils.Array usedGroups -> usedGroups
    void setGroupStrategy(com.badlogic.gdx.graphics.g3d.decals.GroupStrategy) -> setGroupStrategy
    void initialize(int) -> initialize
    int getSize() -> getSize
    void add(com.badlogic.gdx.graphics.g3d.decals.Decal) -> add
    void flush() -> flush
    void render() -> render
    void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,com.badlogic.gdx.utils.Array) -> render
    void flush(com.badlogic.gdx.graphics.glutils.ShaderProgram,int) -> flush
    void clear() -> clear
    void dispose() -> dispose
com.badlogic.gdx.graphics.g3d.decals.DecalBatch$1 -> com.badlogic.gdx.graphics.g3d.decals.DecalBatch$1:
    com.badlogic.gdx.graphics.g3d.decals.DecalBatch this$0 -> this$0
    com.badlogic.gdx.utils.Array newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.decals.DecalMaterial -> com.badlogic.gdx.graphics.g3d.decals.DecalMaterial:
    int NO_BLEND -> NO_BLEND
    com.badlogic.gdx.graphics.g2d.TextureRegion textureRegion -> textureRegion
    int srcBlendFactor -> srcBlendFactor
    int dstBlendFactor -> dstBlendFactor
    void set() -> set
    boolean isOpaque() -> isOpaque
    int getSrcBlendFactor() -> getSrcBlendFactor
    int getDstBlendFactor() -> getDstBlendFactor
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.badlogic.gdx.graphics.g3d.decals.GroupPlug -> com.badlogic.gdx.graphics.g3d.decals.GroupPlug:
    void beforeGroup(com.badlogic.gdx.utils.Array) -> beforeGroup
    void afterGroup() -> afterGroup
com.badlogic.gdx.graphics.g3d.decals.GroupStrategy -> com.badlogic.gdx.graphics.g3d.decals.GroupStrategy:
    com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader(int) -> getGroupShader
    int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal) -> decideGroup
    void beforeGroup(int,com.badlogic.gdx.utils.Array) -> beforeGroup
    void afterGroup(int) -> afterGroup
    void beforeGroups() -> beforeGroups
    void afterGroups() -> afterGroups
com.badlogic.gdx.graphics.g3d.decals.PluggableGroupStrategy -> com.badlogic.gdx.graphics.g3d.decals.PluggableGroupStrategy:
    com.badlogic.gdx.utils.IntMap plugs -> plugs
    void beforeGroup(int,com.badlogic.gdx.utils.Array) -> beforeGroup
    void afterGroup(int) -> afterGroup
    void plugIn(com.badlogic.gdx.graphics.g3d.decals.GroupPlug,int) -> plugIn
    com.badlogic.gdx.graphics.g3d.decals.GroupPlug unPlug(int) -> unPlug
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy -> com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy:
    com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy$Comparator comparator -> comparator
    int GROUP_OPAQUE -> GROUP_OPAQUE
    int GROUP_BLEND -> GROUP_BLEND
    int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal) -> decideGroup
    void beforeGroup(int,com.badlogic.gdx.utils.Array) -> beforeGroup
    void afterGroup(int) -> afterGroup
    void beforeGroups() -> beforeGroups
    void afterGroups() -> afterGroups
    com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader(int) -> getGroupShader
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy$Comparator -> com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy$Comparator:
    com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy this$0 -> this$0
    int compare(com.badlogic.gdx.graphics.g3d.decals.Decal,com.badlogic.gdx.graphics.g3d.decals.Decal) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap -> com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap:
    float[] data -> data
    float clamp(float) -> clamp
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap set(float[]) -> set
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap set(com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap) -> set
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap set(com.badlogic.gdx.graphics.Color) -> set
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap set(float,float,float) -> set
    com.badlogic.gdx.graphics.Color getColor(com.badlogic.gdx.graphics.Color,int) -> getColor
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap clear() -> clear
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap clamp() -> clamp
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap add(float,float,float) -> add
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap add(com.badlogic.gdx.graphics.Color) -> add
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap add(float,float,float,float,float,float) -> add
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap add(com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3) -> add
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap add(float,float,float,com.badlogic.gdx.math.Vector3) -> add
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap add(com.badlogic.gdx.graphics.Color,float,float,float) -> add
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap add(com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> add
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap add(com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float) -> add
    java.lang.String toString() -> toString
com.badlogic.gdx.graphics.g3d.environment.BaseLight -> com.badlogic.gdx.graphics.g3d.environment.BaseLight:
    com.badlogic.gdx.graphics.Color color -> color
com.badlogic.gdx.graphics.g3d.environment.DirectionalLight -> com.badlogic.gdx.graphics.g3d.environment.DirectionalLight:
    com.badlogic.gdx.math.Vector3 direction -> direction
    com.badlogic.gdx.graphics.g3d.environment.DirectionalLight set(com.badlogic.gdx.graphics.g3d.environment.DirectionalLight) -> set
    com.badlogic.gdx.graphics.g3d.environment.DirectionalLight set(com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.graphics.g3d.environment.DirectionalLight set(float,float,float,com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.graphics.g3d.environment.DirectionalLight set(com.badlogic.gdx.graphics.Color,float,float,float) -> set
    com.badlogic.gdx.graphics.g3d.environment.DirectionalLight set(float,float,float,float,float,float) -> set
    boolean equals(java.lang.Object) -> equals
    boolean equals(com.badlogic.gdx.graphics.g3d.environment.DirectionalLight) -> equals
com.badlogic.gdx.graphics.g3d.environment.DirectionalShadowLight -> com.badlogic.gdx.graphics.g3d.environment.DirectionalShadowLight:
    com.badlogic.gdx.graphics.glutils.FrameBuffer fbo -> fbo
    com.badlogic.gdx.graphics.Camera cam -> cam
    float halfDepth -> halfDepth
    float halfHeight -> halfHeight
    com.badlogic.gdx.math.Vector3 tmpV -> tmpV
    com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor textureDesc -> textureDesc
    void update(com.badlogic.gdx.graphics.Camera) -> update
    void update(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> update
    void begin(com.badlogic.gdx.graphics.Camera) -> begin
    void begin(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> begin
    void begin() -> begin
    void end() -> end
    com.badlogic.gdx.graphics.glutils.FrameBuffer getFrameBuffer() -> getFrameBuffer
    com.badlogic.gdx.graphics.Camera getCamera() -> getCamera
    com.badlogic.gdx.math.Matrix4 getProjViewTrans() -> getProjViewTrans
    com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor getDepthMap() -> getDepthMap
    void dispose() -> dispose
com.badlogic.gdx.graphics.g3d.environment.PointLight -> com.badlogic.gdx.graphics.g3d.environment.PointLight:
    com.badlogic.gdx.math.Vector3 position -> position
    float intensity -> intensity
    com.badlogic.gdx.graphics.g3d.environment.PointLight set(com.badlogic.gdx.graphics.g3d.environment.PointLight) -> set
    com.badlogic.gdx.graphics.g3d.environment.PointLight set(com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,float) -> set
    com.badlogic.gdx.graphics.g3d.environment.PointLight set(float,float,float,com.badlogic.gdx.math.Vector3,float) -> set
    com.badlogic.gdx.graphics.g3d.environment.PointLight set(com.badlogic.gdx.graphics.Color,float,float,float,float) -> set
    com.badlogic.gdx.graphics.g3d.environment.PointLight set(float,float,float,float,float,float,float) -> set
    boolean equals(java.lang.Object) -> equals
    boolean equals(com.badlogic.gdx.graphics.g3d.environment.PointLight) -> equals
com.badlogic.gdx.graphics.g3d.environment.ShadowMap -> com.badlogic.gdx.graphics.g3d.environment.ShadowMap:
    com.badlogic.gdx.math.Matrix4 getProjViewTrans() -> getProjViewTrans
    com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor getDepthMap() -> getDepthMap
com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics -> com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics:
    float[] coeff -> coeff
    float[] data -> data
    float clamp(float) -> clamp
    com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics set(float[]) -> set
    com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics set(com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap) -> set
    com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics set(com.badlogic.gdx.graphics.Color) -> set
    com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics set(float,float,float) -> set
com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader -> com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader:
    short VERSION_HI -> VERSION_HI
    short VERSION_LO -> VERSION_LO
    com.badlogic.gdx.utils.BaseJsonReader reader -> reader
    com.badlogic.gdx.math.Quaternion tempQ -> tempQ
    com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters) -> loadModelData
    com.badlogic.gdx.graphics.g3d.model.data.ModelData parseModel(com.badlogic.gdx.files.FileHandle) -> parseModel
    void parseMeshes(com.badlogic.gdx.graphics.g3d.model.data.ModelData,com.badlogic.gdx.utils.JsonValue) -> parseMeshes
    int parseType(java.lang.String) -> parseType
    com.badlogic.gdx.graphics.VertexAttribute[] parseAttributes(com.badlogic.gdx.utils.JsonValue) -> parseAttributes
    void parseMaterials(com.badlogic.gdx.graphics.g3d.model.data.ModelData,com.badlogic.gdx.utils.JsonValue,java.lang.String) -> parseMaterials
    int parseTextureUsage(java.lang.String) -> parseTextureUsage
    com.badlogic.gdx.graphics.Color parseColor(com.badlogic.gdx.utils.JsonValue) -> parseColor
    com.badlogic.gdx.math.Vector2 readVector2(com.badlogic.gdx.utils.JsonValue,float,float) -> readVector2
    com.badlogic.gdx.utils.Array parseNodes(com.badlogic.gdx.graphics.g3d.model.data.ModelData,com.badlogic.gdx.utils.JsonValue) -> parseNodes
    com.badlogic.gdx.graphics.g3d.model.data.ModelNode parseNodesRecursively(com.badlogic.gdx.utils.JsonValue) -> parseNodesRecursively
    void parseAnimations(com.badlogic.gdx.graphics.g3d.model.data.ModelData,com.badlogic.gdx.utils.JsonValue) -> parseAnimations
com.badlogic.gdx.graphics.g3d.loader.MtlLoader -> com.badlogic.gdx.graphics.g3d.loader.MtlLoader:
    com.badlogic.gdx.utils.Array materials -> materials
    void load(com.badlogic.gdx.files.FileHandle) -> load
    com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial getMaterial(java.lang.String) -> getMaterial
com.badlogic.gdx.graphics.g3d.loader.ObjLoader -> com.badlogic.gdx.graphics.g3d.loader.ObjLoader:
    boolean logWarning -> logWarning
    com.badlogic.gdx.utils.FloatArray verts -> verts
    com.badlogic.gdx.utils.FloatArray norms -> norms
    com.badlogic.gdx.utils.FloatArray uvs -> uvs
    com.badlogic.gdx.utils.Array groups -> groups
    com.badlogic.gdx.graphics.g3d.Model loadObj(com.badlogic.gdx.files.FileHandle) -> loadObj
    com.badlogic.gdx.graphics.g3d.Model loadObj(com.badlogic.gdx.files.FileHandle,boolean) -> loadObj
    com.badlogic.gdx.graphics.g3d.Model loadModel(com.badlogic.gdx.files.FileHandle,boolean) -> loadModel
    com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.loader.ObjLoader$ObjLoaderParameters) -> loadModelData
    com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle,boolean) -> loadModelData
    com.badlogic.gdx.graphics.g3d.loader.ObjLoader$Group setActiveGroup(java.lang.String) -> setActiveGroup
    int getIndex(java.lang.String,int) -> getIndex
    com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters) -> loadModelData
com.badlogic.gdx.graphics.g3d.loader.ObjLoader$Group -> com.badlogic.gdx.graphics.g3d.loader.ObjLoader$Group:
    java.lang.String name -> name
    java.lang.String materialName -> materialName
    com.badlogic.gdx.utils.Array faces -> faces
    int numFaces -> numFaces
    boolean hasNorms -> hasNorms
    boolean hasUVs -> hasUVs
    com.badlogic.gdx.graphics.g3d.Material mat -> mat
    com.badlogic.gdx.graphics.g3d.loader.ObjLoader this$0 -> this$0
com.badlogic.gdx.graphics.g3d.loader.ObjLoader$ObjLoaderParameters -> com.badlogic.gdx.graphics.g3d.loader.ObjLoader$ObjLoaderParameters:
    boolean flipV -> flipV
com.badlogic.gdx.graphics.g3d.model.Animation -> com.badlogic.gdx.graphics.g3d.model.Animation:
    java.lang.String id -> id
    float duration -> duration
    com.badlogic.gdx.utils.Array nodeAnimations -> nodeAnimations
com.badlogic.gdx.graphics.g3d.model.MeshPart -> com.badlogic.gdx.graphics.g3d.model.MeshPart:
    java.lang.String id -> id
    int primitiveType -> primitiveType
    int indexOffset -> indexOffset
    int numVertices -> numVertices
    com.badlogic.gdx.graphics.Mesh mesh -> mesh
    boolean equals(com.badlogic.gdx.graphics.g3d.model.MeshPart) -> equals
    boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.graphics.g3d.model.Node -> com.badlogic.gdx.graphics.g3d.model.Node:
    java.lang.String id -> id
    com.badlogic.gdx.graphics.g3d.model.Node parent -> parent
    com.badlogic.gdx.utils.Array children -> children
    boolean inheritTransform -> inheritTransform
    boolean isAnimated -> isAnimated
    com.badlogic.gdx.math.Vector3 translation -> translation
    com.badlogic.gdx.math.Quaternion rotation -> rotation
    com.badlogic.gdx.math.Vector3 scale -> scale
    com.badlogic.gdx.math.Matrix4 localTransform -> localTransform
    com.badlogic.gdx.math.Matrix4 globalTransform -> globalTransform
    com.badlogic.gdx.utils.Array parts -> parts
    com.badlogic.gdx.math.Matrix4 calculateLocalTransform() -> calculateLocalTransform
    com.badlogic.gdx.math.Matrix4 calculateWorldTransform() -> calculateWorldTransform
    void calculateTransforms(boolean) -> calculateTransforms
    void calculateBoneTransforms(boolean) -> calculateBoneTransforms
    com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> calculateBoundingBox
    com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,boolean) -> calculateBoundingBox
    com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> extendBoundingBox
    com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,boolean) -> extendBoundingBox
    void attachTo(com.badlogic.gdx.graphics.g3d.model.Node) -> attachTo
    void detach() -> detach
    boolean hasChildren() -> hasChildren
    int getChildCount() -> getChildCount
    com.badlogic.gdx.graphics.g3d.model.Node getChild(int) -> getChild
    com.badlogic.gdx.graphics.g3d.model.Node getChild(java.lang.String,boolean,boolean) -> getChild
    int addChild(com.badlogic.gdx.graphics.g3d.model.Node) -> addChild
    int addChildren(java.lang.Iterable) -> addChildren
    int insertChild(int,com.badlogic.gdx.graphics.g3d.model.Node) -> insertChild
    int insertChildren(int,java.lang.Iterable) -> insertChildren
    boolean removeChild(com.badlogic.gdx.graphics.g3d.model.Node) -> removeChild
    java.lang.Iterable getChildren() -> getChildren
    com.badlogic.gdx.graphics.g3d.model.Node getParent() -> getParent
    boolean hasParent() -> hasParent
    com.badlogic.gdx.graphics.g3d.model.Node getNode(com.badlogic.gdx.utils.Array,java.lang.String,boolean,boolean) -> getNode
com.badlogic.gdx.graphics.g3d.model.NodeAnimation -> com.badlogic.gdx.graphics.g3d.model.NodeAnimation:
    com.badlogic.gdx.graphics.g3d.model.Node node -> node
    com.badlogic.gdx.utils.Array keyframes -> keyframes
com.badlogic.gdx.graphics.g3d.model.NodeKeyframe -> com.badlogic.gdx.graphics.g3d.model.NodeKeyframe:
    float keytime -> keytime
    com.badlogic.gdx.math.Vector3 translation -> translation
    com.badlogic.gdx.math.Vector3 scale -> scale
    com.badlogic.gdx.math.Quaternion rotation -> rotation
com.badlogic.gdx.graphics.g3d.model.NodePart -> com.badlogic.gdx.graphics.g3d.model.NodePart:
    com.badlogic.gdx.graphics.g3d.model.MeshPart meshPart -> meshPart
    com.badlogic.gdx.graphics.g3d.Material material -> material
    com.badlogic.gdx.utils.ArrayMap invBoneBindTransforms -> invBoneBindTransforms
    com.badlogic.gdx.math.Matrix4[] bones -> bones
    boolean enabled -> enabled
    com.badlogic.gdx.graphics.g3d.Renderable setRenderable(com.badlogic.gdx.graphics.g3d.Renderable) -> setRenderable
com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation -> com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation:
    java.lang.String id -> id
    com.badlogic.gdx.utils.Array nodeAnimations -> nodeAnimations
com.badlogic.gdx.graphics.g3d.model.data.ModelData -> com.badlogic.gdx.graphics.g3d.model.data.ModelData:
    java.lang.String id -> id
    short[] version -> version
    com.badlogic.gdx.utils.Array meshes -> meshes
    com.badlogic.gdx.utils.Array materials -> materials
    com.badlogic.gdx.utils.Array nodes -> nodes
    com.badlogic.gdx.utils.Array animations -> animations
    void addMesh(com.badlogic.gdx.graphics.g3d.model.data.ModelMesh) -> addMesh
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial -> com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial:
    java.lang.String id -> id
    com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType type -> type
    com.badlogic.gdx.graphics.Color ambient -> ambient
    com.badlogic.gdx.graphics.Color diffuse -> diffuse
    com.badlogic.gdx.graphics.Color specular -> specular
    com.badlogic.gdx.graphics.Color emissive -> emissive
    com.badlogic.gdx.graphics.Color reflection -> reflection
    float shininess -> shininess
    float opacity -> opacity
    com.badlogic.gdx.utils.Array textures -> textures
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType -> com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType:
    com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType Lambert -> Lambert
    com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType Phong -> Phong
    com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType[] values() -> values
    com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g3d.model.data.ModelMesh -> com.badlogic.gdx.graphics.g3d.model.data.ModelMesh:
    java.lang.String id -> id
    com.badlogic.gdx.graphics.VertexAttribute[] attributes -> attributes
    float[] vertices -> vertices
    com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart[] parts -> parts
com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart -> com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart:
    java.lang.String id -> id
    short[] indices -> indices
    int primitiveType -> primitiveType
com.badlogic.gdx.graphics.g3d.model.data.ModelNode -> com.badlogic.gdx.graphics.g3d.model.data.ModelNode:
    java.lang.String id -> id
    int boneId -> boneId
    com.badlogic.gdx.math.Vector3 translation -> translation
    com.badlogic.gdx.math.Quaternion rotation -> rotation
    com.badlogic.gdx.math.Vector3 scale -> scale
    java.lang.String meshId -> meshId
    com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart[] parts -> parts
    com.badlogic.gdx.graphics.g3d.model.data.ModelNode[] children -> children
com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation -> com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation:
    java.lang.String nodeId -> nodeId
    com.badlogic.gdx.utils.Array keyframes -> keyframes
com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe -> com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe:
    float keytime -> keytime
    com.badlogic.gdx.math.Vector3 translation -> translation
    com.badlogic.gdx.math.Vector3 scale -> scale
    com.badlogic.gdx.math.Quaternion rotation -> rotation
com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart -> com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart:
    java.lang.String materialId -> materialId
    java.lang.String meshPartId -> meshPartId
    com.badlogic.gdx.utils.ArrayMap bones -> bones
    int[][] uvMapping -> uvMapping
com.badlogic.gdx.graphics.g3d.model.data.ModelTexture -> com.badlogic.gdx.graphics.g3d.model.data.ModelTexture:
    int USAGE_UNKNOWN -> USAGE_UNKNOWN
    int USAGE_NONE -> USAGE_NONE
    int USAGE_DIFFUSE -> USAGE_DIFFUSE
    int USAGE_EMISSIVE -> USAGE_EMISSIVE
    int USAGE_AMBIENT -> USAGE_AMBIENT
    int USAGE_SPECULAR -> USAGE_SPECULAR
    int USAGE_SHININESS -> USAGE_SHININESS
    int USAGE_NORMAL -> USAGE_NORMAL
    int USAGE_BUMP -> USAGE_BUMP
    int USAGE_TRANSPARENCY -> USAGE_TRANSPARENCY
    int USAGE_REFLECTION -> USAGE_REFLECTION
    java.lang.String id -> id
    java.lang.String fileName -> fileName
    com.badlogic.gdx.math.Vector2 uvTranslation -> uvTranslation
    com.badlogic.gdx.math.Vector2 uvScaling -> uvScaling
    int usage -> usage
com.badlogic.gdx.graphics.g3d.particles.ParallelArray -> com.badlogic.gdx.graphics.g3d.particles.ParallelArray:
    com.badlogic.gdx.utils.Array arrays -> arrays
    int capacity -> capacity
    int size -> size
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$Channel addChannel(com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ChannelDescriptor) -> addChannel
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$Channel addChannel(com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ChannelDescriptor,com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ChannelInitializer) -> addChannel
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$Channel allocateChannel(com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ChannelDescriptor) -> allocateChannel
    void removeArray(int) -> removeArray
    int findIndex(int) -> findIndex
    void addElement(java.lang.Object[]) -> addElement
    void removeElement(int) -> removeElement
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$Channel getChannel(com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ChannelDescriptor) -> getChannel
    void clear() -> clear
    void setCapacity(int) -> setCapacity
com.badlogic.gdx.graphics.g3d.particles.ParallelArray$Channel -> com.badlogic.gdx.graphics.g3d.particles.ParallelArray$Channel:
    int id -> id
    java.lang.Object data -> data
    int strideSize -> strideSize
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray this$0 -> this$0
    void add(int,java.lang.Object[]) -> add
    void swap(int,int) -> swap
    void setCapacity(int) -> setCapacity
com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ChannelDescriptor -> com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ChannelDescriptor:
    int id -> id
    java.lang.Class type -> type
    int count -> count
com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ChannelInitializer -> com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ChannelInitializer:
    void init(com.badlogic.gdx.graphics.g3d.particles.ParallelArray$Channel) -> init
com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel -> com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel:
    float[] data -> data
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray this$0 -> this$0
    void add(int,java.lang.Object[]) -> add
    void swap(int,int) -> swap
    void setCapacity(int) -> setCapacity
com.badlogic.gdx.graphics.g3d.particles.ParallelArray$IntChannel -> com.badlogic.gdx.graphics.g3d.particles.ParallelArray$IntChannel:
    int[] data -> data
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray this$0 -> this$0
    void add(int,java.lang.Object[]) -> add
    void swap(int,int) -> swap
    void setCapacity(int) -> setCapacity
com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ObjectChannel -> com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ObjectChannel:
    java.lang.Class componentType -> componentType
    java.lang.Object[] data -> data
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray this$0 -> this$0
    void add(int,java.lang.Object[]) -> add
    void swap(int,int) -> swap
    void setCapacity(int) -> setCapacity
com.badlogic.gdx.graphics.g3d.particles.ParticleChannels -> com.badlogic.gdx.graphics.g3d.particles.ParticleChannels:
    int currentGlobalId -> currentGlobalId
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ChannelDescriptor Life -> Life
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ChannelDescriptor Position -> Position
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ChannelDescriptor PreviousPosition -> PreviousPosition
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ChannelDescriptor Color -> Color
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ChannelDescriptor TextureRegion -> TextureRegion
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ChannelDescriptor Rotation2D -> Rotation2D
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ChannelDescriptor Rotation3D -> Rotation3D
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ChannelDescriptor Scale -> Scale
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ChannelDescriptor ModelInstance -> ModelInstance
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ChannelDescriptor ParticleController -> ParticleController
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ChannelDescriptor Acceleration -> Acceleration
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ChannelDescriptor AngularVelocity2D -> AngularVelocity2D
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ChannelDescriptor AngularVelocity3D -> AngularVelocity3D
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ChannelDescriptor Interpolation -> Interpolation
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ChannelDescriptor Interpolation4 -> Interpolation4
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ChannelDescriptor Interpolation6 -> Interpolation6
    int CurrentLifeOffset -> CurrentLifeOffset
    int TotalLifeOffset -> TotalLifeOffset
    int LifePercentOffset -> LifePercentOffset
    int RedOffset -> RedOffset
    int GreenOffset -> GreenOffset
    int BlueOffset -> BlueOffset
    int AlphaOffset -> AlphaOffset
    int InterpolationStartOffset -> InterpolationStartOffset
    int InterpolationDiffOffset -> InterpolationDiffOffset
    int VelocityStrengthStartOffset -> VelocityStrengthStartOffset
    int VelocityStrengthDiffOffset -> VelocityStrengthDiffOffset
    int VelocityThetaStartOffset -> VelocityThetaStartOffset
    int VelocityThetaDiffOffset -> VelocityThetaDiffOffset
    int VelocityPhiStartOffset -> VelocityPhiStartOffset
    int VelocityPhiDiffOffset -> VelocityPhiDiffOffset
    int XOffset -> XOffset
    int YOffset -> YOffset
    int ZOffset -> ZOffset
    int WOffset -> WOffset
    int UOffset -> UOffset
    int VOffset -> VOffset
    int U2Offset -> U2Offset
    int V2Offset -> V2Offset
    int HalfWidthOffset -> HalfWidthOffset
    int HalfHeightOffset -> HalfHeightOffset
    int CosineOffset -> CosineOffset
    int SineOffset -> SineOffset
    int currentId -> currentId
    int newGlobalId() -> newGlobalId
    int newId() -> newId
    void resetIds() -> resetIds
com.badlogic.gdx.graphics.g3d.particles.ParticleChannels$ColorInitializer -> com.badlogic.gdx.graphics.g3d.particles.ParticleChannels$ColorInitializer:
    com.badlogic.gdx.graphics.g3d.particles.ParticleChannels$ColorInitializer instance -> instance
    com.badlogic.gdx.graphics.g3d.particles.ParticleChannels$ColorInitializer get() -> get
    void init(com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel) -> init
    void init(com.badlogic.gdx.graphics.g3d.particles.ParallelArray$Channel) -> init
com.badlogic.gdx.graphics.g3d.particles.ParticleChannels$Rotation2dInitializer -> com.badlogic.gdx.graphics.g3d.particles.ParticleChannels$Rotation2dInitializer:
    com.badlogic.gdx.graphics.g3d.particles.ParticleChannels$Rotation2dInitializer instance -> instance
    com.badlogic.gdx.graphics.g3d.particles.ParticleChannels$Rotation2dInitializer get() -> get
    void init(com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel) -> init
    void init(com.badlogic.gdx.graphics.g3d.particles.ParallelArray$Channel) -> init
com.badlogic.gdx.graphics.g3d.particles.ParticleChannels$Rotation3dInitializer -> com.badlogic.gdx.graphics.g3d.particles.ParticleChannels$Rotation3dInitializer:
    com.badlogic.gdx.graphics.g3d.particles.ParticleChannels$Rotation3dInitializer instance -> instance
    com.badlogic.gdx.graphics.g3d.particles.ParticleChannels$Rotation3dInitializer get() -> get
    void init(com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel) -> init
    void init(com.badlogic.gdx.graphics.g3d.particles.ParallelArray$Channel) -> init
com.badlogic.gdx.graphics.g3d.particles.ParticleChannels$ScaleInitializer -> com.badlogic.gdx.graphics.g3d.particles.ParticleChannels$ScaleInitializer:
    com.badlogic.gdx.graphics.g3d.particles.ParticleChannels$ScaleInitializer instance -> instance
    com.badlogic.gdx.graphics.g3d.particles.ParticleChannels$ScaleInitializer get() -> get
    void init(com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel) -> init
    void init(com.badlogic.gdx.graphics.g3d.particles.ParallelArray$Channel) -> init
com.badlogic.gdx.graphics.g3d.particles.ParticleChannels$TextureRegionInitializer -> com.badlogic.gdx.graphics.g3d.particles.ParticleChannels$TextureRegionInitializer:
    com.badlogic.gdx.graphics.g3d.particles.ParticleChannels$TextureRegionInitializer instance -> instance
    com.badlogic.gdx.graphics.g3d.particles.ParticleChannels$TextureRegionInitializer get() -> get
    void init(com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel) -> init
    void init(com.badlogic.gdx.graphics.g3d.particles.ParallelArray$Channel) -> init
com.badlogic.gdx.graphics.g3d.particles.ParticleController -> com.badlogic.gdx.graphics.g3d.particles.ParticleController:
    float DEFAULT_TIME_STEP -> DEFAULT_TIME_STEP
    java.lang.String name -> name
    com.badlogic.gdx.graphics.g3d.particles.emitters.Emitter emitter -> emitter
    com.badlogic.gdx.utils.Array influencers -> influencers
    com.badlogic.gdx.graphics.g3d.particles.renderers.ParticleControllerRenderer renderer -> renderer
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray particles -> particles
    com.badlogic.gdx.graphics.g3d.particles.ParticleChannels particleChannels -> particleChannels
    com.badlogic.gdx.math.Matrix4 transform -> transform
    com.badlogic.gdx.math.Vector3 scale -> scale
    com.badlogic.gdx.math.collision.BoundingBox boundingBox -> boundingBox
    float deltaTime -> deltaTime
    float deltaTimeSqr -> deltaTimeSqr
    void setTimeStep(float) -> setTimeStep
    void setTransform(com.badlogic.gdx.math.Matrix4) -> setTransform
    void setTransform(float,float,float,float,float,float,float,float) -> setTransform
    void rotate(com.badlogic.gdx.math.Quaternion) -> rotate
    void rotate(com.badlogic.gdx.math.Vector3,float) -> rotate
    void translate(com.badlogic.gdx.math.Vector3) -> translate
    void setTranslation(com.badlogic.gdx.math.Vector3) -> setTranslation
    void scale(float,float,float) -> scale
    void scale(com.badlogic.gdx.math.Vector3) -> scale
    void mul(com.badlogic.gdx.math.Matrix4) -> mul
    void getTransform(com.badlogic.gdx.math.Matrix4) -> getTransform
    void init() -> init
    void allocateChannels(int) -> allocateChannels
    void bind() -> bind
    void start() -> start
    void reset() -> reset
    void end() -> end
    void activateParticles(int,int) -> activateParticles
    void killParticles(int,int) -> killParticles
    void update() -> update
    void draw() -> draw
    com.badlogic.gdx.graphics.g3d.particles.ParticleController copy() -> copy
    void dispose() -> dispose
    com.badlogic.gdx.math.collision.BoundingBox getBoundingBox() -> getBoundingBox
    void calculateBoundingBox() -> calculateBoundingBox
    int findIndex(java.lang.Class) -> findIndex
    com.badlogic.gdx.graphics.g3d.particles.influencers.Influencer findInfluencer(java.lang.Class) -> findInfluencer
    void removeInfluencer(java.lang.Class) -> removeInfluencer
    boolean replaceInfluencer(java.lang.Class,com.badlogic.gdx.graphics.g3d.particles.influencers.Influencer) -> replaceInfluencer
    void write(com.badlogic.gdx.utils.Json) -> write
    void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue) -> read
    void save(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.graphics.g3d.particles.ResourceData) -> save
    void load(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.graphics.g3d.particles.ResourceData) -> load
com.badlogic.gdx.graphics.g3d.particles.ParticleControllerComponent -> com.badlogic.gdx.graphics.g3d.particles.ParticleControllerComponent:
    com.badlogic.gdx.math.Vector3 TMP_V1 -> TMP_V1
    com.badlogic.gdx.math.Vector3 TMP_V2 -> TMP_V2
    com.badlogic.gdx.math.Vector3 TMP_V3 -> TMP_V3
    com.badlogic.gdx.math.Vector3 TMP_V4 -> TMP_V4
    com.badlogic.gdx.math.Vector3 TMP_V5 -> TMP_V5
    com.badlogic.gdx.math.Vector3 TMP_V6 -> TMP_V6
    com.badlogic.gdx.math.Quaternion TMP_Q -> TMP_Q
    com.badlogic.gdx.math.Quaternion TMP_Q2 -> TMP_Q2
    com.badlogic.gdx.math.Matrix3 TMP_M3 -> TMP_M3
    com.badlogic.gdx.math.Matrix4 TMP_M4 -> TMP_M4
    com.badlogic.gdx.graphics.g3d.particles.ParticleController controller -> controller
    void activateParticles(int,int) -> activateParticles
    void killParticles(int,int) -> killParticles
    void update() -> update
    void init() -> init
    void start() -> start
    void end() -> end
    void dispose() -> dispose
    com.badlogic.gdx.graphics.g3d.particles.ParticleControllerComponent copy() -> copy
    void allocateChannels() -> allocateChannels
    void set(com.badlogic.gdx.graphics.g3d.particles.ParticleController) -> set
    void save(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.graphics.g3d.particles.ResourceData) -> save
    void load(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.graphics.g3d.particles.ResourceData) -> load
    void write(com.badlogic.gdx.utils.Json) -> write
    void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue) -> read
com.badlogic.gdx.graphics.g3d.particles.ParticleEffect -> com.badlogic.gdx.graphics.g3d.particles.ParticleEffect:
    com.badlogic.gdx.utils.Array controllers -> controllers
    com.badlogic.gdx.math.collision.BoundingBox bounds -> bounds
    void init() -> init
    void start() -> start
    void end() -> end
    void reset() -> reset
    void update() -> update
    void draw() -> draw
    void setTransform(com.badlogic.gdx.math.Matrix4) -> setTransform
    void rotate(com.badlogic.gdx.math.Quaternion) -> rotate
    void rotate(com.badlogic.gdx.math.Vector3,float) -> rotate
    void translate(com.badlogic.gdx.math.Vector3) -> translate
    void scale(float,float,float) -> scale
    void scale(com.badlogic.gdx.math.Vector3) -> scale
    com.badlogic.gdx.utils.Array getControllers() -> getControllers
    com.badlogic.gdx.graphics.g3d.particles.ParticleController findController(java.lang.String) -> findController
    void dispose() -> dispose
    com.badlogic.gdx.math.collision.BoundingBox getBoundingBox() -> getBoundingBox
    void setBatch(com.badlogic.gdx.utils.Array) -> setBatch
    com.badlogic.gdx.graphics.g3d.particles.ParticleEffect copy() -> copy
    void save(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.graphics.g3d.particles.ResourceData) -> save
    void load(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.graphics.g3d.particles.ResourceData) -> load
com.badlogic.gdx.graphics.g3d.particles.ParticleEffectLoader -> com.badlogic.gdx.graphics.g3d.particles.ParticleEffectLoader:
    com.badlogic.gdx.utils.Array items -> items
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.particles.ParticleEffectLoader$ParticleEffectLoadParameter) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.particles.ParticleEffectLoader$ParticleEffectLoadParameter) -> getDependencies
    void save(com.badlogic.gdx.graphics.g3d.particles.ParticleEffect,com.badlogic.gdx.graphics.g3d.particles.ParticleEffectLoader$ParticleEffectSaveParameter) -> save
    com.badlogic.gdx.graphics.g3d.particles.ParticleEffect loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.particles.ParticleEffectLoader$ParticleEffectLoadParameter) -> loadSync
    java.lang.Object find(com.badlogic.gdx.utils.Array,java.lang.Class) -> find
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.graphics.g3d.particles.ParticleEffectLoader$ParticleEffectLoadParameter -> com.badlogic.gdx.graphics.g3d.particles.ParticleEffectLoader$ParticleEffectLoadParameter:
    com.badlogic.gdx.utils.Array batches -> batches
com.badlogic.gdx.graphics.g3d.particles.ParticleEffectLoader$ParticleEffectSaveParameter -> com.badlogic.gdx.graphics.g3d.particles.ParticleEffectLoader$ParticleEffectSaveParameter:
    com.badlogic.gdx.utils.Array batches -> batches
    com.badlogic.gdx.files.FileHandle file -> file
    com.badlogic.gdx.assets.AssetManager manager -> manager
com.badlogic.gdx.graphics.g3d.particles.ParticleShader -> com.badlogic.gdx.graphics.g3d.particles.ParticleShader:
    java.lang.String defaultVertexShader -> defaultVertexShader
    java.lang.String defaultFragmentShader -> defaultFragmentShader
    long implementedFlags -> implementedFlags
    com.badlogic.gdx.math.Vector3 TMP_VECTOR3 -> TMP_VECTOR3
    com.badlogic.gdx.graphics.g3d.Renderable renderable -> renderable
    long materialMask -> materialMask
    long vertexMask -> vertexMask
    com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Config config -> config
    long optionalAttributes -> optionalAttributes
    com.badlogic.gdx.graphics.g3d.Material currentMaterial -> currentMaterial
    java.lang.String getDefaultVertexShader() -> getDefaultVertexShader
    java.lang.String getDefaultFragmentShader() -> getDefaultFragmentShader
    void init() -> init
    java.lang.String createPrefix(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Config) -> createPrefix
    boolean canRender(com.badlogic.gdx.graphics.g3d.Renderable) -> canRender
    int compareTo(com.badlogic.gdx.graphics.g3d.Shader) -> compareTo
    boolean equals(java.lang.Object) -> equals
    boolean equals(com.badlogic.gdx.graphics.g3d.particles.ParticleShader) -> equals
    void begin(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.graphics.g3d.utils.RenderContext) -> begin
    void render(com.badlogic.gdx.graphics.g3d.Renderable) -> render
    void end() -> end
    void bindMaterial(com.badlogic.gdx.graphics.g3d.Renderable) -> bindMaterial
    void dispose() -> dispose
    int getDefaultCullFace() -> getDefaultCullFace
    void setDefaultCullFace(int) -> setDefaultCullFace
    int getDefaultDepthFunc() -> getDefaultDepthFunc
    void setDefaultDepthFunc(int) -> setDefaultDepthFunc
com.badlogic.gdx.graphics.g3d.particles.ParticleShader$AlignMode -> com.badlogic.gdx.graphics.g3d.particles.ParticleShader$AlignMode:
    com.badlogic.gdx.graphics.g3d.particles.ParticleShader$AlignMode Screen -> Screen
    com.badlogic.gdx.graphics.g3d.particles.ParticleShader$AlignMode ViewPoint -> ViewPoint
    com.badlogic.gdx.graphics.g3d.particles.ParticleShader$AlignMode[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.g3d.particles.ParticleShader$AlignMode[] values() -> values
    com.badlogic.gdx.graphics.g3d.particles.ParticleShader$AlignMode valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Config -> com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Config:
    java.lang.String vertexShader -> vertexShader
    java.lang.String fragmentShader -> fragmentShader
    boolean ignoreUnimplemented -> ignoreUnimplemented
    int defaultCullFace -> defaultCullFace
    int defaultDepthFunc -> defaultDepthFunc
    com.badlogic.gdx.graphics.g3d.particles.ParticleShader$AlignMode align -> align
    com.badlogic.gdx.graphics.g3d.particles.ParticleShader$ParticleType type -> type
com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Inputs -> com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Inputs:
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform cameraRight -> cameraRight
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform cameraInvDirection -> cameraInvDirection
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform screenWidth -> screenWidth
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform regionSize -> regionSize
com.badlogic.gdx.graphics.g3d.particles.ParticleShader$ParticleType -> com.badlogic.gdx.graphics.g3d.particles.ParticleShader$ParticleType:
    com.badlogic.gdx.graphics.g3d.particles.ParticleShader$ParticleType Billboard -> Billboard
    com.badlogic.gdx.graphics.g3d.particles.ParticleShader$ParticleType Point -> Point
    com.badlogic.gdx.graphics.g3d.particles.ParticleShader$ParticleType[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.g3d.particles.ParticleShader$ParticleType[] values() -> values
    com.badlogic.gdx.graphics.g3d.particles.ParticleShader$ParticleType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Setters -> com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Setters:
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter cameraRight -> cameraRight
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter cameraUp -> cameraUp
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter cameraInvDirection -> cameraInvDirection
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter cameraPosition -> cameraPosition
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter screenWidth -> screenWidth
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter worldViewTrans -> worldViewTrans
com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Setters$1 -> com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Setters$1:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Setters$2 -> com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Setters$2:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Setters$3 -> com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Setters$3:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Setters$4 -> com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Setters$4:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Setters$5 -> com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Setters$5:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Setters$6 -> com.badlogic.gdx.graphics.g3d.particles.ParticleShader$Setters$6:
    com.badlogic.gdx.math.Matrix4 temp -> temp
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.particles.ParticleSorter -> com.badlogic.gdx.graphics.g3d.particles.ParticleSorter:
    com.badlogic.gdx.math.Vector3 TMP_V1 -> TMP_V1
    com.badlogic.gdx.graphics.Camera camera -> camera
    int[] sort(com.badlogic.gdx.utils.Array) -> sort
    void setCamera(com.badlogic.gdx.graphics.Camera) -> setCamera
    void ensureCapacity(int) -> ensureCapacity
com.badlogic.gdx.graphics.g3d.particles.ParticleSorter$Distance -> com.badlogic.gdx.graphics.g3d.particles.ParticleSorter$Distance:
    float[] distances -> distances
    int[] particleIndices -> particleIndices
    int[] particleOffsets -> particleOffsets
    int currentSize -> currentSize
    void ensureCapacity(int) -> ensureCapacity
    int[] sort(com.badlogic.gdx.utils.Array) -> sort
    void qsort(int,int) -> qsort
com.badlogic.gdx.graphics.g3d.particles.ParticleSorter$None -> com.badlogic.gdx.graphics.g3d.particles.ParticleSorter$None:
    int currentCapacity -> currentCapacity
    int[] indices -> indices
    void ensureCapacity(int) -> ensureCapacity
    int[] sort(com.badlogic.gdx.utils.Array) -> sort
com.badlogic.gdx.graphics.g3d.particles.ParticleSystem -> com.badlogic.gdx.graphics.g3d.particles.ParticleSystem:
    com.badlogic.gdx.graphics.g3d.particles.ParticleSystem instance -> instance
    com.badlogic.gdx.utils.Array batches -> batches
    com.badlogic.gdx.utils.Array effects -> effects
    com.badlogic.gdx.graphics.g3d.particles.ParticleSystem get() -> get
    void add(com.badlogic.gdx.graphics.g3d.particles.batches.ParticleBatch) -> add
    void add(com.badlogic.gdx.graphics.g3d.particles.ParticleEffect) -> add
    void remove(com.badlogic.gdx.graphics.g3d.particles.ParticleEffect) -> remove
    void removeAll() -> removeAll
    void update() -> update
    void updateAndDraw() -> updateAndDraw
    void begin() -> begin
    void draw() -> draw
    void end() -> end
    void getRenderables(com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Pool) -> getRenderables
    com.badlogic.gdx.utils.Array getBatches() -> getBatches
com.badlogic.gdx.graphics.g3d.particles.ResourceData -> com.badlogic.gdx.graphics.g3d.particles.ResourceData:
    com.badlogic.gdx.utils.ObjectMap uniqueData -> uniqueData
    com.badlogic.gdx.utils.Array data -> data
    com.badlogic.gdx.utils.Array sharedAssets -> sharedAssets
    int currentLoadIndex -> currentLoadIndex
    java.lang.Object resource -> resource
    int getAssetData(java.lang.String,java.lang.Class) -> getAssetData
    com.badlogic.gdx.utils.Array getAssetDescriptors() -> getAssetDescriptors
    com.badlogic.gdx.utils.Array getAssets() -> getAssets
    com.badlogic.gdx.graphics.g3d.particles.ResourceData$SaveData createSaveData() -> createSaveData
    com.badlogic.gdx.graphics.g3d.particles.ResourceData$SaveData createSaveData(java.lang.String) -> createSaveData
    com.badlogic.gdx.graphics.g3d.particles.ResourceData$SaveData getSaveData() -> getSaveData
    com.badlogic.gdx.graphics.g3d.particles.ResourceData$SaveData getSaveData(java.lang.String) -> getSaveData
    void write(com.badlogic.gdx.utils.Json) -> write
    void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue) -> read
com.badlogic.gdx.graphics.g3d.particles.ResourceData$AssetData -> com.badlogic.gdx.graphics.g3d.particles.ResourceData$AssetData:
    java.lang.String filename -> filename
    java.lang.Class type -> type
    void write(com.badlogic.gdx.utils.Json) -> write
    void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue) -> read
com.badlogic.gdx.graphics.g3d.particles.ResourceData$Configurable -> com.badlogic.gdx.graphics.g3d.particles.ResourceData$Configurable:
    void save(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.graphics.g3d.particles.ResourceData) -> save
    void load(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.graphics.g3d.particles.ResourceData) -> load
com.badlogic.gdx.graphics.g3d.particles.ResourceData$SaveData -> com.badlogic.gdx.graphics.g3d.particles.ResourceData$SaveData:
    com.badlogic.gdx.utils.ObjectMap data -> data
    com.badlogic.gdx.utils.IntArray assets -> assets
    int loadIndex -> loadIndex
    com.badlogic.gdx.graphics.g3d.particles.ResourceData resources -> resources
    void saveAsset(java.lang.String,java.lang.Class) -> saveAsset
    void save(java.lang.String,java.lang.Object) -> save
    com.badlogic.gdx.assets.AssetDescriptor loadAsset() -> loadAsset
    java.lang.Object load(java.lang.String) -> load
    void write(com.badlogic.gdx.utils.Json) -> write
    void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue) -> read
com.badlogic.gdx.graphics.g3d.particles.batches.BillboardParticleBatch -> com.badlogic.gdx.graphics.g3d.particles.batches.BillboardParticleBatch:
    com.badlogic.gdx.math.Vector3 TMP_V1 -> TMP_V1
    com.badlogic.gdx.math.Vector3 TMP_V2 -> TMP_V2
    com.badlogic.gdx.math.Vector3 TMP_V3 -> TMP_V3
    com.badlogic.gdx.math.Vector3 TMP_V4 -> TMP_V4
    com.badlogic.gdx.math.Vector3 TMP_V5 -> TMP_V5
    com.badlogic.gdx.math.Vector3 TMP_V6 -> TMP_V6
    com.badlogic.gdx.math.Matrix3 TMP_M3 -> TMP_M3
    int sizeAndRotationUsage -> sizeAndRotationUsage
    int directionUsage -> directionUsage
    com.badlogic.gdx.graphics.VertexAttributes GPU_ATTRIBUTES -> GPU_ATTRIBUTES
    com.badlogic.gdx.graphics.VertexAttributes CPU_ATTRIBUTES -> CPU_ATTRIBUTES
    int GPU_POSITION_OFFSET -> GPU_POSITION_OFFSET
    int GPU_UV_OFFSET -> GPU_UV_OFFSET
    int GPU_SIZE_ROTATION_OFFSET -> GPU_SIZE_ROTATION_OFFSET
    int GPU_COLOR_OFFSET -> GPU_COLOR_OFFSET
    int GPU_VERTEX_SIZE -> GPU_VERTEX_SIZE
    int CPU_POSITION_OFFSET -> CPU_POSITION_OFFSET
    int CPU_UV_OFFSET -> CPU_UV_OFFSET
    int CPU_COLOR_OFFSET -> CPU_COLOR_OFFSET
    int CPU_VERTEX_SIZE -> CPU_VERTEX_SIZE
    int MAX_PARTICLES_PER_MESH -> MAX_PARTICLES_PER_MESH
    int MAX_VERTICES_PER_MESH -> MAX_VERTICES_PER_MESH
    com.badlogic.gdx.graphics.g3d.particles.batches.BillboardParticleBatch$RenderablePool renderablePool -> renderablePool
    com.badlogic.gdx.utils.Array renderables -> renderables
    float[] vertices -> vertices
    short[] indices -> indices
    int currentVertexSize -> currentVertexSize
    com.badlogic.gdx.graphics.VertexAttributes currentAttributes -> currentAttributes
    boolean useGPU -> useGPU
    com.badlogic.gdx.graphics.g3d.particles.ParticleShader$AlignMode mode -> mode
    com.badlogic.gdx.graphics.Texture texture -> texture
    com.badlogic.gdx.graphics.g3d.Shader shader -> shader
    void allocParticlesData(int) -> allocParticlesData
    com.badlogic.gdx.graphics.g3d.Renderable allocRenderable() -> allocRenderable
    void allocIndices() -> allocIndices
    void allocRenderables(int) -> allocRenderables
    com.badlogic.gdx.graphics.g3d.Shader getShader(com.badlogic.gdx.graphics.g3d.Renderable) -> getShader
    void allocShader() -> allocShader
    void clearRenderablesPool() -> clearRenderablesPool
    void setVertexData() -> setVertexData
    void initRenderData() -> initRenderData
    void setAlignMode(com.badlogic.gdx.graphics.g3d.particles.ParticleShader$AlignMode) -> setAlignMode
    com.badlogic.gdx.graphics.g3d.particles.ParticleShader$AlignMode getAlignMode() -> getAlignMode
    void setUseGpu(boolean) -> setUseGpu
    boolean isUseGPU() -> isUseGPU
    void setTexture(com.badlogic.gdx.graphics.Texture) -> setTexture
    com.badlogic.gdx.graphics.Texture getTexture() -> getTexture
    void begin() -> begin
    void putVertex(float[],int,float,float,float,float,float,float,float,float,float,float,float,float,float) -> putVertex
    void putVertex(float[],int,com.badlogic.gdx.math.Vector3,float,float,float,float,float,float) -> putVertex
    void fillVerticesGPU(int[]) -> fillVerticesGPU
    void fillVerticesToViewPointCPU(int[]) -> fillVerticesToViewPointCPU
    void fillVerticesToScreenCPU(int[]) -> fillVerticesToScreenCPU
    void flush(int[]) -> flush
    void getRenderables(com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Pool) -> getRenderables
    void save(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.graphics.g3d.particles.ResourceData) -> save
    void load(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.graphics.g3d.particles.ResourceData) -> load
com.badlogic.gdx.graphics.g3d.particles.batches.BillboardParticleBatch$Config -> com.badlogic.gdx.graphics.g3d.particles.batches.BillboardParticleBatch$Config:
    boolean useGPU -> useGPU
    com.badlogic.gdx.graphics.g3d.particles.ParticleShader$AlignMode mode -> mode
com.badlogic.gdx.graphics.g3d.particles.batches.BillboardParticleBatch$RenderablePool -> com.badlogic.gdx.graphics.g3d.particles.batches.BillboardParticleBatch$RenderablePool:
    com.badlogic.gdx.graphics.g3d.particles.batches.BillboardParticleBatch this$0 -> this$0
    com.badlogic.gdx.graphics.g3d.Renderable newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.particles.batches.BufferedParticleBatch -> com.badlogic.gdx.graphics.g3d.particles.batches.BufferedParticleBatch:
    com.badlogic.gdx.utils.Array renderData -> renderData
    int bufferedParticlesCount -> bufferedParticlesCount
    int currentCapacity -> currentCapacity
    com.badlogic.gdx.graphics.g3d.particles.ParticleSorter sorter -> sorter
    com.badlogic.gdx.graphics.Camera camera -> camera
    void begin() -> begin
    void draw(com.badlogic.gdx.graphics.g3d.particles.renderers.ParticleControllerRenderData) -> draw
    void end() -> end
    void ensureCapacity(int) -> ensureCapacity
    void resetCapacity() -> resetCapacity
    void allocParticlesData(int) -> allocParticlesData
    void setCamera(com.badlogic.gdx.graphics.Camera) -> setCamera
    com.badlogic.gdx.graphics.g3d.particles.ParticleSorter getSorter() -> getSorter
    void setSorter(com.badlogic.gdx.graphics.g3d.particles.ParticleSorter) -> setSorter
    void flush(int[]) -> flush
    int getBufferedCount() -> getBufferedCount
com.badlogic.gdx.graphics.g3d.particles.batches.ModelInstanceParticleBatch -> com.badlogic.gdx.graphics.g3d.particles.batches.ModelInstanceParticleBatch:
    com.badlogic.gdx.utils.Array controllersRenderData -> controllersRenderData
    int bufferedParticlesCount -> bufferedParticlesCount
    void getRenderables(com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Pool) -> getRenderables
    int getBufferedCount() -> getBufferedCount
    void begin() -> begin
    void end() -> end
    void draw(com.badlogic.gdx.graphics.g3d.particles.renderers.ModelInstanceControllerRenderData) -> draw
    void save(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.graphics.g3d.particles.ResourceData) -> save
    void load(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.graphics.g3d.particles.ResourceData) -> load
    void draw(com.badlogic.gdx.graphics.g3d.particles.renderers.ParticleControllerRenderData) -> draw
com.badlogic.gdx.graphics.g3d.particles.batches.ParticleBatch -> com.badlogic.gdx.graphics.g3d.particles.batches.ParticleBatch:
    void begin() -> begin
    void draw(com.badlogic.gdx.graphics.g3d.particles.renderers.ParticleControllerRenderData) -> draw
    void end() -> end
    void save(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.graphics.g3d.particles.ResourceData) -> save
    void load(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.graphics.g3d.particles.ResourceData) -> load
com.badlogic.gdx.graphics.g3d.particles.batches.PointSpriteParticleBatch -> com.badlogic.gdx.graphics.g3d.particles.batches.PointSpriteParticleBatch:
    boolean pointSpritesEnabled -> pointSpritesEnabled
    com.badlogic.gdx.math.Vector3 TMP_V1 -> TMP_V1
    int sizeAndRotationUsage -> sizeAndRotationUsage
    com.badlogic.gdx.graphics.VertexAttributes CPU_ATTRIBUTES -> CPU_ATTRIBUTES
    int CPU_VERTEX_SIZE -> CPU_VERTEX_SIZE
    int CPU_POSITION_OFFSET -> CPU_POSITION_OFFSET
    int CPU_COLOR_OFFSET -> CPU_COLOR_OFFSET
    int CPU_REGION_OFFSET -> CPU_REGION_OFFSET
    int CPU_SIZE_AND_ROTATION_OFFSET -> CPU_SIZE_AND_ROTATION_OFFSET
    float[] vertices -> vertices
    com.badlogic.gdx.graphics.g3d.Renderable renderable -> renderable
    void enablePointSprites() -> enablePointSprites
    void allocParticlesData(int) -> allocParticlesData
    void allocRenderable() -> allocRenderable
    void setTexture(com.badlogic.gdx.graphics.Texture) -> setTexture
    com.badlogic.gdx.graphics.Texture getTexture() -> getTexture
    void flush(int[]) -> flush
    void getRenderables(com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Pool) -> getRenderables
    void save(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.graphics.g3d.particles.ResourceData) -> save
    void load(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.graphics.g3d.particles.ResourceData) -> load
com.badlogic.gdx.graphics.g3d.particles.emitters.Emitter -> com.badlogic.gdx.graphics.g3d.particles.emitters.Emitter:
    int minParticleCount -> minParticleCount
    int maxParticleCount -> maxParticleCount
    float percent -> percent
    void init() -> init
    void end() -> end
    int getMinParticleCount() -> getMinParticleCount
    void setMinParticleCount(int) -> setMinParticleCount
    int getMaxParticleCount() -> getMaxParticleCount
    void setMaxParticleCount(int) -> setMaxParticleCount
    void setParticleCount(int,int) -> setParticleCount
    void set(com.badlogic.gdx.graphics.g3d.particles.emitters.Emitter) -> set
    void write(com.badlogic.gdx.utils.Json) -> write
    void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue) -> read
com.badlogic.gdx.graphics.g3d.particles.emitters.RegularEmitter -> com.badlogic.gdx.graphics.g3d.particles.emitters.RegularEmitter:
    com.badlogic.gdx.graphics.g3d.particles.values.RangedNumericValue delayValue -> delayValue
    com.badlogic.gdx.graphics.g3d.particles.values.RangedNumericValue durationValue -> durationValue
    com.badlogic.gdx.graphics.g3d.particles.values.ScaledNumericValue lifeOffsetValue -> lifeOffsetValue
    com.badlogic.gdx.graphics.g3d.particles.values.ScaledNumericValue lifeValue -> lifeValue
    com.badlogic.gdx.graphics.g3d.particles.values.ScaledNumericValue emissionValue -> emissionValue
    int emission -> emission
    int emissionDiff -> emissionDiff
    int emissionDelta -> emissionDelta
    int lifeOffset -> lifeOffset
    int lifeOffsetDiff -> lifeOffsetDiff
    int life -> life
    int lifeDiff -> lifeDiff
    float duration -> duration
    float delay -> delay
    float durationTimer -> durationTimer
    float delayTimer -> delayTimer
    boolean continuous -> continuous
    com.badlogic.gdx.graphics.g3d.particles.emitters.RegularEmitter$EmissionMode emissionMode -> emissionMode
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel lifeChannel -> lifeChannel
    void allocateChannels() -> allocateChannels
    void start() -> start
    void init() -> init
    void activateParticles(int,int) -> activateParticles
    void update() -> update
    void addParticles(int) -> addParticles
    com.badlogic.gdx.graphics.g3d.particles.values.ScaledNumericValue getLife() -> getLife
    com.badlogic.gdx.graphics.g3d.particles.values.ScaledNumericValue getEmission() -> getEmission
    com.badlogic.gdx.graphics.g3d.particles.values.RangedNumericValue getDuration() -> getDuration
    com.badlogic.gdx.graphics.g3d.particles.values.RangedNumericValue getDelay() -> getDelay
    com.badlogic.gdx.graphics.g3d.particles.values.ScaledNumericValue getLifeOffset() -> getLifeOffset
    boolean isContinuous() -> isContinuous
    void setContinuous(boolean) -> setContinuous
    com.badlogic.gdx.graphics.g3d.particles.emitters.RegularEmitter$EmissionMode getEmissionMode() -> getEmissionMode
    void setEmissionMode(com.badlogic.gdx.graphics.g3d.particles.emitters.RegularEmitter$EmissionMode) -> setEmissionMode
    boolean isComplete() -> isComplete
    float getPercentComplete() -> getPercentComplete
    void set(com.badlogic.gdx.graphics.g3d.particles.emitters.RegularEmitter) -> set
    com.badlogic.gdx.graphics.g3d.particles.ParticleControllerComponent copy() -> copy
    void write(com.badlogic.gdx.utils.Json) -> write
    void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue) -> read
com.badlogic.gdx.graphics.g3d.particles.emitters.RegularEmitter$EmissionMode -> com.badlogic.gdx.graphics.g3d.particles.emitters.RegularEmitter$EmissionMode:
    com.badlogic.gdx.graphics.g3d.particles.emitters.RegularEmitter$EmissionMode Enabled -> Enabled
    com.badlogic.gdx.graphics.g3d.particles.emitters.RegularEmitter$EmissionMode EnabledUntilCycleEnd -> EnabledUntilCycleEnd
    com.badlogic.gdx.graphics.g3d.particles.emitters.RegularEmitter$EmissionMode Disabled -> Disabled
    com.badlogic.gdx.graphics.g3d.particles.emitters.RegularEmitter$EmissionMode[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.g3d.particles.emitters.RegularEmitter$EmissionMode[] values() -> values
    com.badlogic.gdx.graphics.g3d.particles.emitters.RegularEmitter$EmissionMode valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g3d.particles.influencers.ColorInfluencer -> com.badlogic.gdx.graphics.g3d.particles.influencers.ColorInfluencer:
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel colorChannel -> colorChannel
    void allocateChannels() -> allocateChannels
com.badlogic.gdx.graphics.g3d.particles.influencers.ColorInfluencer$Random -> com.badlogic.gdx.graphics.g3d.particles.influencers.ColorInfluencer$Random:
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel colorChannel -> colorChannel
    void allocateChannels() -> allocateChannels
    void activateParticles(int,int) -> activateParticles
    com.badlogic.gdx.graphics.g3d.particles.influencers.ColorInfluencer$Random copy() -> copy
    com.badlogic.gdx.graphics.g3d.particles.ParticleControllerComponent copy() -> copy
com.badlogic.gdx.graphics.g3d.particles.influencers.ColorInfluencer$Single -> com.badlogic.gdx.graphics.g3d.particles.influencers.ColorInfluencer$Single:
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel alphaInterpolationChannel -> alphaInterpolationChannel
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel lifeChannel -> lifeChannel
    com.badlogic.gdx.graphics.g3d.particles.values.ScaledNumericValue alphaValue -> alphaValue
    com.badlogic.gdx.graphics.g3d.particles.values.GradientColorValue colorValue -> colorValue
    void set(com.badlogic.gdx.graphics.g3d.particles.influencers.ColorInfluencer$Single) -> set
    void allocateChannels() -> allocateChannels
    void activateParticles(int,int) -> activateParticles
    void update() -> update
    com.badlogic.gdx.graphics.g3d.particles.influencers.ColorInfluencer$Single copy() -> copy
    void write(com.badlogic.gdx.utils.Json) -> write
    void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue) -> read
    com.badlogic.gdx.graphics.g3d.particles.ParticleControllerComponent copy() -> copy
com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsInfluencer -> com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsInfluencer:
    com.badlogic.gdx.utils.Array velocities -> velocities
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel accellerationChannel -> accellerationChannel
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel positionChannel -> positionChannel
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel previousPositionChannel -> previousPositionChannel
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel rotationChannel -> rotationChannel
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel angularVelocityChannel -> angularVelocityChannel
    boolean hasAcceleration -> hasAcceleration
    boolean has2dAngularVelocity -> has2dAngularVelocity
    boolean has3dAngularVelocity -> has3dAngularVelocity
    void allocateChannels() -> allocateChannels
    void set(com.badlogic.gdx.graphics.g3d.particles.ParticleController) -> set
    void init() -> init
    void activateParticles(int,int) -> activateParticles
    void update() -> update
    com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsInfluencer copy() -> copy
    void write(com.badlogic.gdx.utils.Json) -> write
    void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue) -> read
    com.badlogic.gdx.graphics.g3d.particles.ParticleControllerComponent copy() -> copy
com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier -> com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier:
    com.badlogic.gdx.math.Vector3 TMP_V1 -> TMP_V1
    com.badlogic.gdx.math.Vector3 TMP_V2 -> TMP_V2
    com.badlogic.gdx.math.Vector3 TMP_V3 -> TMP_V3
    com.badlogic.gdx.math.Quaternion TMP_Q -> TMP_Q
    boolean isGlobal -> isGlobal
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel lifeChannel -> lifeChannel
    void allocateChannels() -> allocateChannels
    void write(com.badlogic.gdx.utils.Json) -> write
    void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue) -> read
com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$Angular -> com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$Angular:
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel angularChannel -> angularChannel
    com.badlogic.gdx.graphics.g3d.particles.values.ScaledNumericValue thetaValue -> thetaValue
    com.badlogic.gdx.graphics.g3d.particles.values.ScaledNumericValue phiValue -> phiValue
    void allocateChannels() -> allocateChannels
    void activateParticles(int,int) -> activateParticles
    void write(com.badlogic.gdx.utils.Json) -> write
    void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue) -> read
com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$BrownianAcceleration -> com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$BrownianAcceleration:
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel accelerationChannel -> accelerationChannel
    void allocateChannels() -> allocateChannels
    void update() -> update
    com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$BrownianAcceleration copy() -> copy
    com.badlogic.gdx.graphics.g3d.particles.ParticleControllerComponent copy() -> copy
com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$CentripetalAcceleration -> com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$CentripetalAcceleration:
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel accelerationChannel -> accelerationChannel
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel positionChannel -> positionChannel
    void allocateChannels() -> allocateChannels
    void update() -> update
    com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$CentripetalAcceleration copy() -> copy
    com.badlogic.gdx.graphics.g3d.particles.ParticleControllerComponent copy() -> copy
com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$FaceDirection -> com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$FaceDirection:
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel rotationChannel -> rotationChannel
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel accellerationChannel -> accellerationChannel
    void allocateChannels() -> allocateChannels
    void update() -> update
    com.badlogic.gdx.graphics.g3d.particles.ParticleControllerComponent copy() -> copy
com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$PolarAcceleration -> com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$PolarAcceleration:
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel directionalVelocityChannel -> directionalVelocityChannel
    void allocateChannels() -> allocateChannels
    void update() -> update
    com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$PolarAcceleration copy() -> copy
    com.badlogic.gdx.graphics.g3d.particles.ParticleControllerComponent copy() -> copy
com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$Rotational2D -> com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$Rotational2D:
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel rotationalVelocity2dChannel -> rotationalVelocity2dChannel
    void allocateChannels() -> allocateChannels
    void update() -> update
    com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$Rotational2D copy() -> copy
    com.badlogic.gdx.graphics.g3d.particles.ParticleControllerComponent copy() -> copy
com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$Rotational3D -> com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$Rotational3D:
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel rotationChannel -> rotationChannel
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel rotationalForceChannel -> rotationalForceChannel
    void allocateChannels() -> allocateChannels
    void update() -> update
    com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$Rotational3D copy() -> copy
    com.badlogic.gdx.graphics.g3d.particles.ParticleControllerComponent copy() -> copy
com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$Strength -> com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$Strength:
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel strengthChannel -> strengthChannel
    com.badlogic.gdx.graphics.g3d.particles.values.ScaledNumericValue strengthValue -> strengthValue
    void allocateChannels() -> allocateChannels
    void activateParticles(int,int) -> activateParticles
    void write(com.badlogic.gdx.utils.Json) -> write
    void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue) -> read
com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$TangentialAcceleration -> com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$TangentialAcceleration:
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel directionalVelocityChannel -> directionalVelocityChannel
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel positionChannel -> positionChannel
    void allocateChannels() -> allocateChannels
    void update() -> update
    com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier$TangentialAcceleration copy() -> copy
    com.badlogic.gdx.graphics.g3d.particles.ParticleControllerComponent copy() -> copy
com.badlogic.gdx.graphics.g3d.particles.influencers.Influencer -> com.badlogic.gdx.graphics.g3d.particles.influencers.Influencer:
com.badlogic.gdx.graphics.g3d.particles.influencers.ModelInfluencer -> com.badlogic.gdx.graphics.g3d.particles.influencers.ModelInfluencer:
    com.badlogic.gdx.utils.Array models -> models
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ObjectChannel modelChannel -> modelChannel
    void allocateChannels() -> allocateChannels
    void save(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.graphics.g3d.particles.ResourceData) -> save
    void load(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.graphics.g3d.particles.ResourceData) -> load
com.badlogic.gdx.graphics.g3d.particles.influencers.ModelInfluencer$Random -> com.badlogic.gdx.graphics.g3d.particles.influencers.ModelInfluencer$Random:
    com.badlogic.gdx.graphics.g3d.particles.influencers.ModelInfluencer$Random$ModelInstancePool pool -> pool
    void init() -> init
    void activateParticles(int,int) -> activateParticles
    void killParticles(int,int) -> killParticles
    com.badlogic.gdx.graphics.g3d.particles.influencers.ModelInfluencer$Random copy() -> copy
    com.badlogic.gdx.graphics.g3d.particles.ParticleControllerComponent copy() -> copy
com.badlogic.gdx.graphics.g3d.particles.influencers.ModelInfluencer$Random$ModelInstancePool -> com.badlogic.gdx.graphics.g3d.particles.influencers.ModelInfluencer$Random$ModelInstancePool:
    com.badlogic.gdx.graphics.g3d.particles.influencers.ModelInfluencer$Random this$0 -> this$0
    com.badlogic.gdx.graphics.g3d.ModelInstance newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.particles.influencers.ModelInfluencer$Single -> com.badlogic.gdx.graphics.g3d.particles.influencers.ModelInfluencer$Single:
    void init() -> init
    com.badlogic.gdx.graphics.g3d.particles.influencers.ModelInfluencer$Single copy() -> copy
    com.badlogic.gdx.graphics.g3d.particles.ParticleControllerComponent copy() -> copy
com.badlogic.gdx.graphics.g3d.particles.influencers.ParticleControllerFinalizerInfluencer -> com.badlogic.gdx.graphics.g3d.particles.influencers.ParticleControllerFinalizerInfluencer:
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel positionChannel -> positionChannel
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel scaleChannel -> scaleChannel
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel rotationChannel -> rotationChannel
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ObjectChannel controllerChannel -> controllerChannel
    boolean hasScale -> hasScale
    boolean hasRotation -> hasRotation
    void init() -> init
    void allocateChannels() -> allocateChannels
    void update() -> update
    com.badlogic.gdx.graphics.g3d.particles.influencers.ParticleControllerFinalizerInfluencer copy() -> copy
    com.badlogic.gdx.graphics.g3d.particles.ParticleControllerComponent copy() -> copy
com.badlogic.gdx.graphics.g3d.particles.influencers.ParticleControllerInfluencer -> com.badlogic.gdx.graphics.g3d.particles.influencers.ParticleControllerInfluencer:
    com.badlogic.gdx.utils.Array templates -> templates
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ObjectChannel particleControllerChannel -> particleControllerChannel
    void allocateChannels() -> allocateChannels
    void end() -> end
    void dispose() -> dispose
    void save(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.graphics.g3d.particles.ResourceData) -> save
    void load(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.graphics.g3d.particles.ResourceData) -> load
com.badlogic.gdx.graphics.g3d.particles.influencers.ParticleControllerInfluencer$Random -> com.badlogic.gdx.graphics.g3d.particles.influencers.ParticleControllerInfluencer$Random:
    com.badlogic.gdx.graphics.g3d.particles.influencers.ParticleControllerInfluencer$Random$ParticleControllerPool pool -> pool
    void init() -> init
    void dispose() -> dispose
    void activateParticles(int,int) -> activateParticles
    void killParticles(int,int) -> killParticles
    com.badlogic.gdx.graphics.g3d.particles.influencers.ParticleControllerInfluencer$Random copy() -> copy
    com.badlogic.gdx.graphics.g3d.particles.ParticleControllerComponent copy() -> copy
com.badlogic.gdx.graphics.g3d.particles.influencers.ParticleControllerInfluencer$Random$ParticleControllerPool -> com.badlogic.gdx.graphics.g3d.particles.influencers.ParticleControllerInfluencer$Random$ParticleControllerPool:
    com.badlogic.gdx.graphics.g3d.particles.influencers.ParticleControllerInfluencer$Random this$0 -> this$0
    com.badlogic.gdx.graphics.g3d.particles.ParticleController newObject() -> newObject
    void clear() -> clear
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.particles.influencers.ParticleControllerInfluencer$Single -> com.badlogic.gdx.graphics.g3d.particles.influencers.ParticleControllerInfluencer$Single:
    void init() -> init
    void activateParticles(int,int) -> activateParticles
    void killParticles(int,int) -> killParticles
    com.badlogic.gdx.graphics.g3d.particles.influencers.ParticleControllerInfluencer$Single copy() -> copy
    com.badlogic.gdx.graphics.g3d.particles.ParticleControllerComponent copy() -> copy
com.badlogic.gdx.graphics.g3d.particles.influencers.RegionInfluencer -> com.badlogic.gdx.graphics.g3d.particles.influencers.RegionInfluencer:
    com.badlogic.gdx.utils.Array regions -> regions
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel regionChannel -> regionChannel
    void add(com.badlogic.gdx.graphics.g2d.TextureRegion[]) -> add
    void clear() -> clear
    void allocateChannels() -> allocateChannels
    void write(com.badlogic.gdx.utils.Json) -> write
    void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue) -> read
com.badlogic.gdx.graphics.g3d.particles.influencers.RegionInfluencer$Animated -> com.badlogic.gdx.graphics.g3d.particles.influencers.RegionInfluencer$Animated:
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel lifeChannel -> lifeChannel
    void allocateChannels() -> allocateChannels
    void update() -> update
    com.badlogic.gdx.graphics.g3d.particles.influencers.RegionInfluencer$Animated copy() -> copy
    com.badlogic.gdx.graphics.g3d.particles.ParticleControllerComponent copy() -> copy
com.badlogic.gdx.graphics.g3d.particles.influencers.RegionInfluencer$AspectTextureRegion -> com.badlogic.gdx.graphics.g3d.particles.influencers.RegionInfluencer$AspectTextureRegion:
    float u -> u
    float v -> v
    float u2 -> u2
    float v2 -> v2
    float halfInvAspectRatio -> halfInvAspectRatio
    void set(com.badlogic.gdx.graphics.g2d.TextureRegion) -> set
    void set(com.badlogic.gdx.graphics.g3d.particles.influencers.RegionInfluencer$AspectTextureRegion) -> set
com.badlogic.gdx.graphics.g3d.particles.influencers.RegionInfluencer$Random -> com.badlogic.gdx.graphics.g3d.particles.influencers.RegionInfluencer$Random:
    void activateParticles(int,int) -> activateParticles
    com.badlogic.gdx.graphics.g3d.particles.influencers.RegionInfluencer$Random copy() -> copy
    com.badlogic.gdx.graphics.g3d.particles.ParticleControllerComponent copy() -> copy
com.badlogic.gdx.graphics.g3d.particles.influencers.RegionInfluencer$Single -> com.badlogic.gdx.graphics.g3d.particles.influencers.RegionInfluencer$Single:
    void init() -> init
    com.badlogic.gdx.graphics.g3d.particles.influencers.RegionInfluencer$Single copy() -> copy
    com.badlogic.gdx.graphics.g3d.particles.ParticleControllerComponent copy() -> copy
com.badlogic.gdx.graphics.g3d.particles.influencers.ScaleInfluencer -> com.badlogic.gdx.graphics.g3d.particles.influencers.ScaleInfluencer:
    void activateParticles(int,int) -> activateParticles
    com.badlogic.gdx.graphics.g3d.particles.ParticleControllerComponent copy() -> copy
com.badlogic.gdx.graphics.g3d.particles.influencers.SimpleInfluencer -> com.badlogic.gdx.graphics.g3d.particles.influencers.SimpleInfluencer:
    com.badlogic.gdx.graphics.g3d.particles.values.ScaledNumericValue value -> value
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel valueChannel -> valueChannel
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel interpolationChannel -> interpolationChannel
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel lifeChannel -> lifeChannel
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ChannelDescriptor valueChannelDescriptor -> valueChannelDescriptor
    void set(com.badlogic.gdx.graphics.g3d.particles.influencers.SimpleInfluencer) -> set
    void allocateChannels() -> allocateChannels
    void activateParticles(int,int) -> activateParticles
    void update() -> update
    void write(com.badlogic.gdx.utils.Json) -> write
    void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue) -> read
com.badlogic.gdx.graphics.g3d.particles.influencers.SpawnInfluencer -> com.badlogic.gdx.graphics.g3d.particles.influencers.SpawnInfluencer:
    com.badlogic.gdx.graphics.g3d.particles.values.SpawnShapeValue spawnShapeValue -> spawnShapeValue
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel positionChannel -> positionChannel
    void init() -> init
    void allocateChannels() -> allocateChannels
    void start() -> start
    void activateParticles(int,int) -> activateParticles
    com.badlogic.gdx.graphics.g3d.particles.influencers.SpawnInfluencer copy() -> copy
    void write(com.badlogic.gdx.utils.Json) -> write
    void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue) -> read
    void save(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.graphics.g3d.particles.ResourceData) -> save
    void load(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.graphics.g3d.particles.ResourceData) -> load
    com.badlogic.gdx.graphics.g3d.particles.ParticleControllerComponent copy() -> copy
com.badlogic.gdx.graphics.g3d.particles.renderers.BillboardControllerRenderData -> com.badlogic.gdx.graphics.g3d.particles.renderers.BillboardControllerRenderData:
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel regionChannel -> regionChannel
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel colorChannel -> colorChannel
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel scaleChannel -> scaleChannel
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel rotationChannel -> rotationChannel
com.badlogic.gdx.graphics.g3d.particles.renderers.BillboardRenderer -> com.badlogic.gdx.graphics.g3d.particles.renderers.BillboardRenderer:
    void allocateChannels() -> allocateChannels
    com.badlogic.gdx.graphics.g3d.particles.ParticleControllerComponent copy() -> copy
    boolean isCompatible(com.badlogic.gdx.graphics.g3d.particles.batches.ParticleBatch) -> isCompatible
com.badlogic.gdx.graphics.g3d.particles.renderers.ModelInstanceControllerRenderData -> com.badlogic.gdx.graphics.g3d.particles.renderers.ModelInstanceControllerRenderData:
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ObjectChannel modelInstanceChannel -> modelInstanceChannel
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel colorChannel -> colorChannel
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel scaleChannel -> scaleChannel
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel rotationChannel -> rotationChannel
com.badlogic.gdx.graphics.g3d.particles.renderers.ModelInstanceRenderer -> com.badlogic.gdx.graphics.g3d.particles.renderers.ModelInstanceRenderer:
    boolean hasColor -> hasColor
    boolean hasScale -> hasScale
    boolean hasRotation -> hasRotation
    void allocateChannels() -> allocateChannels
    void init() -> init
    void update() -> update
    com.badlogic.gdx.graphics.g3d.particles.ParticleControllerComponent copy() -> copy
    boolean isCompatible(com.badlogic.gdx.graphics.g3d.particles.batches.ParticleBatch) -> isCompatible
com.badlogic.gdx.graphics.g3d.particles.renderers.ParticleControllerControllerRenderer -> com.badlogic.gdx.graphics.g3d.particles.renderers.ParticleControllerControllerRenderer:
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$ObjectChannel controllerChannel -> controllerChannel
    void init() -> init
    void update() -> update
    com.badlogic.gdx.graphics.g3d.particles.ParticleControllerComponent copy() -> copy
    boolean isCompatible(com.badlogic.gdx.graphics.g3d.particles.batches.ParticleBatch) -> isCompatible
com.badlogic.gdx.graphics.g3d.particles.renderers.ParticleControllerRenderData -> com.badlogic.gdx.graphics.g3d.particles.renderers.ParticleControllerRenderData:
    com.badlogic.gdx.graphics.g3d.particles.ParticleController controller -> controller
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel positionChannel -> positionChannel
com.badlogic.gdx.graphics.g3d.particles.renderers.ParticleControllerRenderer -> com.badlogic.gdx.graphics.g3d.particles.renderers.ParticleControllerRenderer:
    com.badlogic.gdx.graphics.g3d.particles.batches.ParticleBatch batch -> batch
    com.badlogic.gdx.graphics.g3d.particles.renderers.ParticleControllerRenderData renderData -> renderData
    void update() -> update
    boolean setBatch(com.badlogic.gdx.graphics.g3d.particles.batches.ParticleBatch) -> setBatch
    boolean isCompatible(com.badlogic.gdx.graphics.g3d.particles.batches.ParticleBatch) -> isCompatible
    void set(com.badlogic.gdx.graphics.g3d.particles.ParticleController) -> set
com.badlogic.gdx.graphics.g3d.particles.renderers.PointSpriteControllerRenderData -> com.badlogic.gdx.graphics.g3d.particles.renderers.PointSpriteControllerRenderData:
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel regionChannel -> regionChannel
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel colorChannel -> colorChannel
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel scaleChannel -> scaleChannel
    com.badlogic.gdx.graphics.g3d.particles.ParallelArray$FloatChannel rotationChannel -> rotationChannel
com.badlogic.gdx.graphics.g3d.particles.renderers.PointSpriteRenderer -> com.badlogic.gdx.graphics.g3d.particles.renderers.PointSpriteRenderer:
    void allocateChannels() -> allocateChannels
    boolean isCompatible(com.badlogic.gdx.graphics.g3d.particles.batches.ParticleBatch) -> isCompatible
    com.badlogic.gdx.graphics.g3d.particles.ParticleControllerComponent copy() -> copy
com.badlogic.gdx.graphics.g3d.particles.values.CylinderSpawnShapeValue -> com.badlogic.gdx.graphics.g3d.particles.values.CylinderSpawnShapeValue:
    void spawnAux(com.badlogic.gdx.math.Vector3,float) -> spawnAux
    com.badlogic.gdx.graphics.g3d.particles.values.SpawnShapeValue copy() -> copy
com.badlogic.gdx.graphics.g3d.particles.values.EllipseSpawnShapeValue -> com.badlogic.gdx.graphics.g3d.particles.values.EllipseSpawnShapeValue:
    com.badlogic.gdx.graphics.g3d.particles.values.PrimitiveSpawnShapeValue$SpawnSide side -> side
    void spawnAux(com.badlogic.gdx.math.Vector3,float) -> spawnAux
    com.badlogic.gdx.graphics.g3d.particles.values.PrimitiveSpawnShapeValue$SpawnSide getSide() -> getSide
    void setSide(com.badlogic.gdx.graphics.g3d.particles.values.PrimitiveSpawnShapeValue$SpawnSide) -> setSide
    void load(com.badlogic.gdx.graphics.g3d.particles.values.ParticleValue) -> load
    com.badlogic.gdx.graphics.g3d.particles.values.SpawnShapeValue copy() -> copy
    void write(com.badlogic.gdx.utils.Json) -> write
    void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue) -> read
com.badlogic.gdx.graphics.g3d.particles.values.GradientColorValue -> com.badlogic.gdx.graphics.g3d.particles.values.GradientColorValue:
    float[] temp -> temp
    float[] colors -> colors
    float[] timeline -> timeline
    float[] getTimeline() -> getTimeline
    void setTimeline(float[]) -> setTimeline
    float[] getColors() -> getColors
    void setColors(float[]) -> setColors
    float[] getColor(float) -> getColor
    void getColor(float,float[],int) -> getColor
    void write(com.badlogic.gdx.utils.Json) -> write
    void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue) -> read
    void load(com.badlogic.gdx.graphics.g3d.particles.values.GradientColorValue) -> load
com.badlogic.gdx.graphics.g3d.particles.values.LineSpawnShapeValue -> com.badlogic.gdx.graphics.g3d.particles.values.LineSpawnShapeValue:
    void spawnAux(com.badlogic.gdx.math.Vector3,float) -> spawnAux
    com.badlogic.gdx.graphics.g3d.particles.values.SpawnShapeValue copy() -> copy
com.badlogic.gdx.graphics.g3d.particles.values.MeshSpawnShapeValue -> com.badlogic.gdx.graphics.g3d.particles.values.MeshSpawnShapeValue:
    com.badlogic.gdx.graphics.Mesh mesh -> mesh
    com.badlogic.gdx.graphics.g3d.Model model -> model
    void load(com.badlogic.gdx.graphics.g3d.particles.values.ParticleValue) -> load
    void setMesh(com.badlogic.gdx.graphics.Mesh,com.badlogic.gdx.graphics.g3d.Model) -> setMesh
    void setMesh(com.badlogic.gdx.graphics.Mesh) -> setMesh
    void save(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.graphics.g3d.particles.ResourceData) -> save
    void load(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.graphics.g3d.particles.ResourceData) -> load
com.badlogic.gdx.graphics.g3d.particles.values.MeshSpawnShapeValue$Triangle -> com.badlogic.gdx.graphics.g3d.particles.values.MeshSpawnShapeValue$Triangle:
    float x1 -> x1
    float y1 -> y1
    float z1 -> z1
    float x2 -> x2
    float y2 -> y2
    float z2 -> z2
    float x3 -> x3
    float y3 -> y3
    float z3 -> z3
    com.badlogic.gdx.math.Vector3 pick(float,float,float,float,float,float,float,float,float,com.badlogic.gdx.math.Vector3) -> pick
    com.badlogic.gdx.math.Vector3 pick(com.badlogic.gdx.math.Vector3) -> pick
com.badlogic.gdx.graphics.g3d.particles.values.NumericValue -> com.badlogic.gdx.graphics.g3d.particles.values.NumericValue:
    float value -> value
    float getValue() -> getValue
    void setValue(float) -> setValue
    void load(com.badlogic.gdx.graphics.g3d.particles.values.NumericValue) -> load
    void write(com.badlogic.gdx.utils.Json) -> write
    void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue) -> read
com.badlogic.gdx.graphics.g3d.particles.values.ParticleValue -> com.badlogic.gdx.graphics.g3d.particles.values.ParticleValue:
    boolean active -> active
    boolean isActive() -> isActive
    void setActive(boolean) -> setActive
    void load(com.badlogic.gdx.graphics.g3d.particles.values.ParticleValue) -> load
    void write(com.badlogic.gdx.utils.Json) -> write
    void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue) -> read
com.badlogic.gdx.graphics.g3d.particles.values.PointSpawnShapeValue -> com.badlogic.gdx.graphics.g3d.particles.values.PointSpawnShapeValue:
    void spawnAux(com.badlogic.gdx.math.Vector3,float) -> spawnAux
    com.badlogic.gdx.graphics.g3d.particles.values.SpawnShapeValue copy() -> copy
com.badlogic.gdx.graphics.g3d.particles.values.PrimitiveSpawnShapeValue -> com.badlogic.gdx.graphics.g3d.particles.values.PrimitiveSpawnShapeValue:
    com.badlogic.gdx.math.Vector3 TMP_V1 -> TMP_V1
    com.badlogic.gdx.graphics.g3d.particles.values.ScaledNumericValue spawnWidthValue -> spawnWidthValue
    com.badlogic.gdx.graphics.g3d.particles.values.ScaledNumericValue spawnHeightValue -> spawnHeightValue
    com.badlogic.gdx.graphics.g3d.particles.values.ScaledNumericValue spawnDepthValue -> spawnDepthValue
    float spawnWidth -> spawnWidth
    float spawnWidthDiff -> spawnWidthDiff
    float spawnHeight -> spawnHeight
    float spawnHeightDiff -> spawnHeightDiff
    float spawnDepth -> spawnDepth
    float spawnDepthDiff -> spawnDepthDiff
    boolean edges -> edges
    void setActive(boolean) -> setActive
    boolean isEdges() -> isEdges
    void setEdges(boolean) -> setEdges
    com.badlogic.gdx.graphics.g3d.particles.values.ScaledNumericValue getSpawnWidth() -> getSpawnWidth
    com.badlogic.gdx.graphics.g3d.particles.values.ScaledNumericValue getSpawnHeight() -> getSpawnHeight
    com.badlogic.gdx.graphics.g3d.particles.values.ScaledNumericValue getSpawnDepth() -> getSpawnDepth
    void setDimensions(float,float,float) -> setDimensions
    void start() -> start
    void load(com.badlogic.gdx.graphics.g3d.particles.values.ParticleValue) -> load
    void write(com.badlogic.gdx.utils.Json) -> write
    void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue) -> read
com.badlogic.gdx.graphics.g3d.particles.values.PrimitiveSpawnShapeValue$SpawnSide -> com.badlogic.gdx.graphics.g3d.particles.values.PrimitiveSpawnShapeValue$SpawnSide:
    com.badlogic.gdx.graphics.g3d.particles.values.PrimitiveSpawnShapeValue$SpawnSide both -> both
    com.badlogic.gdx.graphics.g3d.particles.values.PrimitiveSpawnShapeValue$SpawnSide top -> top
    com.badlogic.gdx.graphics.g3d.particles.values.PrimitiveSpawnShapeValue$SpawnSide bottom -> bottom
    com.badlogic.gdx.graphics.g3d.particles.values.PrimitiveSpawnShapeValue$SpawnSide[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.g3d.particles.values.PrimitiveSpawnShapeValue$SpawnSide[] values() -> values
    com.badlogic.gdx.graphics.g3d.particles.values.PrimitiveSpawnShapeValue$SpawnSide valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g3d.particles.values.RangedNumericValue -> com.badlogic.gdx.graphics.g3d.particles.values.RangedNumericValue:
    float lowMin -> lowMin
    float lowMax -> lowMax
    float newLowValue() -> newLowValue
    void setLow(float) -> setLow
    void setLow(float,float) -> setLow
    float getLowMin() -> getLowMin
    void setLowMin(float) -> setLowMin
    float getLowMax() -> getLowMax
    void setLowMax(float) -> setLowMax
    void load(com.badlogic.gdx.graphics.g3d.particles.values.RangedNumericValue) -> load
    void write(com.badlogic.gdx.utils.Json) -> write
    void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue) -> read
com.badlogic.gdx.graphics.g3d.particles.values.RectangleSpawnShapeValue -> com.badlogic.gdx.graphics.g3d.particles.values.RectangleSpawnShapeValue:
    void spawnAux(com.badlogic.gdx.math.Vector3,float) -> spawnAux
    com.badlogic.gdx.graphics.g3d.particles.values.SpawnShapeValue copy() -> copy
com.badlogic.gdx.graphics.g3d.particles.values.ScaledNumericValue -> com.badlogic.gdx.graphics.g3d.particles.values.ScaledNumericValue:
    float[] scaling -> scaling
    float[] timeline -> timeline
    float highMin -> highMin
    float highMax -> highMax
    boolean relative -> relative
    float newHighValue() -> newHighValue
    void setHigh(float) -> setHigh
    void setHigh(float,float) -> setHigh
    float getHighMin() -> getHighMin
    void setHighMin(float) -> setHighMin
    float getHighMax() -> getHighMax
    void setHighMax(float) -> setHighMax
    float[] getScaling() -> getScaling
    void setScaling(float[]) -> setScaling
    float[] getTimeline() -> getTimeline
    void setTimeline(float[]) -> setTimeline
    boolean isRelative() -> isRelative
    void setRelative(boolean) -> setRelative
    float getScale(float) -> getScale
    void load(com.badlogic.gdx.graphics.g3d.particles.values.ScaledNumericValue) -> load
    void write(com.badlogic.gdx.utils.Json) -> write
    void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue) -> read
com.badlogic.gdx.graphics.g3d.particles.values.SpawnShapeValue -> com.badlogic.gdx.graphics.g3d.particles.values.SpawnShapeValue:
    com.badlogic.gdx.graphics.g3d.particles.values.RangedNumericValue xOffsetValue -> xOffsetValue
    com.badlogic.gdx.graphics.g3d.particles.values.RangedNumericValue yOffsetValue -> yOffsetValue
    com.badlogic.gdx.graphics.g3d.particles.values.RangedNumericValue zOffsetValue -> zOffsetValue
    void spawnAux(com.badlogic.gdx.math.Vector3,float) -> spawnAux
    com.badlogic.gdx.math.Vector3 spawn(com.badlogic.gdx.math.Vector3,float) -> spawn
    void init() -> init
    void start() -> start
    void load(com.badlogic.gdx.graphics.g3d.particles.values.ParticleValue) -> load
    com.badlogic.gdx.graphics.g3d.particles.values.SpawnShapeValue copy() -> copy
    void write(com.badlogic.gdx.utils.Json) -> write
    void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue) -> read
    void save(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.graphics.g3d.particles.ResourceData) -> save
    void load(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.graphics.g3d.particles.ResourceData) -> load
com.badlogic.gdx.graphics.g3d.particles.values.UnweightedMeshSpawnShapeValue -> com.badlogic.gdx.graphics.g3d.particles.values.UnweightedMeshSpawnShapeValue:
    float[] vertices -> vertices
    short[] indices -> indices
    int positionOffset -> positionOffset
    int vertexSize -> vertexSize
    int vertexCount -> vertexCount
    int triangleCount -> triangleCount
    void setMesh(com.badlogic.gdx.graphics.Mesh,com.badlogic.gdx.graphics.g3d.Model) -> setMesh
    void spawnAux(com.badlogic.gdx.math.Vector3,float) -> spawnAux
    com.badlogic.gdx.graphics.g3d.particles.values.SpawnShapeValue copy() -> copy
com.badlogic.gdx.graphics.g3d.particles.values.WeightMeshSpawnShapeValue -> com.badlogic.gdx.graphics.g3d.particles.values.WeightMeshSpawnShapeValue:
    com.badlogic.gdx.math.CumulativeDistribution distribution -> distribution
    void init() -> init
    void calculateWeights() -> calculateWeights
    void spawnAux(com.badlogic.gdx.math.Vector3,float) -> spawnAux
    com.badlogic.gdx.graphics.g3d.particles.values.SpawnShapeValue copy() -> copy
com.badlogic.gdx.graphics.g3d.shaders.BaseShader -> com.badlogic.gdx.graphics.g3d.shaders.BaseShader:
    com.badlogic.gdx.utils.Array uniforms -> uniforms
    com.badlogic.gdx.utils.Array validators -> validators
    com.badlogic.gdx.utils.Array setters -> setters
    int[] locations -> locations
    com.badlogic.gdx.utils.IntArray globalUniforms -> globalUniforms
    com.badlogic.gdx.utils.IntArray localUniforms -> localUniforms
    com.badlogic.gdx.utils.IntIntMap attributes -> attributes
    com.badlogic.gdx.graphics.glutils.ShaderProgram program -> program
    com.badlogic.gdx.graphics.g3d.utils.RenderContext context -> context
    com.badlogic.gdx.graphics.Camera camera -> camera
    com.badlogic.gdx.graphics.Mesh currentMesh -> currentMesh
    com.badlogic.gdx.utils.IntArray tempArray -> tempArray
    com.badlogic.gdx.graphics.g3d.Attributes combinedAttributes -> combinedAttributes
    int register(java.lang.String,com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Validator,com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter) -> register
    int register(java.lang.String,com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Validator) -> register
    int register(java.lang.String,com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter) -> register
    int register(java.lang.String) -> register
    int register(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform,com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter) -> register
    int register(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform) -> register
    int getUniformID(java.lang.String) -> getUniformID
    java.lang.String getUniformAlias(int) -> getUniformAlias
    void init(com.badlogic.gdx.graphics.glutils.ShaderProgram,com.badlogic.gdx.graphics.g3d.Renderable) -> init
    void begin(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.graphics.g3d.utils.RenderContext) -> begin
    int[] getAttributeLocations(com.badlogic.gdx.graphics.VertexAttributes) -> getAttributeLocations
    void render(com.badlogic.gdx.graphics.g3d.Renderable) -> render
    void render(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> render
    void end() -> end
    void dispose() -> dispose
    boolean has(int) -> has
    int loc(int) -> loc
    boolean set(int,com.badlogic.gdx.math.Matrix4) -> set
    boolean set(int,com.badlogic.gdx.math.Matrix3) -> set
    boolean set(int,com.badlogic.gdx.math.Vector3) -> set
    boolean set(int,com.badlogic.gdx.math.Vector2) -> set
    boolean set(int,com.badlogic.gdx.graphics.Color) -> set
    boolean set(int,float) -> set
    boolean set(int,float,float) -> set
    boolean set(int,float,float,float) -> set
    boolean set(int,float,float,float,float) -> set
    boolean set(int,int) -> set
    boolean set(int,int,int) -> set
    boolean set(int,int,int,int) -> set
    boolean set(int,int,int,int,int) -> set
    boolean set(int,com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor) -> set
    boolean set(int,com.badlogic.gdx.graphics.GLTexture) -> set
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$GlobalSetter -> com.badlogic.gdx.graphics.g3d.shaders.BaseShader$GlobalSetter:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$LocalSetter -> com.badlogic.gdx.graphics.g3d.shaders.BaseShader$LocalSetter:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter -> com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform -> com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform:
    java.lang.String alias -> alias
    long materialMask -> materialMask
    long environmentMask -> environmentMask
    long overallMask -> overallMask
    boolean validate(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable) -> validate
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Validator -> com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Validator:
    boolean validate(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable) -> validate
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader:
    java.lang.String defaultVertexShader -> defaultVertexShader
    java.lang.String defaultFragmentShader -> defaultFragmentShader
    long implementedFlags -> implementedFlags
    int defaultCullFace -> defaultCullFace
    int defaultDepthFunc -> defaultDepthFunc
    int u_projTrans -> u_projTrans
    int u_viewTrans -> u_viewTrans
    int u_projViewTrans -> u_projViewTrans
    int u_cameraPosition -> u_cameraPosition
    int u_cameraDirection -> u_cameraDirection
    int u_cameraUp -> u_cameraUp
    int u_time -> u_time
    int u_worldTrans -> u_worldTrans
    int u_viewWorldTrans -> u_viewWorldTrans
    int u_projViewWorldTrans -> u_projViewWorldTrans
    int u_normalMatrix -> u_normalMatrix
    int u_bones -> u_bones
    int u_shininess -> u_shininess
    int u_opacity -> u_opacity
    int u_diffuseColor -> u_diffuseColor
    int u_diffuseTexture -> u_diffuseTexture
    int u_diffuseUVTransform -> u_diffuseUVTransform
    int u_specularColor -> u_specularColor
    int u_specularTexture -> u_specularTexture
    int u_specularUVTransform -> u_specularUVTransform
    int u_emissiveColor -> u_emissiveColor
    int u_emissiveTexture -> u_emissiveTexture
    int u_emissiveUVTransform -> u_emissiveUVTransform
    int u_reflectionColor -> u_reflectionColor
    int u_reflectionTexture -> u_reflectionTexture
    int u_reflectionUVTransform -> u_reflectionUVTransform
    int u_normalTexture -> u_normalTexture
    int u_normalUVTransform -> u_normalUVTransform
    int u_ambientTexture -> u_ambientTexture
    int u_ambientUVTransform -> u_ambientUVTransform
    int u_alphaTest -> u_alphaTest
    int u_ambientCubemap -> u_ambientCubemap
    int u_environmentCubemap -> u_environmentCubemap
    int u_dirLights0color -> u_dirLights0color
    int u_dirLights0direction -> u_dirLights0direction
    int u_dirLights1color -> u_dirLights1color
    int u_pointLights0color -> u_pointLights0color
    int u_pointLights0position -> u_pointLights0position
    int u_pointLights0intensity -> u_pointLights0intensity
    int u_pointLights1color -> u_pointLights1color
    int u_fogColor -> u_fogColor
    int u_shadowMapProjViewTrans -> u_shadowMapProjViewTrans
    int u_shadowTexture -> u_shadowTexture
    int u_shadowPCFOffset -> u_shadowPCFOffset
    int dirLightsLoc -> dirLightsLoc
    int dirLightsColorOffset -> dirLightsColorOffset
    int dirLightsDirectionOffset -> dirLightsDirectionOffset
    int dirLightsSize -> dirLightsSize
    int pointLightsLoc -> pointLightsLoc
    int pointLightsColorOffset -> pointLightsColorOffset
    int pointLightsPositionOffset -> pointLightsPositionOffset
    int pointLightsIntensityOffset -> pointLightsIntensityOffset
    int pointLightsSize -> pointLightsSize
    boolean lighting -> lighting
    boolean environmentCubemap -> environmentCubemap
    boolean shadowMap -> shadowMap
    boolean fog -> fog
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap ambientCubemap -> ambientCubemap
    com.badlogic.gdx.graphics.g3d.environment.DirectionalLight[] directionalLights -> directionalLights
    com.badlogic.gdx.graphics.g3d.environment.PointLight[] pointLights -> pointLights
    com.badlogic.gdx.graphics.g3d.Renderable renderable -> renderable
    long materialMask -> materialMask
    long vertexMask -> vertexMask
    com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config config -> config
    long optionalAttributes -> optionalAttributes
    com.badlogic.gdx.math.Matrix3 normalMatrix -> normalMatrix
    com.badlogic.gdx.graphics.Camera camera -> camera
    float time -> time
    boolean lightsSet -> lightsSet
    com.badlogic.gdx.graphics.g3d.Material currentMaterial -> currentMaterial
    com.badlogic.gdx.math.Vector3 tmpV1 -> tmpV1
    java.lang.String getDefaultVertexShader() -> getDefaultVertexShader
    java.lang.String getDefaultFragmentShader() -> getDefaultFragmentShader
    void init() -> init
    boolean and(long,long) -> and
    boolean or(long,long) -> or
    java.lang.String createPrefix(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config) -> createPrefix
    boolean canRender(com.badlogic.gdx.graphics.g3d.Renderable) -> canRender
    int compareTo(com.badlogic.gdx.graphics.g3d.Shader) -> compareTo
    boolean equals(java.lang.Object) -> equals
    boolean equals(com.badlogic.gdx.graphics.g3d.shaders.DefaultShader) -> equals
    void begin(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.graphics.g3d.utils.RenderContext) -> begin
    void render(com.badlogic.gdx.graphics.g3d.Renderable) -> render
    void end() -> end
    void bindMaterial(com.badlogic.gdx.graphics.g3d.Renderable) -> bindMaterial
    void bindLights(com.badlogic.gdx.graphics.g3d.Renderable) -> bindLights
    void dispose() -> dispose
    int getDefaultCullFace() -> getDefaultCullFace
    void setDefaultCullFace(int) -> setDefaultCullFace
    int getDefaultDepthFunc() -> getDefaultDepthFunc
    void setDefaultDepthFunc(int) -> setDefaultDepthFunc
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config:
    java.lang.String vertexShader -> vertexShader
    java.lang.String fragmentShader -> fragmentShader
    int numDirectionalLights -> numDirectionalLights
    int numPointLights -> numPointLights
    int numSpotLights -> numSpotLights
    int numBones -> numBones
    boolean ignoreUnimplemented -> ignoreUnimplemented
    int defaultCullFace -> defaultCullFace
    int defaultDepthFunc -> defaultDepthFunc
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs:
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform projTrans -> projTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform viewTrans -> viewTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform projViewTrans -> projViewTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform cameraPosition -> cameraPosition
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform cameraDirection -> cameraDirection
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform cameraUp -> cameraUp
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform worldTrans -> worldTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform viewWorldTrans -> viewWorldTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform projViewWorldTrans -> projViewWorldTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform normalMatrix -> normalMatrix
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform bones -> bones
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform shininess -> shininess
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform opacity -> opacity
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform diffuseColor -> diffuseColor
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform diffuseTexture -> diffuseTexture
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform diffuseUVTransform -> diffuseUVTransform
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform specularColor -> specularColor
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform specularTexture -> specularTexture
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform specularUVTransform -> specularUVTransform
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform emissiveColor -> emissiveColor
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform emissiveTexture -> emissiveTexture
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform emissiveUVTransform -> emissiveUVTransform
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform reflectionColor -> reflectionColor
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform reflectionTexture -> reflectionTexture
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform reflectionUVTransform -> reflectionUVTransform
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform normalTexture -> normalTexture
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform normalUVTransform -> normalUVTransform
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform ambientTexture -> ambientTexture
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform ambientUVTransform -> ambientUVTransform
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform alphaTest -> alphaTest
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform ambientCube -> ambientCube
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform dirLights -> dirLights
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform pointLights -> pointLights
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform environmentCubemap -> environmentCubemap
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters:
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter projTrans -> projTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter viewTrans -> viewTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter projViewTrans -> projViewTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter cameraPosition -> cameraPosition
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter cameraDirection -> cameraDirection
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter cameraUp -> cameraUp
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter worldTrans -> worldTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter viewWorldTrans -> viewWorldTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter projViewWorldTrans -> projViewWorldTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter normalMatrix -> normalMatrix
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter shininess -> shininess
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter diffuseColor -> diffuseColor
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter diffuseTexture -> diffuseTexture
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter diffuseUVTransform -> diffuseUVTransform
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter specularColor -> specularColor
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter specularTexture -> specularTexture
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter specularUVTransform -> specularUVTransform
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter emissiveColor -> emissiveColor
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter emissiveTexture -> emissiveTexture
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter emissiveUVTransform -> emissiveUVTransform
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter reflectionColor -> reflectionColor
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter reflectionTexture -> reflectionTexture
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter reflectionUVTransform -> reflectionUVTransform
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter normalTexture -> normalTexture
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter normalUVTransform -> normalUVTransform
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter ambientTexture -> ambientTexture
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter ambientUVTransform -> ambientUVTransform
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter environmentCubemap -> environmentCubemap
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$1 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$1:
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$10 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$10:
    com.badlogic.gdx.math.Matrix3 tmpM -> tmpM
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$11 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$11:
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$12 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$12:
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$13 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$13:
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$14 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$14:
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$15 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$15:
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$16 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$16:
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$17 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$17:
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$18 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$18:
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$19 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$19:
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$2 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$2:
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$20 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$20:
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$21 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$21:
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$22 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$22:
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$23 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$23:
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$24 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$24:
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$25 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$25:
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$26 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$26:
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$27 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$27:
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$28 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$28:
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$3 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$3:
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$4 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$4:
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$5 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$5:
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$6 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$6:
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$7 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$7:
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$8 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$8:
    com.badlogic.gdx.math.Matrix4 temp -> temp
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$9 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$9:
    com.badlogic.gdx.math.Matrix4 temp -> temp
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$ACubemap -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$ACubemap:
    float[] ones -> ones
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap cacheAmbientCubemap -> cacheAmbientCubemap
    com.badlogic.gdx.math.Vector3 tmpV1 -> tmpV1
    int dirLightsOffset -> dirLightsOffset
    int pointLightsOffset -> pointLightsOffset
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$Bones -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$Bones:
    com.badlogic.gdx.math.Matrix4 idtMatrix -> idtMatrix
    float[] bones -> bones
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DepthShader -> com.badlogic.gdx.graphics.g3d.shaders.DepthShader:
    java.lang.String defaultVertexShader -> defaultVertexShader
    java.lang.String defaultFragmentShader -> defaultFragmentShader
    int numBones -> numBones
    int weights -> weights
    com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute alphaTestAttribute -> alphaTestAttribute
    java.lang.String getDefaultVertexShader() -> getDefaultVertexShader
    java.lang.String getDefaultFragmentShader() -> getDefaultFragmentShader
    java.lang.String createPrefix(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.shaders.DepthShader$Config) -> createPrefix
    void begin(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.graphics.g3d.utils.RenderContext) -> begin
    void end() -> end
    boolean canRender(com.badlogic.gdx.graphics.g3d.Renderable) -> canRender
    void render(com.badlogic.gdx.graphics.g3d.Renderable) -> render
com.badlogic.gdx.graphics.g3d.shaders.DepthShader$Config -> com.badlogic.gdx.graphics.g3d.shaders.DepthShader$Config:
    boolean depthBufferOnly -> depthBufferOnly
    float defaultAlphaTest -> defaultAlphaTest
com.badlogic.gdx.graphics.g3d.utils.AnimationController -> com.badlogic.gdx.graphics.g3d.utils.AnimationController:
    com.badlogic.gdx.utils.Pool animationPool -> animationPool
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc current -> current
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc queued -> queued
    float queuedTransitionTime -> queuedTransitionTime
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc previous -> previous
    float transitionCurrentTime -> transitionCurrentTime
    float transitionTargetTime -> transitionTargetTime
    boolean inAction -> inAction
    boolean paused -> paused
    boolean allowSameAnimation -> allowSameAnimation
    boolean justChangedAnimation -> justChangedAnimation
    boolean updating -> updating
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc obtain(com.badlogic.gdx.graphics.g3d.model.Animation,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener) -> obtain
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc obtain(java.lang.String,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener) -> obtain
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc obtain(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc) -> obtain
    void update(float) -> update
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc setAnimation(java.lang.String) -> setAnimation
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc setAnimation(java.lang.String,int) -> setAnimation
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc setAnimation(java.lang.String,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener) -> setAnimation
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc setAnimation(java.lang.String,int,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener) -> setAnimation
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc setAnimation(java.lang.String,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener) -> setAnimation
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc setAnimation(java.lang.String,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener) -> setAnimation
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc setAnimation(com.badlogic.gdx.graphics.g3d.model.Animation,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener) -> setAnimation
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc setAnimation(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc) -> setAnimation
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc animate(java.lang.String,float) -> animate
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc animate(java.lang.String,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float) -> animate
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc animate(java.lang.String,int,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float) -> animate
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc animate(java.lang.String,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float) -> animate
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc animate(java.lang.String,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float) -> animate
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc animate(com.badlogic.gdx.graphics.g3d.model.Animation,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float) -> animate
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc animate(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc,float) -> animate
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc queue(java.lang.String,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float) -> queue
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc queue(java.lang.String,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float) -> queue
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc queue(com.badlogic.gdx.graphics.g3d.model.Animation,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float) -> queue
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc queue(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc,float) -> queue
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc action(java.lang.String,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float) -> action
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc action(java.lang.String,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float) -> action
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc action(com.badlogic.gdx.graphics.g3d.model.Animation,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float) -> action
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc action(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc,float) -> action
com.badlogic.gdx.graphics.g3d.utils.AnimationController$1 -> com.badlogic.gdx.graphics.g3d.utils.AnimationController$1:
    com.badlogic.gdx.graphics.g3d.utils.AnimationController this$0 -> this$0
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc -> com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc:
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener listener -> listener
    com.badlogic.gdx.graphics.g3d.model.Animation animation -> animation
    float speed -> speed
    float time -> time
    float offset -> offset
    float duration -> duration
    int loopCount -> loopCount
    float update(float) -> update
com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener -> com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener:
    void onEnd(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc) -> onEnd
    void onLoop(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc) -> onLoop
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController -> com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController:
    com.badlogic.gdx.utils.Pool transformPool -> transformPool
    com.badlogic.gdx.utils.ObjectMap transforms -> transforms
    boolean applying -> applying
    com.badlogic.gdx.graphics.g3d.ModelInstance target -> target
    com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform tmpT -> tmpT
    void begin() -> begin
    void apply(com.badlogic.gdx.graphics.g3d.model.Animation,float,float) -> apply
    void end() -> end
    void applyAnimation(com.badlogic.gdx.graphics.g3d.model.Animation,float) -> applyAnimation
    void applyAnimations(com.badlogic.gdx.graphics.g3d.model.Animation,float,com.badlogic.gdx.graphics.g3d.model.Animation,float,float) -> applyAnimations
    void applyAnimation(com.badlogic.gdx.utils.ObjectMap,com.badlogic.gdx.utils.Pool,float,com.badlogic.gdx.graphics.g3d.model.Animation,float) -> applyAnimation
    void removeAnimation(com.badlogic.gdx.graphics.g3d.model.Animation) -> removeAnimation
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$1 -> com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$1:
    com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController this$0 -> this$0
    com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform -> com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform:
    com.badlogic.gdx.math.Vector3 translation -> translation
    com.badlogic.gdx.math.Quaternion rotation -> rotation
    com.badlogic.gdx.math.Vector3 scale -> scale
    com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform idt() -> idt
    com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform set(com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform) -> set
    com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform lerp(com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform,float) -> lerp
    com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform lerp(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Vector3,float) -> lerp
    com.badlogic.gdx.math.Matrix4 toMatrix4(com.badlogic.gdx.math.Matrix4) -> toMatrix4
    void reset() -> reset
com.badlogic.gdx.graphics.g3d.utils.BaseShaderProvider -> com.badlogic.gdx.graphics.g3d.utils.BaseShaderProvider:
    com.badlogic.gdx.utils.Array shaders -> shaders
    com.badlogic.gdx.graphics.g3d.Shader getShader(com.badlogic.gdx.graphics.g3d.Renderable) -> getShader
    com.badlogic.gdx.graphics.g3d.Shader createShader(com.badlogic.gdx.graphics.g3d.Renderable) -> createShader
    void dispose() -> dispose
com.badlogic.gdx.graphics.g3d.utils.CameraInputController -> com.badlogic.gdx.graphics.g3d.utils.CameraInputController:
    int rotateButton -> rotateButton
    float rotateAngle -> rotateAngle
    int translateButton -> translateButton
    float translateUnits -> translateUnits
    int forwardButton -> forwardButton
    int activateKey -> activateKey
    boolean activatePressed -> activatePressed
    boolean alwaysScroll -> alwaysScroll
    float scrollFactor -> scrollFactor
    float pinchZoomFactor -> pinchZoomFactor
    boolean autoUpdate -> autoUpdate
    com.badlogic.gdx.math.Vector3 target -> target
    boolean translateTarget -> translateTarget
    boolean forwardTarget -> forwardTarget
    boolean scrollTarget -> scrollTarget
    int forwardKey -> forwardKey
    boolean forwardPressed -> forwardPressed
    int backwardKey -> backwardKey
    boolean backwardPressed -> backwardPressed
    int rotateRightKey -> rotateRightKey
    boolean rotateRightPressed -> rotateRightPressed
    int rotateLeftKey -> rotateLeftKey
    boolean rotateLeftPressed -> rotateLeftPressed
    com.badlogic.gdx.graphics.Camera camera -> camera
    int button -> button
    float startX -> startX
    float startY -> startY
    com.badlogic.gdx.math.Vector3 tmpV1 -> tmpV1
    com.badlogic.gdx.math.Vector3 tmpV2 -> tmpV2
    com.badlogic.gdx.graphics.g3d.utils.CameraInputController$CameraGestureListener gestureListener -> gestureListener
    int touched -> touched
    boolean multiTouch -> multiTouch
    void update() -> update
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchUp(int,int,int,int) -> touchUp
    boolean process(float,float,int) -> process
    boolean touchDragged(int,int,int) -> touchDragged
    boolean scrolled(int) -> scrolled
    boolean zoom(float) -> zoom
    boolean pinchZoom(float) -> pinchZoom
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
com.badlogic.gdx.graphics.g3d.utils.CameraInputController$CameraGestureListener -> com.badlogic.gdx.graphics.g3d.utils.CameraInputController$CameraGestureListener:
    com.badlogic.gdx.graphics.g3d.utils.CameraInputController controller -> controller
    float previousZoom -> previousZoom
    boolean touchDown(float,float,int,int) -> touchDown
    boolean tap(float,float,int,int) -> tap
    boolean longPress(float,float) -> longPress
    boolean fling(float,float,int) -> fling
    boolean pan(float,float,float,float) -> pan
    boolean zoom(float,float) -> zoom
    boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> pinch
com.badlogic.gdx.graphics.g3d.utils.DefaultRenderableSorter -> com.badlogic.gdx.graphics.g3d.utils.DefaultRenderableSorter:
    com.badlogic.gdx.graphics.Camera camera -> camera
    com.badlogic.gdx.math.Vector3 tmpV1 -> tmpV1
    com.badlogic.gdx.math.Vector3 tmpV2 -> tmpV2
    void sort(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.utils.Array) -> sort
    int compare(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Renderable) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.graphics.g3d.utils.DefaultShaderProvider -> com.badlogic.gdx.graphics.g3d.utils.DefaultShaderProvider:
    com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config config -> config
    com.badlogic.gdx.graphics.g3d.Shader createShader(com.badlogic.gdx.graphics.g3d.Renderable) -> createShader
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder -> com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder:
    int ROUNDROBIN -> ROUNDROBIN
    int WEIGHTED -> WEIGHTED
    int MAX_GLES_UNITS -> MAX_GLES_UNITS
    int offset -> offset
    int count -> count
    int reuseWeight -> reuseWeight
    com.badlogic.gdx.graphics.GLTexture[] textures -> textures
    int[] weights -> weights
    int method -> method
    boolean reused -> reused
    int reuseCount -> reuseCount
    int bindCount -> bindCount
    com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor tempDesc -> tempDesc
    int currentTexture -> currentTexture
    int getMaxTextureUnits() -> getMaxTextureUnits
    void begin() -> begin
    void end() -> end
    int bind(com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor) -> bind
    int bind(com.badlogic.gdx.graphics.GLTexture) -> bind
    int bindTexture(com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor,boolean) -> bindTexture
    int bindTextureRoundRobin(com.badlogic.gdx.graphics.GLTexture) -> bindTextureRoundRobin
    int bindTextureWeighted(com.badlogic.gdx.graphics.GLTexture) -> bindTextureWeighted
    int getBindCount() -> getBindCount
    int getReuseCount() -> getReuseCount
    void resetCounts() -> resetCounts
com.badlogic.gdx.graphics.g3d.utils.DepthShaderProvider -> com.badlogic.gdx.graphics.g3d.utils.DepthShaderProvider:
    com.badlogic.gdx.graphics.g3d.shaders.DepthShader$Config config -> config
    com.badlogic.gdx.graphics.g3d.Shader createShader(com.badlogic.gdx.graphics.g3d.Renderable) -> createShader
com.badlogic.gdx.graphics.g3d.utils.FirstPersonCameraController -> com.badlogic.gdx.graphics.g3d.utils.FirstPersonCameraController:
    com.badlogic.gdx.graphics.Camera camera -> camera
    com.badlogic.gdx.utils.IntIntMap keys -> keys
    int STRAFE_LEFT -> STRAFE_LEFT
    int STRAFE_RIGHT -> STRAFE_RIGHT
    int FORWARD -> FORWARD
    int BACKWARD -> BACKWARD
    int UP -> UP
    int DOWN -> DOWN
    float velocity -> velocity
    float degreesPerPixel -> degreesPerPixel
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
    void setVelocity(float) -> setVelocity
    void setDegreesPerPixel(float) -> setDegreesPerPixel
    boolean touchDragged(int,int,int) -> touchDragged
    void update() -> update
    void update(float) -> update
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder -> com.badlogic.gdx.graphics.g3d.utils.MeshBuilder:
    com.badlogic.gdx.utils.ShortArray tmpIndices -> tmpIndices
    com.badlogic.gdx.utils.FloatArray tmpVertices -> tmpVertices
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp1 -> vertTmp1
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp2 -> vertTmp2
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp3 -> vertTmp3
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp4 -> vertTmp4
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp5 -> vertTmp5
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp6 -> vertTmp6
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp7 -> vertTmp7
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp8 -> vertTmp8
    com.badlogic.gdx.math.Matrix4 matTmp1 -> matTmp1
    com.badlogic.gdx.math.Vector3 tempV1 -> tempV1
    com.badlogic.gdx.math.Vector3 tempV2 -> tempV2
    com.badlogic.gdx.math.Vector3 tempV3 -> tempV3
    com.badlogic.gdx.math.Vector3 tempV4 -> tempV4
    com.badlogic.gdx.math.Vector3 tempV5 -> tempV5
    com.badlogic.gdx.math.Vector3 tempV6 -> tempV6
    com.badlogic.gdx.math.Vector3 tempV7 -> tempV7
    com.badlogic.gdx.math.Vector3 tempV8 -> tempV8
    com.badlogic.gdx.graphics.Color tempC1 -> tempC1
    com.badlogic.gdx.graphics.VertexAttributes attributes -> attributes
    com.badlogic.gdx.utils.FloatArray vertices -> vertices
    com.badlogic.gdx.utils.ShortArray indices -> indices
    int stride -> stride
    short vindex -> vindex
    int istart -> istart
    int posOffset -> posOffset
    int posSize -> posSize
    int norOffset -> norOffset
    int colOffset -> colOffset
    int colSize -> colSize
    int cpOffset -> cpOffset
    int uvOffset -> uvOffset
    com.badlogic.gdx.graphics.g3d.model.MeshPart part -> part
    com.badlogic.gdx.utils.Array parts -> parts
    com.badlogic.gdx.graphics.Color color -> color
    boolean hasColor -> hasColor
    int primitiveType -> primitiveType
    float uOffset -> uOffset
    float uScale -> uScale
    float vOffset -> vOffset
    float vScale -> vScale
    boolean hasUVTransform -> hasUVTransform
    float[] vertex -> vertex
    boolean vertexTransformationEnabled -> vertexTransformationEnabled
    com.badlogic.gdx.math.Matrix4 positionTransform -> positionTransform
    com.badlogic.gdx.math.Matrix3 normalTransform -> normalTransform
    com.badlogic.gdx.utils.Pool vectorPool -> vectorPool
    com.badlogic.gdx.utils.Array vectorArray -> vectorArray
    com.badlogic.gdx.utils.Pool matrices4Pool -> matrices4Pool
    com.badlogic.gdx.utils.Array matrices4Array -> matrices4Array
    short lastIndex -> lastIndex
    com.badlogic.gdx.math.Vector3 vTmp -> vTmp
    com.badlogic.gdx.math.Vector3 tmpNormal -> tmpNormal
    com.badlogic.gdx.utils.IntIntMap indicesMap -> indicesMap
    com.badlogic.gdx.graphics.VertexAttributes createAttributes(long) -> createAttributes
    void begin(long) -> begin
    void begin(com.badlogic.gdx.graphics.VertexAttributes) -> begin
    void begin(long,int) -> begin
    void begin(com.badlogic.gdx.graphics.VertexAttributes,int) -> begin
    void endpart() -> endpart
    com.badlogic.gdx.graphics.g3d.model.MeshPart part(java.lang.String,int) -> part
    com.badlogic.gdx.graphics.Mesh end(com.badlogic.gdx.graphics.Mesh) -> end
    com.badlogic.gdx.graphics.Mesh end() -> end
    int getNumVertices() -> getNumVertices
    int getNumIndices() -> getNumIndices
    com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> getAttributes
    com.badlogic.gdx.graphics.g3d.model.MeshPart getMeshPart() -> getMeshPart
    com.badlogic.gdx.math.Vector3 tmp(float,float,float) -> tmp
    com.badlogic.gdx.math.Vector3 tmp(com.badlogic.gdx.math.Vector3) -> tmp
    com.badlogic.gdx.math.Matrix4 tmp() -> tmp
    com.badlogic.gdx.math.Matrix4 tmp(com.badlogic.gdx.math.Matrix4) -> tmp
    void cleanup() -> cleanup
    void setColor(float,float,float,float) -> setColor
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setUVRange(float,float,float,float) -> setUVRange
    void setUVRange(com.badlogic.gdx.graphics.g2d.TextureRegion) -> setUVRange
    com.badlogic.gdx.math.Matrix4 getVertexTransform(com.badlogic.gdx.math.Matrix4) -> getVertexTransform
    void setVertexTransform(com.badlogic.gdx.math.Matrix4) -> setVertexTransform
    boolean isVertexTransformationEnabled() -> isVertexTransformationEnabled
    void setVertexTransformationEnabled(boolean) -> setVertexTransformationEnabled
    void ensureVertices(int) -> ensureVertices
    void ensureIndices(int) -> ensureIndices
    void ensureCapacity(int,int) -> ensureCapacity
    void ensureTriangleIndices(int) -> ensureTriangleIndices
    void ensureTriangles(int,int) -> ensureTriangles
    void ensureTriangles(int) -> ensureTriangles
    void ensureRectangleIndices(int) -> ensureRectangleIndices
    void ensureRectangles(int,int) -> ensureRectangles
    void ensureRectangles(int) -> ensureRectangles
    short lastIndex() -> lastIndex
    void transformPosition(float[],int,int,com.badlogic.gdx.math.Matrix4) -> transformPosition
    void transformNormal(float[],int,int,com.badlogic.gdx.math.Matrix3) -> transformNormal
    void addVertex(float[],int) -> addVertex
    short vertex(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector2) -> vertex
    short vertex(float[]) -> vertex
    short vertex(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo) -> vertex
    void index(short) -> index
    void index(short,short) -> index
    void index(short,short,short) -> index
    void index(short,short,short,short) -> index
    void index(short,short,short,short,short,short) -> index
    void index(short,short,short,short,short,short,short,short) -> index
    void line(short,short) -> line
    void line(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo) -> line
    void line(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> line
    void line(float,float,float,float,float,float) -> line
    void line(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color) -> line
    void triangle(short,short,short) -> triangle
    void triangle(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo) -> triangle
    void triangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> triangle
    void triangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color) -> triangle
    void rect(short,short,short,short) -> rect
    void rect(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo) -> rect
    void rect(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> rect
    void rect(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> rect
    void patch(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,int,int) -> patch
    void patch(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int) -> patch
    void patch(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,int,int) -> patch
    void box(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo) -> box
    void box(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> box
    void box(com.badlogic.gdx.math.Matrix4) -> box
    void box(float,float,float) -> box
    void box(float,float,float,float,float,float) -> box
    void circle(float,int,float,float,float,float,float,float) -> circle
    void circle(float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> circle
    void circle(float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> circle
    void circle(float,int,float,float,float,float,float,float,float,float,float,float,float,float) -> circle
    void circle(float,int,float,float,float,float,float,float,float,float) -> circle
    void circle(float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float) -> circle
    void circle(float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float) -> circle
    void circle(float,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> circle
    void ellipse(float,float,int,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> ellipse
    void ellipse(float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> ellipse
    void ellipse(float,float,int,float,float,float,float,float,float,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,int,float,float,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float) -> ellipse
    void ellipse(float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float) -> ellipse
    void ellipse(float,float,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> ellipse
    void ellipse(float,float,float,float,int,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,float,float,int,float,float,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,float,float,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> ellipse
    void cylinder(float,float,float,int) -> cylinder
    void cylinder(float,float,float,int,float,float) -> cylinder
    void cylinder(float,float,float,int,float,float,boolean) -> cylinder
    void cone(float,float,float,int) -> cone
    void cone(float,float,float,int,float,float) -> cone
    void sphere(float,float,float,int,int) -> sphere
    void sphere(com.badlogic.gdx.math.Matrix4,float,float,float,int,int) -> sphere
    void sphere(float,float,float,int,int,float,float,float,float) -> sphere
    void sphere(com.badlogic.gdx.math.Matrix4,float,float,float,int,int,float,float,float,float) -> sphere
    void capsule(float,float,int) -> capsule
    void arrow(float,float,float,float,float,float,float,float,int) -> arrow
    void addMesh(com.badlogic.gdx.graphics.Mesh) -> addMesh
    void addMesh(com.badlogic.gdx.graphics.g3d.model.MeshPart) -> addMesh
    void addMesh(com.badlogic.gdx.graphics.Mesh,int,int) -> addMesh
    void addMesh(float[],short[],int,int) -> addMesh
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder$1 -> com.badlogic.gdx.graphics.g3d.utils.MeshBuilder$1:
    com.badlogic.gdx.math.Vector3 newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder$2 -> com.badlogic.gdx.graphics.g3d.utils.MeshBuilder$2:
    com.badlogic.gdx.math.Matrix4 newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder -> com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder:
    com.badlogic.gdx.graphics.g3d.model.MeshPart getMeshPart() -> getMeshPart
    com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> getAttributes
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setUVRange(float,float,float,float) -> setUVRange
    void setUVRange(com.badlogic.gdx.graphics.g2d.TextureRegion) -> setUVRange
    com.badlogic.gdx.math.Matrix4 getVertexTransform(com.badlogic.gdx.math.Matrix4) -> getVertexTransform
    void setVertexTransform(com.badlogic.gdx.math.Matrix4) -> setVertexTransform
    boolean isVertexTransformationEnabled() -> isVertexTransformationEnabled
    void setVertexTransformationEnabled(boolean) -> setVertexTransformationEnabled
    short vertex(float[]) -> vertex
    short vertex(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector2) -> vertex
    short vertex(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo) -> vertex
    short lastIndex() -> lastIndex
    void index(short) -> index
    void index(short,short) -> index
    void index(short,short,short) -> index
    void index(short,short,short,short) -> index
    void index(short,short,short,short,short,short) -> index
    void index(short,short,short,short,short,short,short,short) -> index
    void line(short,short) -> line
    void line(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo) -> line
    void line(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> line
    void line(float,float,float,float,float,float) -> line
    void line(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color) -> line
    void triangle(short,short,short) -> triangle
    void triangle(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo) -> triangle
    void triangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> triangle
    void triangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color) -> triangle
    void rect(short,short,short,short) -> rect
    void rect(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo) -> rect
    void rect(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> rect
    void rect(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> rect
    void patch(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,int,int) -> patch
    void patch(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int) -> patch
    void patch(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,int,int) -> patch
    void box(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo) -> box
    void box(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> box
    void box(com.badlogic.gdx.math.Matrix4) -> box
    void box(float,float,float) -> box
    void box(float,float,float,float,float,float) -> box
    void circle(float,int,float,float,float,float,float,float) -> circle
    void circle(float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> circle
    void circle(float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> circle
    void circle(float,int,float,float,float,float,float,float,float,float,float,float,float,float) -> circle
    void circle(float,int,float,float,float,float,float,float,float,float) -> circle
    void circle(float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float) -> circle
    void circle(float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float) -> circle
    void circle(float,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> circle
    void ellipse(float,float,int,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> ellipse
    void ellipse(float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> ellipse
    void ellipse(float,float,int,float,float,float,float,float,float,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,int,float,float,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float) -> ellipse
    void ellipse(float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float) -> ellipse
    void ellipse(float,float,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,float,float,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,float,float,int,float,float,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,float,float,int,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> ellipse
    void cylinder(float,float,float,int) -> cylinder
    void cylinder(float,float,float,int,float,float) -> cylinder
    void cylinder(float,float,float,int,float,float,boolean) -> cylinder
    void cone(float,float,float,int) -> cone
    void cone(float,float,float,int,float,float) -> cone
    void sphere(float,float,float,int,int) -> sphere
    void sphere(com.badlogic.gdx.math.Matrix4,float,float,float,int,int) -> sphere
    void sphere(float,float,float,int,int,float,float,float,float) -> sphere
    void sphere(com.badlogic.gdx.math.Matrix4,float,float,float,int,int,float,float,float,float) -> sphere
    void capsule(float,float,int) -> capsule
    void arrow(float,float,float,float,float,float,float,float,int) -> arrow
    void addMesh(com.badlogic.gdx.graphics.Mesh) -> addMesh
    void addMesh(com.badlogic.gdx.graphics.g3d.model.MeshPart) -> addMesh
    void addMesh(com.badlogic.gdx.graphics.Mesh,int,int) -> addMesh
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo -> com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo:
    com.badlogic.gdx.math.Vector3 position -> position
    boolean hasPosition -> hasPosition
    com.badlogic.gdx.math.Vector3 normal -> normal
    boolean hasNormal -> hasNormal
    com.badlogic.gdx.graphics.Color color -> color
    boolean hasColor -> hasColor
    com.badlogic.gdx.math.Vector2 uv -> uv
    boolean hasUV -> hasUV
    void reset() -> reset
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector2) -> set
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo set(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo) -> set
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setPos(float,float,float) -> setPos
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setPos(com.badlogic.gdx.math.Vector3) -> setPos
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setNor(float,float,float) -> setNor
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setNor(com.badlogic.gdx.math.Vector3) -> setNor
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setCol(float,float,float,float) -> setCol
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setCol(com.badlogic.gdx.graphics.Color) -> setCol
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setUV(float,float) -> setUV
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setUV(com.badlogic.gdx.math.Vector2) -> setUV
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo lerp(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,float) -> lerp
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder -> com.badlogic.gdx.graphics.g3d.utils.ModelBuilder:
    com.badlogic.gdx.graphics.g3d.Model model -> model
    com.badlogic.gdx.graphics.g3d.model.Node node -> node
    com.badlogic.gdx.utils.Array builders -> builders
    com.badlogic.gdx.math.Matrix4 tmpTransform -> tmpTransform
    com.badlogic.gdx.graphics.g3d.utils.MeshBuilder getBuilder(com.badlogic.gdx.graphics.VertexAttributes) -> getBuilder
    void begin() -> begin
    com.badlogic.gdx.graphics.g3d.Model end() -> end
    void endnode() -> endnode
    com.badlogic.gdx.graphics.g3d.model.Node node(com.badlogic.gdx.graphics.g3d.model.Node) -> node
    com.badlogic.gdx.graphics.g3d.model.Node node() -> node
    com.badlogic.gdx.graphics.g3d.model.Node node(java.lang.String,com.badlogic.gdx.graphics.g3d.Model) -> node
    void manage(com.badlogic.gdx.utils.Disposable) -> manage
    void part(com.badlogic.gdx.graphics.g3d.model.MeshPart,com.badlogic.gdx.graphics.g3d.Material) -> part
    com.badlogic.gdx.graphics.g3d.model.MeshPart part(java.lang.String,com.badlogic.gdx.graphics.Mesh,int,int,int,com.badlogic.gdx.graphics.g3d.Material) -> part
    com.badlogic.gdx.graphics.g3d.model.MeshPart part(java.lang.String,com.badlogic.gdx.graphics.Mesh,int,com.badlogic.gdx.graphics.g3d.Material) -> part
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder part(java.lang.String,int,com.badlogic.gdx.graphics.VertexAttributes,com.badlogic.gdx.graphics.g3d.Material) -> part
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder part(java.lang.String,int,long,com.badlogic.gdx.graphics.g3d.Material) -> part
    com.badlogic.gdx.graphics.g3d.Model createBox(float,float,float,com.badlogic.gdx.graphics.g3d.Material,long) -> createBox
    com.badlogic.gdx.graphics.g3d.Model createBox(float,float,float,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createBox
    com.badlogic.gdx.graphics.g3d.Model createRect(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,com.badlogic.gdx.graphics.g3d.Material,long) -> createRect
    com.badlogic.gdx.graphics.g3d.Model createRect(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createRect
    com.badlogic.gdx.graphics.g3d.Model createCylinder(float,float,float,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createCylinder
    com.badlogic.gdx.graphics.g3d.Model createCylinder(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createCylinder
    com.badlogic.gdx.graphics.g3d.Model createCylinder(float,float,float,int,com.badlogic.gdx.graphics.g3d.Material,long,float,float) -> createCylinder
    com.badlogic.gdx.graphics.g3d.Model createCylinder(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long,float,float) -> createCylinder
    com.badlogic.gdx.graphics.g3d.Model createCone(float,float,float,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createCone
    com.badlogic.gdx.graphics.g3d.Model createCone(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createCone
    com.badlogic.gdx.graphics.g3d.Model createCone(float,float,float,int,com.badlogic.gdx.graphics.g3d.Material,long,float,float) -> createCone
    com.badlogic.gdx.graphics.g3d.Model createCone(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long,float,float) -> createCone
    com.badlogic.gdx.graphics.g3d.Model createSphere(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createSphere
    com.badlogic.gdx.graphics.g3d.Model createSphere(float,float,float,int,int,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createSphere
    com.badlogic.gdx.graphics.g3d.Model createSphere(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long,float,float,float,float) -> createSphere
    com.badlogic.gdx.graphics.g3d.Model createSphere(float,float,float,int,int,int,com.badlogic.gdx.graphics.g3d.Material,long,float,float,float,float) -> createSphere
    com.badlogic.gdx.graphics.g3d.Model createCapsule(float,float,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createCapsule
    com.badlogic.gdx.graphics.g3d.Model createCapsule(float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createCapsule
    void rebuildReferences(com.badlogic.gdx.graphics.g3d.Model) -> rebuildReferences
    void rebuildReferences(com.badlogic.gdx.graphics.g3d.Model,com.badlogic.gdx.graphics.g3d.model.Node) -> rebuildReferences
    com.badlogic.gdx.graphics.g3d.Model createFromMesh(com.badlogic.gdx.graphics.Mesh,int,com.badlogic.gdx.graphics.g3d.Material) -> createFromMesh
    com.badlogic.gdx.graphics.g3d.Model createFromMesh(com.badlogic.gdx.graphics.Mesh,int,int,int,com.badlogic.gdx.graphics.g3d.Material) -> createFromMesh
    com.badlogic.gdx.graphics.g3d.Model createFromMesh(float[],com.badlogic.gdx.graphics.VertexAttribute[],short[],int,com.badlogic.gdx.graphics.g3d.Material) -> createFromMesh
    com.badlogic.gdx.graphics.g3d.Model createXYZCoordinates(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createXYZCoordinates
    com.badlogic.gdx.graphics.g3d.Model createXYZCoordinates(float,com.badlogic.gdx.graphics.g3d.Material,long) -> createXYZCoordinates
    com.badlogic.gdx.graphics.g3d.Model createArrow(float,float,float,float,float,float,float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createArrow
    com.badlogic.gdx.graphics.g3d.Model createArrow(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.g3d.Material,long) -> createArrow
    com.badlogic.gdx.graphics.g3d.Model createLineGrid(int,int,float,float,com.badlogic.gdx.graphics.g3d.Material,long) -> createLineGrid
com.badlogic.gdx.graphics.g3d.utils.RenderContext -> com.badlogic.gdx.graphics.g3d.utils.RenderContext:
    com.badlogic.gdx.graphics.g3d.utils.TextureBinder textureBinder -> textureBinder
    boolean blending -> blending
    int blendSFactor -> blendSFactor
    int blendDFactor -> blendDFactor
    int depthFunc -> depthFunc
    float depthRangeNear -> depthRangeNear
    float depthRangeFar -> depthRangeFar
    boolean depthMask -> depthMask
    int cullFace -> cullFace
    void begin() -> begin
    void end() -> end
    void setDepthMask(boolean) -> setDepthMask
    void setDepthTest(int) -> setDepthTest
    void setDepthTest(int,float,float) -> setDepthTest
    void setBlending(boolean,int,int) -> setBlending
    void setCullFace(int) -> setCullFace
com.badlogic.gdx.graphics.g3d.utils.RenderableSorter -> com.badlogic.gdx.graphics.g3d.utils.RenderableSorter:
    void sort(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.utils.Array) -> sort
com.badlogic.gdx.graphics.g3d.utils.ShaderProvider -> com.badlogic.gdx.graphics.g3d.utils.ShaderProvider:
    com.badlogic.gdx.graphics.g3d.Shader getShader(com.badlogic.gdx.graphics.g3d.Renderable) -> getShader
    void dispose() -> dispose
com.badlogic.gdx.graphics.g3d.utils.TextureBinder -> com.badlogic.gdx.graphics.g3d.utils.TextureBinder:
    void begin() -> begin
    void end() -> end
    int bind(com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor) -> bind
    int bind(com.badlogic.gdx.graphics.GLTexture) -> bind
    int getBindCount() -> getBindCount
    int getReuseCount() -> getReuseCount
    void resetCounts() -> resetCounts
com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor -> com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor:
    com.badlogic.gdx.graphics.GLTexture texture -> texture
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> minFilter
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> magFilter
    com.badlogic.gdx.graphics.Texture$TextureWrap uWrap -> uWrap
    com.badlogic.gdx.graphics.Texture$TextureWrap vWrap -> vWrap
    void set(com.badlogic.gdx.graphics.GLTexture,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap) -> set
    void set(com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor) -> set
    boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.graphics.g3d.utils.TextureProvider -> com.badlogic.gdx.graphics.g3d.utils.TextureProvider:
    com.badlogic.gdx.graphics.Texture load(java.lang.String) -> load
com.badlogic.gdx.graphics.g3d.utils.TextureProvider$AssetTextureProvider -> com.badlogic.gdx.graphics.g3d.utils.TextureProvider$AssetTextureProvider:
    com.badlogic.gdx.assets.AssetManager assetManager -> assetManager
    com.badlogic.gdx.graphics.Texture load(java.lang.String) -> load
com.badlogic.gdx.graphics.g3d.utils.TextureProvider$FileTextureProvider -> com.badlogic.gdx.graphics.g3d.utils.TextureProvider$FileTextureProvider:
    com.badlogic.gdx.graphics.Texture load(java.lang.String) -> load
com.badlogic.gdx.graphics.glutils.ETC1 -> com.badlogic.gdx.graphics.glutils.ETC1:
    int PKM_HEADER_SIZE -> PKM_HEADER_SIZE
    int ETC1_RGB8_OES -> ETC1_RGB8_OES
    int getPixelSize(com.badlogic.gdx.graphics.Pixmap$Format) -> getPixelSize
    com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data encodeImage(com.badlogic.gdx.graphics.Pixmap) -> encodeImage
    com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data encodeImagePKM(com.badlogic.gdx.graphics.Pixmap) -> encodeImagePKM
    com.badlogic.gdx.graphics.Pixmap decodeImage(com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data,com.badlogic.gdx.graphics.Pixmap$Format) -> decodeImage
    int getCompressedDataSize(int,int) -> getCompressedDataSize
    void formatHeader(java.nio.ByteBuffer,int,int,int) -> formatHeader
    int getWidthPKM(java.nio.ByteBuffer,int) -> getWidthPKM
    int getHeightPKM(java.nio.ByteBuffer,int) -> getHeightPKM
    boolean isValidPKM(java.nio.ByteBuffer,int) -> isValidPKM
    void decodeImage(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int,int) -> decodeImage
    java.nio.ByteBuffer encodeImage(java.nio.ByteBuffer,int,int,int,int) -> encodeImage
    java.nio.ByteBuffer encodeImagePKM(java.nio.ByteBuffer,int,int,int,int) -> encodeImagePKM
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data -> com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data:
    int width -> width
    int height -> height
    java.nio.ByteBuffer compressedData -> compressedData
    int dataOffset -> dataOffset
    void checkNPOT() -> checkNPOT
    boolean hasPKMHeader() -> hasPKMHeader
    void write(com.badlogic.gdx.files.FileHandle) -> write
    void dispose() -> dispose
    java.lang.String toString() -> toString
com.badlogic.gdx.graphics.glutils.ETC1TextureData -> com.badlogic.gdx.graphics.glutils.ETC1TextureData:
    com.badlogic.gdx.files.FileHandle file -> file
    com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data data -> data
    boolean useMipMaps -> useMipMaps
    int width -> width
    int height -> height
    boolean isPrepared -> isPrepared
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> getType
    boolean isPrepared() -> isPrepared
    void prepare() -> prepare
    void consumeCustomData(int) -> consumeCustomData
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> consumePixmap
    boolean disposePixmap() -> disposePixmap
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    boolean useMipMaps() -> useMipMaps
    boolean isManaged() -> isManaged
com.badlogic.gdx.graphics.glutils.FacedCubemapData -> com.badlogic.gdx.graphics.glutils.FacedCubemapData:
    com.badlogic.gdx.graphics.TextureData[] data -> data
    boolean isManaged() -> isManaged
    void load(com.badlogic.gdx.graphics.Cubemap$CubemapSide,com.badlogic.gdx.files.FileHandle) -> load
    void load(com.badlogic.gdx.graphics.Cubemap$CubemapSide,com.badlogic.gdx.graphics.Pixmap) -> load
    boolean isComplete() -> isComplete
    com.badlogic.gdx.graphics.TextureData getTextureData(com.badlogic.gdx.graphics.Cubemap$CubemapSide) -> getTextureData
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    boolean isPrepared() -> isPrepared
    void prepare() -> prepare
    void consumeCubemapData() -> consumeCubemapData
com.badlogic.gdx.graphics.glutils.FileTextureData -> com.badlogic.gdx.graphics.glutils.FileTextureData:
    boolean copyToPOT -> copyToPOT
    com.badlogic.gdx.files.FileHandle file -> file
    int width -> width
    int height -> height
    com.badlogic.gdx.graphics.Pixmap$Format format -> format
    com.badlogic.gdx.graphics.Pixmap pixmap -> pixmap
    boolean useMipMaps -> useMipMaps
    boolean isPrepared -> isPrepared
    boolean isPrepared() -> isPrepared
    void prepare() -> prepare
    com.badlogic.gdx.graphics.Pixmap ensurePot(com.badlogic.gdx.graphics.Pixmap) -> ensurePot
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> consumePixmap
    boolean disposePixmap() -> disposePixmap
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    boolean useMipMaps() -> useMipMaps
    boolean isManaged() -> isManaged
    com.badlogic.gdx.files.FileHandle getFileHandle() -> getFileHandle
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> getType
    void consumeCustomData(int) -> consumeCustomData
com.badlogic.gdx.graphics.glutils.FloatFrameBuffer -> com.badlogic.gdx.graphics.glutils.FloatFrameBuffer:
    void setupTexture() -> setupTexture
com.badlogic.gdx.graphics.glutils.FloatTextureData -> com.badlogic.gdx.graphics.glutils.FloatTextureData:
    int width -> width
    int height -> height
    boolean isPrepared -> isPrepared
    java.nio.FloatBuffer buffer -> buffer
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> getType
    boolean isPrepared() -> isPrepared
    void prepare() -> prepare
    void consumeCustomData(int) -> consumeCustomData
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> consumePixmap
    boolean disposePixmap() -> disposePixmap
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    boolean useMipMaps() -> useMipMaps
    boolean isManaged() -> isManaged
com.badlogic.gdx.graphics.glutils.FrameBuffer -> com.badlogic.gdx.graphics.glutils.FrameBuffer:
    java.util.Map buffers -> buffers
    com.badlogic.gdx.graphics.Texture colorTexture -> colorTexture
    int defaultFramebufferHandle -> defaultFramebufferHandle
    boolean defaultFramebufferHandleInitialized -> defaultFramebufferHandleInitialized
    int framebufferHandle -> framebufferHandle
    int depthbufferHandle -> depthbufferHandle
    int stencilbufferHandle -> stencilbufferHandle
    int width -> width
    int height -> height
    boolean hasDepth -> hasDepth
    boolean hasStencil -> hasStencil
    com.badlogic.gdx.graphics.Pixmap$Format format -> format
    void setupTexture() -> setupTexture
    void build() -> build
    void dispose() -> dispose
    void bind() -> bind
    void unbind() -> unbind
    void begin() -> begin
    void setFrameBufferViewport() -> setFrameBufferViewport
    void end() -> end
    void setDefaultFrameBufferViewport() -> setDefaultFrameBufferViewport
    void end(int,int,int,int) -> end
    com.badlogic.gdx.graphics.Texture getColorBufferTexture() -> getColorBufferTexture
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    void addManagedFrameBuffer(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.glutils.FrameBuffer) -> addManagedFrameBuffer
    void invalidateAllFrameBuffers(com.badlogic.gdx.Application) -> invalidateAllFrameBuffers
    void clearAllFrameBuffers(com.badlogic.gdx.Application) -> clearAllFrameBuffers
    java.lang.StringBuilder getManagedStatus(java.lang.StringBuilder) -> getManagedStatus
    java.lang.String getManagedStatus() -> getManagedStatus
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer -> com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer:
    void begin(com.badlogic.gdx.math.Matrix4,int) -> begin
    void flush() -> flush
    void color(com.badlogic.gdx.graphics.Color) -> color
    void color(float,float,float,float) -> color
    void texCoord(float,float) -> texCoord
    void normal(float,float,float) -> normal
    void vertex(float,float,float) -> vertex
    void end() -> end
    int getNumVertices() -> getNumVertices
    int getMaxVertices() -> getMaxVertices
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20 -> com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20:
    int primitiveType -> primitiveType
    int vertexIdx -> vertexIdx
    int numSetTexCoords -> numSetTexCoords
    int maxVertices -> maxVertices
    int numVertices -> numVertices
    com.badlogic.gdx.graphics.Mesh mesh -> mesh
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> shader
    boolean ownsShader -> ownsShader
    int numTexCoords -> numTexCoords
    int vertexSize -> vertexSize
    int normalOffset -> normalOffset
    int colorOffset -> colorOffset
    int texCoordOffset -> texCoordOffset
    com.badlogic.gdx.math.Matrix4 projModelView -> projModelView
    float[] vertices -> vertices
    java.lang.String[] shaderUniformNames -> shaderUniformNames
    com.badlogic.gdx.graphics.VertexAttribute[] buildVertexAttributes(boolean,boolean,int) -> buildVertexAttributes
    void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> setShader
    void begin(com.badlogic.gdx.math.Matrix4,int) -> begin
    void color(com.badlogic.gdx.graphics.Color) -> color
    void color(float,float,float,float) -> color
    void texCoord(float,float) -> texCoord
    void normal(float,float,float) -> normal
    void vertex(float,float,float) -> vertex
    void flush() -> flush
    void end() -> end
    int getNumVertices() -> getNumVertices
    int getMaxVertices() -> getMaxVertices
    void dispose() -> dispose
    java.lang.String createVertexShader(boolean,boolean,int) -> createVertexShader
    java.lang.String createFragmentShader(boolean,boolean,int) -> createFragmentShader
    com.badlogic.gdx.graphics.glutils.ShaderProgram createDefaultShader(boolean,boolean,int) -> createDefaultShader
com.badlogic.gdx.graphics.glutils.IndexArray -> com.badlogic.gdx.graphics.glutils.IndexArray:
    java.nio.IntBuffer tmpHandle -> tmpHandle
    java.nio.ShortBuffer buffer -> buffer
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    int getNumIndices() -> getNumIndices
    int getNumMaxIndices() -> getNumMaxIndices
    void setIndices(short[],int,int) -> setIndices
    void setIndices(java.nio.ShortBuffer) -> setIndices
    java.nio.ShortBuffer getBuffer() -> getBuffer
    void bind() -> bind
    void unbind() -> unbind
    void invalidate() -> invalidate
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.IndexBufferObject -> com.badlogic.gdx.graphics.glutils.IndexBufferObject:
    java.nio.ShortBuffer buffer -> buffer
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    int bufferHandle -> bufferHandle
    boolean isDirect -> isDirect
    boolean isDirty -> isDirty
    boolean isBound -> isBound
    int usage -> usage
    int getNumIndices() -> getNumIndices
    int getNumMaxIndices() -> getNumMaxIndices
    void setIndices(short[],int,int) -> setIndices
    void setIndices(java.nio.ShortBuffer) -> setIndices
    java.nio.ShortBuffer getBuffer() -> getBuffer
    void bind() -> bind
    void unbind() -> unbind
    void invalidate() -> invalidate
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData -> com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData:
    java.nio.ShortBuffer buffer -> buffer
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    int bufferHandle -> bufferHandle
    boolean isDirect -> isDirect
    boolean isDirty -> isDirty
    boolean isBound -> isBound
    int usage -> usage
    int createBufferObject() -> createBufferObject
    int getNumIndices() -> getNumIndices
    int getNumMaxIndices() -> getNumMaxIndices
    void setIndices(short[],int,int) -> setIndices
    void setIndices(java.nio.ShortBuffer) -> setIndices
    java.nio.ShortBuffer getBuffer() -> getBuffer
    void bind() -> bind
    void unbind() -> unbind
    void invalidate() -> invalidate
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.IndexData -> com.badlogic.gdx.graphics.glutils.IndexData:
    int getNumIndices() -> getNumIndices
    int getNumMaxIndices() -> getNumMaxIndices
    void setIndices(short[],int,int) -> setIndices
    void setIndices(java.nio.ShortBuffer) -> setIndices
    java.nio.ShortBuffer getBuffer() -> getBuffer
    void bind() -> bind
    void unbind() -> unbind
    void invalidate() -> invalidate
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.KTXTextureData -> com.badlogic.gdx.graphics.glutils.KTXTextureData:
    com.badlogic.gdx.files.FileHandle file -> file
    int glType -> glType
    int glTypeSize -> glTypeSize
    int glFormat -> glFormat
    int glInternalFormat -> glInternalFormat
    int glBaseInternalFormat -> glBaseInternalFormat
    int pixelWidth -> pixelWidth
    int pixelHeight -> pixelHeight
    int pixelDepth -> pixelDepth
    int numberOfArrayElements -> numberOfArrayElements
    int numberOfFaces -> numberOfFaces
    int numberOfMipmapLevels -> numberOfMipmapLevels
    int imagePos -> imagePos
    java.nio.ByteBuffer compressedData -> compressedData
    boolean useMipMaps -> useMipMaps
    int GL_TEXTURE_1D -> GL_TEXTURE_1D
    int GL_TEXTURE_3D -> GL_TEXTURE_3D
    int GL_TEXTURE_1D_ARRAY_EXT -> GL_TEXTURE_1D_ARRAY_EXT
    int GL_TEXTURE_2D_ARRAY_EXT -> GL_TEXTURE_2D_ARRAY_EXT
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> getType
    boolean isPrepared() -> isPrepared
    void prepare() -> prepare
    void consumeCubemapData() -> consumeCubemapData
    void consumeCustomData(int) -> consumeCustomData
    void disposePreparedData() -> disposePreparedData
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> consumePixmap
    boolean disposePixmap() -> disposePixmap
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    int getNumberOfMipMapLevels() -> getNumberOfMipMapLevels
    int getNumberOfFaces() -> getNumberOfFaces
    int getGlInternalFormat() -> getGlInternalFormat
    java.nio.ByteBuffer getData(int,int) -> getData
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    boolean useMipMaps() -> useMipMaps
    boolean isManaged() -> isManaged
com.badlogic.gdx.graphics.glutils.MipMapGenerator -> com.badlogic.gdx.graphics.glutils.MipMapGenerator:
    boolean useHWMipMap -> useHWMipMap
    void setUseHardwareMipMap(boolean) -> setUseHardwareMipMap
    void generateMipMap(com.badlogic.gdx.graphics.Pixmap,int,int) -> generateMipMap
    void generateMipMap(int,com.badlogic.gdx.graphics.Pixmap,int,int) -> generateMipMap
    void generateMipMapGLES20(int,com.badlogic.gdx.graphics.Pixmap) -> generateMipMapGLES20
    void generateMipMapDesktop(int,com.badlogic.gdx.graphics.Pixmap,int,int) -> generateMipMapDesktop
    void generateMipMapCPU(int,com.badlogic.gdx.graphics.Pixmap,int,int) -> generateMipMapCPU
com.badlogic.gdx.graphics.glutils.MipMapTextureData -> com.badlogic.gdx.graphics.glutils.MipMapTextureData:
    com.badlogic.gdx.graphics.TextureData[] mips -> mips
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> getType
    boolean isPrepared() -> isPrepared
    void prepare() -> prepare
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> consumePixmap
    boolean disposePixmap() -> disposePixmap
    void consumeCustomData(int) -> consumeCustomData
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    boolean useMipMaps() -> useMipMaps
    boolean isManaged() -> isManaged
com.badlogic.gdx.graphics.glutils.PixmapTextureData -> com.badlogic.gdx.graphics.glutils.PixmapTextureData:
    com.badlogic.gdx.graphics.Pixmap pixmap -> pixmap
    com.badlogic.gdx.graphics.Pixmap$Format format -> format
    boolean useMipMaps -> useMipMaps
    boolean disposePixmap -> disposePixmap
    boolean managed -> managed
    boolean disposePixmap() -> disposePixmap
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> consumePixmap
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    boolean useMipMaps() -> useMipMaps
    boolean isManaged() -> isManaged
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> getType
    void consumeCustomData(int) -> consumeCustomData
    boolean isPrepared() -> isPrepared
    void prepare() -> prepare
com.badlogic.gdx.graphics.glutils.ShaderProgram -> com.badlogic.gdx.graphics.glutils.ShaderProgram:
    java.lang.String POSITION_ATTRIBUTE -> POSITION_ATTRIBUTE
    java.lang.String NORMAL_ATTRIBUTE -> NORMAL_ATTRIBUTE
    java.lang.String COLOR_ATTRIBUTE -> COLOR_ATTRIBUTE
    java.lang.String TEXCOORD_ATTRIBUTE -> TEXCOORD_ATTRIBUTE
    java.lang.String TANGENT_ATTRIBUTE -> TANGENT_ATTRIBUTE
    java.lang.String BINORMAL_ATTRIBUTE -> BINORMAL_ATTRIBUTE
    boolean pedantic -> pedantic
    com.badlogic.gdx.utils.ObjectMap shaders -> shaders
    java.lang.String log -> log
    boolean isCompiled -> isCompiled
    com.badlogic.gdx.utils.ObjectIntMap uniforms -> uniforms
    com.badlogic.gdx.utils.ObjectIntMap uniformTypes -> uniformTypes
    com.badlogic.gdx.utils.ObjectIntMap uniformSizes -> uniformSizes
    java.lang.String[] uniformNames -> uniformNames
    com.badlogic.gdx.utils.ObjectIntMap attributes -> attributes
    com.badlogic.gdx.utils.ObjectIntMap attributeTypes -> attributeTypes
    com.badlogic.gdx.utils.ObjectIntMap attributeSizes -> attributeSizes
    java.lang.String[] attributeNames -> attributeNames
    int program -> program
    int vertexShaderHandle -> vertexShaderHandle
    int fragmentShaderHandle -> fragmentShaderHandle
    java.nio.FloatBuffer matrix -> matrix
    java.lang.String vertexShaderSource -> vertexShaderSource
    java.lang.String fragmentShaderSource -> fragmentShaderSource
    boolean invalidated -> invalidated
    int refCount -> refCount
    java.nio.IntBuffer intbuf -> intbuf
    java.nio.IntBuffer params -> params
    java.nio.IntBuffer type -> type
    void compileShaders(java.lang.String,java.lang.String) -> compileShaders
    int loadShader(int,java.lang.String) -> loadShader
    int linkProgram() -> linkProgram
    java.lang.String getLog() -> getLog
    boolean isCompiled() -> isCompiled
    int fetchAttributeLocation(java.lang.String) -> fetchAttributeLocation
    int fetchUniformLocation(java.lang.String) -> fetchUniformLocation
    int fetchUniformLocation(java.lang.String,boolean) -> fetchUniformLocation
    void setUniformi(java.lang.String,int) -> setUniformi
    void setUniformi(int,int) -> setUniformi
    void setUniformi(java.lang.String,int,int) -> setUniformi
    void setUniformi(int,int,int) -> setUniformi
    void setUniformi(java.lang.String,int,int,int) -> setUniformi
    void setUniformi(int,int,int,int) -> setUniformi
    void setUniformi(java.lang.String,int,int,int,int) -> setUniformi
    void setUniformi(int,int,int,int,int) -> setUniformi
    void setUniformf(java.lang.String,float) -> setUniformf
    void setUniformf(int,float) -> setUniformf
    void setUniformf(java.lang.String,float,float) -> setUniformf
    void setUniformf(int,float,float) -> setUniformf
    void setUniformf(java.lang.String,float,float,float) -> setUniformf
    void setUniformf(int,float,float,float) -> setUniformf
    void setUniformf(java.lang.String,float,float,float,float) -> setUniformf
    void setUniformf(int,float,float,float,float) -> setUniformf
    void setUniform1fv(java.lang.String,float[],int,int) -> setUniform1fv
    void setUniform1fv(int,float[],int,int) -> setUniform1fv
    void setUniform2fv(java.lang.String,float[],int,int) -> setUniform2fv
    void setUniform2fv(int,float[],int,int) -> setUniform2fv
    void setUniform3fv(java.lang.String,float[],int,int) -> setUniform3fv
    void setUniform3fv(int,float[],int,int) -> setUniform3fv
    void setUniform4fv(java.lang.String,float[],int,int) -> setUniform4fv
    void setUniform4fv(int,float[],int,int) -> setUniform4fv
    void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix4) -> setUniformMatrix
    void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix4,boolean) -> setUniformMatrix
    void setUniformMatrix(int,com.badlogic.gdx.math.Matrix4) -> setUniformMatrix
    void setUniformMatrix(int,com.badlogic.gdx.math.Matrix4,boolean) -> setUniformMatrix
    void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix3) -> setUniformMatrix
    void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix3,boolean) -> setUniformMatrix
    void setUniformMatrix(int,com.badlogic.gdx.math.Matrix3) -> setUniformMatrix
    void setUniformMatrix(int,com.badlogic.gdx.math.Matrix3,boolean) -> setUniformMatrix
    void setUniformMatrix3fv(java.lang.String,java.nio.FloatBuffer,int,boolean) -> setUniformMatrix3fv
    void setUniformMatrix4fv(java.lang.String,java.nio.FloatBuffer,int,boolean) -> setUniformMatrix4fv
    void setUniformMatrix4fv(int,float[],int,int) -> setUniformMatrix4fv
    void setUniformMatrix4fv(java.lang.String,float[],int,int) -> setUniformMatrix4fv
    void setUniformf(java.lang.String,com.badlogic.gdx.math.Vector2) -> setUniformf
    void setUniformf(int,com.badlogic.gdx.math.Vector2) -> setUniformf
    void setUniformf(java.lang.String,com.badlogic.gdx.math.Vector3) -> setUniformf
    void setUniformf(int,com.badlogic.gdx.math.Vector3) -> setUniformf
    void setUniformf(java.lang.String,com.badlogic.gdx.graphics.Color) -> setUniformf
    void setUniformf(int,com.badlogic.gdx.graphics.Color) -> setUniformf
    void setVertexAttribute(java.lang.String,int,int,boolean,int,java.nio.Buffer) -> setVertexAttribute
    void setVertexAttribute(int,int,int,boolean,int,java.nio.Buffer) -> setVertexAttribute
    void setVertexAttribute(java.lang.String,int,int,boolean,int,int) -> setVertexAttribute
    void setVertexAttribute(int,int,int,boolean,int,int) -> setVertexAttribute
    void begin() -> begin
    void end() -> end
    void dispose() -> dispose
    void disableVertexAttribute(java.lang.String) -> disableVertexAttribute
    void disableVertexAttribute(int) -> disableVertexAttribute
    void enableVertexAttribute(java.lang.String) -> enableVertexAttribute
    void enableVertexAttribute(int) -> enableVertexAttribute
    void checkManaged() -> checkManaged
    void addManagedShader(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.glutils.ShaderProgram) -> addManagedShader
    void invalidateAllShaderPrograms(com.badlogic.gdx.Application) -> invalidateAllShaderPrograms
    void clearAllShaderPrograms(com.badlogic.gdx.Application) -> clearAllShaderPrograms
    java.lang.String getManagedStatus() -> getManagedStatus
    void setAttributef(java.lang.String,float,float,float,float) -> setAttributef
    void fetchUniforms() -> fetchUniforms
    void fetchAttributes() -> fetchAttributes
    boolean hasAttribute(java.lang.String) -> hasAttribute
    int getAttributeType(java.lang.String) -> getAttributeType
    int getAttributeLocation(java.lang.String) -> getAttributeLocation
    int getAttributeSize(java.lang.String) -> getAttributeSize
    boolean hasUniform(java.lang.String) -> hasUniform
    int getUniformType(java.lang.String) -> getUniformType
    int getUniformLocation(java.lang.String) -> getUniformLocation
    int getUniformSize(java.lang.String) -> getUniformSize
    java.lang.String[] getAttributes() -> getAttributes
    java.lang.String[] getUniforms() -> getUniforms
    java.lang.String getVertexShaderSource() -> getVertexShaderSource
    java.lang.String getFragmentShaderSource() -> getFragmentShaderSource
com.badlogic.gdx.graphics.glutils.ShapeRenderer -> com.badlogic.gdx.graphics.glutils.ShapeRenderer:
    com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer renderer -> renderer
    boolean matrixDirty -> matrixDirty
    com.badlogic.gdx.math.Matrix4 projectionMatrix -> projectionMatrix
    com.badlogic.gdx.math.Matrix4 transformMatrix -> transformMatrix
    com.badlogic.gdx.math.Matrix4 combinedMatrix -> combinedMatrix
    com.badlogic.gdx.math.Vector2 tmp -> tmp
    com.badlogic.gdx.graphics.Color color -> color
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType shapeType -> shapeType
    boolean autoShapeType -> autoShapeType
    float defaultRectLineWidth -> defaultRectLineWidth
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void updateMatrices() -> updateMatrices
    void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> setProjectionMatrix
    com.badlogic.gdx.math.Matrix4 getProjectionMatrix() -> getProjectionMatrix
    void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> setTransformMatrix
    com.badlogic.gdx.math.Matrix4 getTransformMatrix() -> getTransformMatrix
    void identity() -> identity
    void translate(float,float,float) -> translate
    void rotate(float,float,float,float) -> rotate
    void scale(float,float,float) -> scale
    void setAutoShapeType(boolean) -> setAutoShapeType
    void begin() -> begin
    void begin(com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType) -> begin
    void set(com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType) -> set
    void point(float,float,float) -> point
    void line(float,float,float,float,float,float) -> line
    void line(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> line
    void line(float,float,float,float) -> line
    void line(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> line
    void line(float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color) -> line
    void line(float,float,float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color) -> line
    void curve(float,float,float,float,float,float,float,float,int) -> curve
    void triangle(float,float,float,float,float,float) -> triangle
    void triangle(float,float,float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color) -> triangle
    void rect(float,float,float,float) -> rect
    void rect(float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color) -> rect
    void rect(float,float,float,float,float,float,float,float,float) -> rect
    void rect(float,float,float,float,float,float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color) -> rect
    void rectLine(float,float,float,float,float) -> rectLine
    void rectLine(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float) -> rectLine
    void box(float,float,float,float,float,float) -> box
    void x(float,float,float) -> x
    void x(com.badlogic.gdx.math.Vector2,float) -> x
    void arc(float,float,float,float,float) -> arc
    void arc(float,float,float,float,float,int) -> arc
    void circle(float,float,float) -> circle
    void circle(float,float,float,int) -> circle
    void ellipse(float,float,float,float) -> ellipse
    void ellipse(float,float,float,float,int) -> ellipse
    void cone(float,float,float,float,float) -> cone
    void cone(float,float,float,float,float,int) -> cone
    void polygon(float[],int,int) -> polygon
    void polygon(float[]) -> polygon
    void polyline(float[],int,int) -> polyline
    void polyline(float[]) -> polyline
    void check(com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType,com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType,int) -> check
    void end() -> end
    void flush() -> flush
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType getCurrentType() -> getCurrentType
    com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer getRenderer() -> getRenderer
    boolean isDrawing() -> isDrawing
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType -> com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType:
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Point -> Point
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Line -> Line
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Filled -> Filled
    int glType -> glType
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType[] values() -> values
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType valueOf(java.lang.String) -> valueOf
    int getGlType() -> getGlType
com.badlogic.gdx.graphics.glutils.VertexArray -> com.badlogic.gdx.graphics.glutils.VertexArray:
    com.badlogic.gdx.graphics.VertexAttributes attributes -> attributes
    java.nio.FloatBuffer buffer -> buffer
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    boolean isBound -> isBound
    void dispose() -> dispose
    java.nio.FloatBuffer getBuffer() -> getBuffer
    int getNumVertices() -> getNumVertices
    int getNumMaxVertices() -> getNumMaxVertices
    void setVertices(float[],int,int) -> setVertices
    void updateVertices(int,float[],int,int) -> updateVertices
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> bind
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> bind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> unbind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> unbind
    com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> getAttributes
    void invalidate() -> invalidate
com.badlogic.gdx.graphics.glutils.VertexBufferObject -> com.badlogic.gdx.graphics.glutils.VertexBufferObject:
    com.badlogic.gdx.graphics.VertexAttributes attributes -> attributes
    java.nio.FloatBuffer buffer -> buffer
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    int bufferHandle -> bufferHandle
    boolean isStatic -> isStatic
    int usage -> usage
    boolean isDirty -> isDirty
    boolean isBound -> isBound
    com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> getAttributes
    int getNumVertices() -> getNumVertices
    int getNumMaxVertices() -> getNumMaxVertices
    java.nio.FloatBuffer getBuffer() -> getBuffer
    void bufferChanged() -> bufferChanged
    void setVertices(float[],int,int) -> setVertices
    void updateVertices(int,float[],int,int) -> updateVertices
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> bind
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> bind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> unbind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> unbind
    void invalidate() -> invalidate
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData -> com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData:
    com.badlogic.gdx.graphics.VertexAttributes attributes -> attributes
    java.nio.FloatBuffer buffer -> buffer
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    int bufferHandle -> bufferHandle
    boolean isDirect -> isDirect
    boolean isStatic -> isStatic
    int usage -> usage
    boolean isDirty -> isDirty
    boolean isBound -> isBound
    int createBufferObject() -> createBufferObject
    com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> getAttributes
    int getNumVertices() -> getNumVertices
    int getNumMaxVertices() -> getNumMaxVertices
    java.nio.FloatBuffer getBuffer() -> getBuffer
    void bufferChanged() -> bufferChanged
    void setVertices(float[],int,int) -> setVertices
    void updateVertices(int,float[],int,int) -> updateVertices
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> bind
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> bind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> unbind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> unbind
    void invalidate() -> invalidate
    void dispose() -> dispose
    int getBufferHandle() -> getBufferHandle
com.badlogic.gdx.graphics.glutils.VertexData -> com.badlogic.gdx.graphics.glutils.VertexData:
    int getNumVertices() -> getNumVertices
    int getNumMaxVertices() -> getNumMaxVertices
    com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> getAttributes
    void setVertices(float[],int,int) -> setVertices
    void updateVertices(int,float[],int,int) -> updateVertices
    java.nio.FloatBuffer getBuffer() -> getBuffer
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> bind
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> bind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> unbind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> unbind
    void invalidate() -> invalidate
    void dispose() -> dispose
com.badlogic.gdx.graphics.profiling.GL20Profiler -> com.badlogic.gdx.graphics.profiling.GL20Profiler:
    com.badlogic.gdx.graphics.GL20 gl20 -> gl20
    void glActiveTexture(int) -> glActiveTexture
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearDepthf(float) -> glClearDepthf
    void glClearStencil(int) -> glClearStencil
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    void glCullFace(int) -> glCullFace
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDisable(int) -> glDisable
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFrontFace(int) -> glFrontFace
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    int glGetError() -> glGetError
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glHint(int,int) -> glHint
    void glLineWidth(float) -> glLineWidth
    void glPixelStorei(int,int) -> glPixelStorei
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glScissor(int,int,int,int) -> glScissor
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilMask(int) -> glStencilMask
    void glStencilOp(int,int,int) -> glStencilOp
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glViewport(int,int,int,int) -> glViewport
    void glAttachShader(int,int) -> glAttachShader
    void glBindAttribLocation(int,int,java.lang.String) -> glBindAttribLocation
    void glBindBuffer(int,int) -> glBindBuffer
    void glBindFramebuffer(int,int) -> glBindFramebuffer
    void glBindRenderbuffer(int,int) -> glBindRenderbuffer
    void glBlendColor(float,float,float,float) -> glBlendColor
    void glBlendEquation(int) -> glBlendEquation
    void glBlendEquationSeparate(int,int) -> glBlendEquationSeparate
    void glBlendFuncSeparate(int,int,int,int) -> glBlendFuncSeparate
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    int glCheckFramebufferStatus(int) -> glCheckFramebufferStatus
    void glCompileShader(int) -> glCompileShader
    int glCreateProgram() -> glCreateProgram
    int glCreateShader(int) -> glCreateShader
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glDeleteFramebuffers(int,java.nio.IntBuffer) -> glDeleteFramebuffers
    void glDeleteProgram(int) -> glDeleteProgram
    void glDeleteRenderbuffers(int,java.nio.IntBuffer) -> glDeleteRenderbuffers
    void glDeleteShader(int) -> glDeleteShader
    void glDetachShader(int,int) -> glDetachShader
    void glDisableVertexAttribArray(int) -> glDisableVertexAttribArray
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glEnableVertexAttribArray(int) -> glEnableVertexAttribArray
    void glFramebufferRenderbuffer(int,int,int,int) -> glFramebufferRenderbuffer
    void glFramebufferTexture2D(int,int,int,int,int) -> glFramebufferTexture2D
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGenerateMipmap(int) -> glGenerateMipmap
    void glGenFramebuffers(int,java.nio.IntBuffer) -> glGenFramebuffers
    void glGenRenderbuffers(int,java.nio.IntBuffer) -> glGenRenderbuffers
    java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveAttrib
    java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveUniform
    void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer) -> glGetAttachedShaders
    int glGetAttribLocation(int,java.lang.String) -> glGetAttribLocation
    void glGetBooleanv(int,java.nio.Buffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer) -> glGetFramebufferAttachmentParameteriv
    void glGetProgramiv(int,int,java.nio.IntBuffer) -> glGetProgramiv
    java.lang.String glGetProgramInfoLog(int) -> glGetProgramInfoLog
    void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer) -> glGetRenderbufferParameteriv
    void glGetShaderiv(int,int,java.nio.IntBuffer) -> glGetShaderiv
    java.lang.String glGetShaderInfoLog(int) -> glGetShaderInfoLog
    void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer) -> glGetShaderPrecisionFormat
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    void glGetUniformfv(int,int,java.nio.FloatBuffer) -> glGetUniformfv
    void glGetUniformiv(int,int,java.nio.IntBuffer) -> glGetUniformiv
    int glGetUniformLocation(int,java.lang.String) -> glGetUniformLocation
    void glGetVertexAttribfv(int,int,java.nio.FloatBuffer) -> glGetVertexAttribfv
    void glGetVertexAttribiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribiv
    void glGetVertexAttribPointerv(int,int,java.nio.Buffer) -> glGetVertexAttribPointerv
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsFramebuffer(int) -> glIsFramebuffer
    boolean glIsProgram(int) -> glIsProgram
    boolean glIsRenderbuffer(int) -> glIsRenderbuffer
    boolean glIsShader(int) -> glIsShader
    boolean glIsTexture(int) -> glIsTexture
    void glLinkProgram(int) -> glLinkProgram
    void glReleaseShaderCompiler() -> glReleaseShaderCompiler
    void glRenderbufferStorage(int,int,int,int) -> glRenderbufferStorage
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int) -> glShaderBinary
    void glShaderSource(int,java.lang.String) -> glShaderSource
    void glStencilFuncSeparate(int,int,int,int) -> glStencilFuncSeparate
    void glStencilMaskSeparate(int,int) -> glStencilMaskSeparate
    void glStencilOpSeparate(int,int,int,int) -> glStencilOpSeparate
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glUniform1f(int,float) -> glUniform1f
    void glUniform1fv(int,int,java.nio.FloatBuffer) -> glUniform1fv
    void glUniform1i(int,int) -> glUniform1i
    void glUniform1iv(int,int,java.nio.IntBuffer) -> glUniform1iv
    void glUniform2f(int,float,float) -> glUniform2f
    void glUniform2fv(int,int,java.nio.FloatBuffer) -> glUniform2fv
    void glUniform2i(int,int,int) -> glUniform2i
    void glUniform2iv(int,int,java.nio.IntBuffer) -> glUniform2iv
    void glUniform3f(int,float,float,float) -> glUniform3f
    void glUniform3fv(int,int,java.nio.FloatBuffer) -> glUniform3fv
    void glUniform3i(int,int,int,int) -> glUniform3i
    void glUniform3iv(int,int,java.nio.IntBuffer) -> glUniform3iv
    void glUniform4f(int,float,float,float,float) -> glUniform4f
    void glUniform4fv(int,int,java.nio.FloatBuffer) -> glUniform4fv
    void glUniform4i(int,int,int,int,int) -> glUniform4i
    void glUniform4iv(int,int,java.nio.IntBuffer) -> glUniform4iv
    void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2fv
    void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3fv
    void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4fv
    void glUseProgram(int) -> glUseProgram
    void glValidateProgram(int) -> glValidateProgram
    void glVertexAttrib1f(int,float) -> glVertexAttrib1f
    void glVertexAttrib1fv(int,java.nio.FloatBuffer) -> glVertexAttrib1fv
    void glVertexAttrib2f(int,float,float) -> glVertexAttrib2f
    void glVertexAttrib2fv(int,java.nio.FloatBuffer) -> glVertexAttrib2fv
    void glVertexAttrib3f(int,float,float,float) -> glVertexAttrib3f
    void glVertexAttrib3fv(int,java.nio.FloatBuffer) -> glVertexAttrib3fv
    void glVertexAttrib4f(int,float,float,float,float) -> glVertexAttrib4f
    void glVertexAttrib4fv(int,java.nio.FloatBuffer) -> glVertexAttrib4fv
    void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer) -> glVertexAttribPointer
    void glVertexAttribPointer(int,int,int,boolean,int,int) -> glVertexAttribPointer
    void glDeleteTexture(int) -> glDeleteTexture
    int glGenTexture() -> glGenTexture
    void glDeleteBuffer(int) -> glDeleteBuffer
    void glDeleteFramebuffer(int) -> glDeleteFramebuffer
    void glDeleteRenderbuffer(int) -> glDeleteRenderbuffer
    int glGenBuffer() -> glGenBuffer
    int glGenFramebuffer() -> glGenFramebuffer
    int glGenRenderbuffer() -> glGenRenderbuffer
    void glUniform1fv(int,int,float[],int) -> glUniform1fv
    void glUniform1iv(int,int,int[],int) -> glUniform1iv
    void glUniform2fv(int,int,float[],int) -> glUniform2fv
    void glUniform2iv(int,int,int[],int) -> glUniform2iv
    void glUniform3fv(int,int,float[],int) -> glUniform3fv
    void glUniform3iv(int,int,int[],int) -> glUniform3iv
    void glUniform4fv(int,int,float[],int) -> glUniform4fv
    void glUniform4iv(int,int,int[],int) -> glUniform4iv
    void glUniformMatrix2fv(int,int,boolean,float[],int) -> glUniformMatrix2fv
    void glUniformMatrix3fv(int,int,boolean,float[],int) -> glUniformMatrix3fv
    void glUniformMatrix4fv(int,int,boolean,float[],int) -> glUniformMatrix4fv
com.badlogic.gdx.graphics.profiling.GL30Profiler -> com.badlogic.gdx.graphics.profiling.GL30Profiler:
    com.badlogic.gdx.graphics.GL30 gl30 -> gl30
    void glActiveTexture(int) -> glActiveTexture
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearDepthf(float) -> glClearDepthf
    void glClearStencil(int) -> glClearStencil
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    void glCullFace(int) -> glCullFace
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDisable(int) -> glDisable
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFrontFace(int) -> glFrontFace
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    int glGetError() -> glGetError
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glHint(int,int) -> glHint
    void glLineWidth(float) -> glLineWidth
    void glPixelStorei(int,int) -> glPixelStorei
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glScissor(int,int,int,int) -> glScissor
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilMask(int) -> glStencilMask
    void glStencilOp(int,int,int) -> glStencilOp
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glViewport(int,int,int,int) -> glViewport
    void glAttachShader(int,int) -> glAttachShader
    void glBindAttribLocation(int,int,java.lang.String) -> glBindAttribLocation
    void glBindBuffer(int,int) -> glBindBuffer
    void glBindFramebuffer(int,int) -> glBindFramebuffer
    void glBindRenderbuffer(int,int) -> glBindRenderbuffer
    void glBlendColor(float,float,float,float) -> glBlendColor
    void glBlendEquation(int) -> glBlendEquation
    void glBlendEquationSeparate(int,int) -> glBlendEquationSeparate
    void glBlendFuncSeparate(int,int,int,int) -> glBlendFuncSeparate
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    int glCheckFramebufferStatus(int) -> glCheckFramebufferStatus
    void glCompileShader(int) -> glCompileShader
    int glCreateProgram() -> glCreateProgram
    int glCreateShader(int) -> glCreateShader
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glDeleteFramebuffers(int,java.nio.IntBuffer) -> glDeleteFramebuffers
    void glDeleteProgram(int) -> glDeleteProgram
    void glDeleteRenderbuffers(int,java.nio.IntBuffer) -> glDeleteRenderbuffers
    void glDeleteShader(int) -> glDeleteShader
    void glDetachShader(int,int) -> glDetachShader
    void glDisableVertexAttribArray(int) -> glDisableVertexAttribArray
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glEnableVertexAttribArray(int) -> glEnableVertexAttribArray
    void glFramebufferRenderbuffer(int,int,int,int) -> glFramebufferRenderbuffer
    void glFramebufferTexture2D(int,int,int,int,int) -> glFramebufferTexture2D
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGenerateMipmap(int) -> glGenerateMipmap
    void glGenFramebuffers(int,java.nio.IntBuffer) -> glGenFramebuffers
    void glGenRenderbuffers(int,java.nio.IntBuffer) -> glGenRenderbuffers
    java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveAttrib
    java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveUniform
    void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer) -> glGetAttachedShaders
    int glGetAttribLocation(int,java.lang.String) -> glGetAttribLocation
    void glGetBooleanv(int,java.nio.Buffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer) -> glGetFramebufferAttachmentParameteriv
    void glGetProgramiv(int,int,java.nio.IntBuffer) -> glGetProgramiv
    java.lang.String glGetProgramInfoLog(int) -> glGetProgramInfoLog
    void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer) -> glGetRenderbufferParameteriv
    void glGetShaderiv(int,int,java.nio.IntBuffer) -> glGetShaderiv
    java.lang.String glGetShaderInfoLog(int) -> glGetShaderInfoLog
    void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer) -> glGetShaderPrecisionFormat
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    void glGetUniformfv(int,int,java.nio.FloatBuffer) -> glGetUniformfv
    void glGetUniformiv(int,int,java.nio.IntBuffer) -> glGetUniformiv
    int glGetUniformLocation(int,java.lang.String) -> glGetUniformLocation
    void glGetVertexAttribfv(int,int,java.nio.FloatBuffer) -> glGetVertexAttribfv
    void glGetVertexAttribiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribiv
    void glGetVertexAttribPointerv(int,int,java.nio.Buffer) -> glGetVertexAttribPointerv
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsFramebuffer(int) -> glIsFramebuffer
    boolean glIsProgram(int) -> glIsProgram
    boolean glIsRenderbuffer(int) -> glIsRenderbuffer
    boolean glIsShader(int) -> glIsShader
    boolean glIsTexture(int) -> glIsTexture
    void glLinkProgram(int) -> glLinkProgram
    void glReleaseShaderCompiler() -> glReleaseShaderCompiler
    void glRenderbufferStorage(int,int,int,int) -> glRenderbufferStorage
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int) -> glShaderBinary
    void glShaderSource(int,java.lang.String) -> glShaderSource
    void glStencilFuncSeparate(int,int,int,int) -> glStencilFuncSeparate
    void glStencilMaskSeparate(int,int) -> glStencilMaskSeparate
    void glStencilOpSeparate(int,int,int,int) -> glStencilOpSeparate
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glUniform1f(int,float) -> glUniform1f
    void glUniform1fv(int,int,java.nio.FloatBuffer) -> glUniform1fv
    void glUniform1i(int,int) -> glUniform1i
    void glUniform1iv(int,int,java.nio.IntBuffer) -> glUniform1iv
    void glUniform2f(int,float,float) -> glUniform2f
    void glUniform2fv(int,int,java.nio.FloatBuffer) -> glUniform2fv
    void glUniform2i(int,int,int) -> glUniform2i
    void glUniform2iv(int,int,java.nio.IntBuffer) -> glUniform2iv
    void glUniform3f(int,float,float,float) -> glUniform3f
    void glUniform3fv(int,int,java.nio.FloatBuffer) -> glUniform3fv
    void glUniform3i(int,int,int,int) -> glUniform3i
    void glUniform3iv(int,int,java.nio.IntBuffer) -> glUniform3iv
    void glUniform4f(int,float,float,float,float) -> glUniform4f
    void glUniform4fv(int,int,java.nio.FloatBuffer) -> glUniform4fv
    void glUniform4i(int,int,int,int,int) -> glUniform4i
    void glUniform4iv(int,int,java.nio.IntBuffer) -> glUniform4iv
    void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2fv
    void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3fv
    void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4fv
    void glUseProgram(int) -> glUseProgram
    void glValidateProgram(int) -> glValidateProgram
    void glVertexAttrib1f(int,float) -> glVertexAttrib1f
    void glVertexAttrib1fv(int,java.nio.FloatBuffer) -> glVertexAttrib1fv
    void glVertexAttrib2f(int,float,float) -> glVertexAttrib2f
    void glVertexAttrib2fv(int,java.nio.FloatBuffer) -> glVertexAttrib2fv
    void glVertexAttrib3f(int,float,float,float) -> glVertexAttrib3f
    void glVertexAttrib3fv(int,java.nio.FloatBuffer) -> glVertexAttrib3fv
    void glVertexAttrib4f(int,float,float,float,float) -> glVertexAttrib4f
    void glVertexAttrib4fv(int,java.nio.FloatBuffer) -> glVertexAttrib4fv
    void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer) -> glVertexAttribPointer
    void glVertexAttribPointer(int,int,int,boolean,int,int) -> glVertexAttribPointer
    void glReadBuffer(int) -> glReadBuffer
    void glDrawRangeElements(int,int,int,int,int,java.nio.Buffer) -> glDrawRangeElements
    void glDrawRangeElements(int,int,int,int,int,int) -> glDrawRangeElements
    void glTexImage3D(int,int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage3D
    void glTexImage3D(int,int,int,int,int,int,int,int,int,int) -> glTexImage3D
    void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage3D
    void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,int) -> glTexSubImage3D
    void glCopyTexSubImage3D(int,int,int,int,int,int,int,int,int) -> glCopyTexSubImage3D
    void glGenQueries(int,int[],int) -> glGenQueries
    void glGenQueries(int,java.nio.IntBuffer) -> glGenQueries
    void glDeleteQueries(int,int[],int) -> glDeleteQueries
    void glDeleteQueries(int,java.nio.IntBuffer) -> glDeleteQueries
    boolean glIsQuery(int) -> glIsQuery
    void glBeginQuery(int,int) -> glBeginQuery
    void glEndQuery(int) -> glEndQuery
    void glGetQueryiv(int,int,java.nio.IntBuffer) -> glGetQueryiv
    void glGetQueryObjectuiv(int,int,java.nio.IntBuffer) -> glGetQueryObjectuiv
    boolean glUnmapBuffer(int) -> glUnmapBuffer
    java.nio.Buffer glGetBufferPointerv(int,int) -> glGetBufferPointerv
    void glDrawBuffers(int,java.nio.IntBuffer) -> glDrawBuffers
    void glUniformMatrix2x3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2x3fv
    void glUniformMatrix3x2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3x2fv
    void glUniformMatrix2x4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2x4fv
    void glUniformMatrix4x2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4x2fv
    void glUniformMatrix3x4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3x4fv
    void glUniformMatrix4x3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4x3fv
    void glBlitFramebuffer(int,int,int,int,int,int,int,int,int,int) -> glBlitFramebuffer
    void glRenderbufferStorageMultisample(int,int,int,int,int) -> glRenderbufferStorageMultisample
    void glFramebufferTextureLayer(int,int,int,int,int) -> glFramebufferTextureLayer
    void glFlushMappedBufferRange(int,int,int) -> glFlushMappedBufferRange
    void glBindVertexArray(int) -> glBindVertexArray
    void glDeleteVertexArrays(int,int[],int) -> glDeleteVertexArrays
    void glDeleteVertexArrays(int,java.nio.IntBuffer) -> glDeleteVertexArrays
    void glGenVertexArrays(int,int[],int) -> glGenVertexArrays
    void glGenVertexArrays(int,java.nio.IntBuffer) -> glGenVertexArrays
    boolean glIsVertexArray(int) -> glIsVertexArray
    void glBeginTransformFeedback(int) -> glBeginTransformFeedback
    void glEndTransformFeedback() -> glEndTransformFeedback
    void glBindBufferRange(int,int,int,int,int) -> glBindBufferRange
    void glBindBufferBase(int,int,int) -> glBindBufferBase
    void glTransformFeedbackVaryings(int,java.lang.String[],int) -> glTransformFeedbackVaryings
    void glVertexAttribIPointer(int,int,int,int,int) -> glVertexAttribIPointer
    void glGetVertexAttribIiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribIiv
    void glGetVertexAttribIuiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribIuiv
    void glVertexAttribI4i(int,int,int,int,int) -> glVertexAttribI4i
    void glVertexAttribI4ui(int,int,int,int,int) -> glVertexAttribI4ui
    void glGetUniformuiv(int,int,java.nio.IntBuffer) -> glGetUniformuiv
    int glGetFragDataLocation(int,java.lang.String) -> glGetFragDataLocation
    void glUniform1uiv(int,int,java.nio.IntBuffer) -> glUniform1uiv
    void glUniform3uiv(int,int,java.nio.IntBuffer) -> glUniform3uiv
    void glUniform4uiv(int,int,java.nio.IntBuffer) -> glUniform4uiv
    void glClearBufferiv(int,int,java.nio.IntBuffer) -> glClearBufferiv
    void glClearBufferuiv(int,int,java.nio.IntBuffer) -> glClearBufferuiv
    void glClearBufferfv(int,int,java.nio.FloatBuffer) -> glClearBufferfv
    void glClearBufferfi(int,int,float,int) -> glClearBufferfi
    java.lang.String glGetStringi(int,int) -> glGetStringi
    void glCopyBufferSubData(int,int,int,int,int) -> glCopyBufferSubData
    void glGetUniformIndices(int,java.lang.String[],java.nio.IntBuffer) -> glGetUniformIndices
    void glGetActiveUniformsiv(int,int,java.nio.IntBuffer,int,java.nio.IntBuffer) -> glGetActiveUniformsiv
    int glGetUniformBlockIndex(int,java.lang.String) -> glGetUniformBlockIndex
    void glGetActiveUniformBlockiv(int,int,int,java.nio.IntBuffer) -> glGetActiveUniformBlockiv
    void glGetActiveUniformBlockName(int,int,java.nio.Buffer,java.nio.Buffer) -> glGetActiveUniformBlockName
    java.lang.String glGetActiveUniformBlockName(int,int) -> glGetActiveUniformBlockName
    void glUniformBlockBinding(int,int,int) -> glUniformBlockBinding
    void glDrawArraysInstanced(int,int,int,int) -> glDrawArraysInstanced
    void glDrawElementsInstanced(int,int,int,int,int) -> glDrawElementsInstanced
    void glGetInteger64v(int,java.nio.LongBuffer) -> glGetInteger64v
    void glGetBufferParameteri64v(int,int,java.nio.LongBuffer) -> glGetBufferParameteri64v
    void glGenSamplers(int,int[],int) -> glGenSamplers
    void glGenSamplers(int,java.nio.IntBuffer) -> glGenSamplers
    void glDeleteSamplers(int,int[],int) -> glDeleteSamplers
    void glDeleteSamplers(int,java.nio.IntBuffer) -> glDeleteSamplers
    boolean glIsSampler(int) -> glIsSampler
    void glBindSampler(int,int) -> glBindSampler
    void glSamplerParameteri(int,int,int) -> glSamplerParameteri
    void glSamplerParameteriv(int,int,java.nio.IntBuffer) -> glSamplerParameteriv
    void glSamplerParameterf(int,int,float) -> glSamplerParameterf
    void glSamplerParameterfv(int,int,java.nio.FloatBuffer) -> glSamplerParameterfv
    void glGetSamplerParameteriv(int,int,java.nio.IntBuffer) -> glGetSamplerParameteriv
    void glGetSamplerParameterfv(int,int,java.nio.FloatBuffer) -> glGetSamplerParameterfv
    void glVertexAttribDivisor(int,int) -> glVertexAttribDivisor
    void glBindTransformFeedback(int,int) -> glBindTransformFeedback
    void glDeleteTransformFeedbacks(int,int[],int) -> glDeleteTransformFeedbacks
    void glDeleteTransformFeedbacks(int,java.nio.IntBuffer) -> glDeleteTransformFeedbacks
    void glGenTransformFeedbacks(int,int[],int) -> glGenTransformFeedbacks
    void glGenTransformFeedbacks(int,java.nio.IntBuffer) -> glGenTransformFeedbacks
    boolean glIsTransformFeedback(int) -> glIsTransformFeedback
    void glPauseTransformFeedback() -> glPauseTransformFeedback
    void glResumeTransformFeedback() -> glResumeTransformFeedback
    void glProgramParameteri(int,int,int) -> glProgramParameteri
    void glInvalidateFramebuffer(int,int,java.nio.IntBuffer) -> glInvalidateFramebuffer
    void glInvalidateSubFramebuffer(int,int,java.nio.IntBuffer,int,int,int,int) -> glInvalidateSubFramebuffer
    void glDeleteTexture(int) -> glDeleteTexture
    int glGenTexture() -> glGenTexture
    void glDeleteBuffer(int) -> glDeleteBuffer
    void glDeleteFramebuffer(int) -> glDeleteFramebuffer
    void glDeleteRenderbuffer(int) -> glDeleteRenderbuffer
    int glGenBuffer() -> glGenBuffer
    int glGenFramebuffer() -> glGenFramebuffer
    int glGenRenderbuffer() -> glGenRenderbuffer
    void glUniform1fv(int,int,float[],int) -> glUniform1fv
    void glUniform1iv(int,int,int[],int) -> glUniform1iv
    void glUniform2fv(int,int,float[],int) -> glUniform2fv
    void glUniform2iv(int,int,int[],int) -> glUniform2iv
    void glUniform3fv(int,int,float[],int) -> glUniform3fv
    void glUniform3iv(int,int,int[],int) -> glUniform3iv
    void glUniform4fv(int,int,float[],int) -> glUniform4fv
    void glUniform4iv(int,int,int[],int) -> glUniform4iv
    void glUniformMatrix2fv(int,int,boolean,float[],int) -> glUniformMatrix2fv
    void glUniformMatrix3fv(int,int,boolean,float[],int) -> glUniformMatrix3fv
    void glUniformMatrix4fv(int,int,boolean,float[],int) -> glUniformMatrix4fv
com.badlogic.gdx.graphics.profiling.GLProfiler -> com.badlogic.gdx.graphics.profiling.GLProfiler:
    int calls -> calls
    int textureBindings -> textureBindings
    int drawCalls -> drawCalls
    int shaderSwitches -> shaderSwitches
    com.badlogic.gdx.math.FloatCounter vertexCount -> vertexCount
    void enable() -> enable
    void disable() -> disable
    void reset() -> reset
com.badlogic.gdx.input.GestureDetector -> com.badlogic.gdx.input.GestureDetector:
    com.badlogic.gdx.input.GestureDetector$GestureListener listener -> listener
    float tapSquareSize -> tapSquareSize
    long tapCountInterval -> tapCountInterval
    float longPressSeconds -> longPressSeconds
    long maxFlingDelay -> maxFlingDelay
    boolean inTapSquare -> inTapSquare
    int tapCount -> tapCount
    long lastTapTime -> lastTapTime
    float lastTapX -> lastTapX
    float lastTapY -> lastTapY
    int lastTapButton -> lastTapButton
    int lastTapPointer -> lastTapPointer
    boolean longPressFired -> longPressFired
    boolean pinching -> pinching
    boolean panning -> panning
    com.badlogic.gdx.input.GestureDetector$VelocityTracker tracker -> tracker
    float tapSquareCenterX -> tapSquareCenterX
    float tapSquareCenterY -> tapSquareCenterY
    long gestureStartTime -> gestureStartTime
    com.badlogic.gdx.math.Vector2 pointer1 -> pointer1
    com.badlogic.gdx.math.Vector2 pointer2 -> pointer2
    com.badlogic.gdx.math.Vector2 initialPointer1 -> initialPointer1
    com.badlogic.gdx.math.Vector2 initialPointer2 -> initialPointer2
    com.badlogic.gdx.utils.Timer$Task longPressTask -> longPressTask
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchDown(float,float,int,int) -> touchDown
    boolean touchDragged(int,int,int) -> touchDragged
    boolean touchDragged(float,float,int) -> touchDragged
    boolean touchUp(int,int,int,int) -> touchUp
    boolean touchUp(float,float,int,int) -> touchUp
    void cancel() -> cancel
    boolean isLongPressed() -> isLongPressed
    boolean isLongPressed(float) -> isLongPressed
    boolean isPanning() -> isPanning
    void reset() -> reset
    boolean isWithinTapSquare(float,float,float,float) -> isWithinTapSquare
    void invalidateTapSquare() -> invalidateTapSquare
    void setTapSquareSize(float) -> setTapSquareSize
    void setTapCountInterval(float) -> setTapCountInterval
    void setLongPressSeconds(float) -> setLongPressSeconds
    void setMaxFlingDelay(long) -> setMaxFlingDelay
com.badlogic.gdx.input.GestureDetector$1 -> com.badlogic.gdx.input.GestureDetector$1:
    com.badlogic.gdx.input.GestureDetector this$0 -> this$0
    void run() -> run
com.badlogic.gdx.input.GestureDetector$GestureAdapter -> com.badlogic.gdx.input.GestureDetector$GestureAdapter:
    boolean touchDown(float,float,int,int) -> touchDown
    boolean tap(float,float,int,int) -> tap
    boolean longPress(float,float) -> longPress
    boolean fling(float,float,int) -> fling
    boolean pan(float,float,float,float) -> pan
    boolean panStop(float,float,int,int) -> panStop
    boolean zoom(float,float) -> zoom
    boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> pinch
com.badlogic.gdx.input.GestureDetector$GestureListener -> com.badlogic.gdx.input.GestureDetector$GestureListener:
    boolean touchDown(float,float,int,int) -> touchDown
    boolean tap(float,float,int,int) -> tap
    boolean longPress(float,float) -> longPress
    boolean fling(float,float,int) -> fling
    boolean pan(float,float,float,float) -> pan
    boolean panStop(float,float,int,int) -> panStop
    boolean zoom(float,float) -> zoom
    boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> pinch
com.badlogic.gdx.input.GestureDetector$VelocityTracker -> com.badlogic.gdx.input.GestureDetector$VelocityTracker:
    int sampleSize -> sampleSize
    float lastX -> lastX
    float lastY -> lastY
    float deltaX -> deltaX
    float deltaY -> deltaY
    long lastTime -> lastTime
    int numSamples -> numSamples
    float[] meanX -> meanX
    float[] meanY -> meanY
    long[] meanTime -> meanTime
    void start(float,float,long) -> start
    void update(float,float,long) -> update
    float getVelocityX() -> getVelocityX
    float getVelocityY() -> getVelocityY
    float getAverage(float[],int) -> getAverage
    long getAverage(long[],int) -> getAverage
    float getSum(float[],int) -> getSum
com.badlogic.gdx.input.RemoteInput -> com.badlogic.gdx.input.RemoteInput:
    int DEFAULT_PORT -> DEFAULT_PORT
    java.net.ServerSocket serverSocket -> serverSocket
    float[] accel -> accel
    float[] compass -> compass
    boolean multiTouch -> multiTouch
    float remoteWidth -> remoteWidth
    float remoteHeight -> remoteHeight
    boolean connected -> connected
    com.badlogic.gdx.input.RemoteInput$RemoteInputListener listener -> listener
    int keyCount -> keyCount
    boolean[] keys -> keys
    boolean keyJustPressed -> keyJustPressed
    boolean[] justPressedKeys -> justPressedKeys
    int[] touchX -> touchX
    int[] touchY -> touchY
    boolean[] isTouched -> isTouched
    boolean justTouched -> justTouched
    com.badlogic.gdx.InputProcessor processor -> processor
    int port -> port
    java.lang.String[] ips -> ips
    void run() -> run
    boolean isConnected() -> isConnected
    float getAccelerometerX() -> getAccelerometerX
    float getAccelerometerY() -> getAccelerometerY
    float getAccelerometerZ() -> getAccelerometerZ
    int getX() -> getX
    int getX(int) -> getX
    int getY() -> getY
    int getY(int) -> getY
    boolean isTouched() -> isTouched
    boolean justTouched() -> justTouched
    boolean isTouched(int) -> isTouched
    boolean isButtonPressed(int) -> isButtonPressed
    boolean isKeyPressed(int) -> isKeyPressed
    boolean isKeyJustPressed(int) -> isKeyJustPressed
    void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String,java.lang.String) -> getTextInput
    void setOnscreenKeyboardVisible(boolean) -> setOnscreenKeyboardVisible
    void vibrate(int) -> vibrate
    void vibrate(long[],int) -> vibrate
    void cancelVibrate() -> cancelVibrate
    float getAzimuth() -> getAzimuth
    float getPitch() -> getPitch
    float getRoll() -> getRoll
    void setCatchBackKey(boolean) -> setCatchBackKey
    boolean isCatchBackKey() -> isCatchBackKey
    void setInputProcessor(com.badlogic.gdx.InputProcessor) -> setInputProcessor
    com.badlogic.gdx.InputProcessor getInputProcessor() -> getInputProcessor
    java.lang.String[] getIPs() -> getIPs
    boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral) -> isPeripheralAvailable
    int getRotation() -> getRotation
    com.badlogic.gdx.Input$Orientation getNativeOrientation() -> getNativeOrientation
    void setCursorCatched(boolean) -> setCursorCatched
    boolean isCursorCatched() -> isCursorCatched
    int getDeltaX() -> getDeltaX
    int getDeltaX(int) -> getDeltaX
    int getDeltaY() -> getDeltaY
    int getDeltaY(int) -> getDeltaY
    void setCursorPosition(int,int) -> setCursorPosition
    void setCursorImage(com.badlogic.gdx.graphics.Pixmap,int,int) -> setCursorImage
    void setCatchMenuKey(boolean) -> setCatchMenuKey
    long getCurrentEventTime() -> getCurrentEventTime
    void getRotationMatrix(float[]) -> getRotationMatrix
com.badlogic.gdx.input.RemoteInput$EventTrigger -> com.badlogic.gdx.input.RemoteInput$EventTrigger:
    com.badlogic.gdx.input.RemoteInput$TouchEvent touchEvent -> touchEvent
    com.badlogic.gdx.input.RemoteInput$KeyEvent keyEvent -> keyEvent
    com.badlogic.gdx.input.RemoteInput this$0 -> this$0
    void run() -> run
com.badlogic.gdx.input.RemoteInput$KeyEvent -> com.badlogic.gdx.input.RemoteInput$KeyEvent:
    int KEY_DOWN -> KEY_DOWN
    int KEY_UP -> KEY_UP
    int KEY_TYPED -> KEY_TYPED
    long timeStamp -> timeStamp
    int type -> type
    int keyCode -> keyCode
    char keyChar -> keyChar
    com.badlogic.gdx.input.RemoteInput this$0 -> this$0
com.badlogic.gdx.input.RemoteInput$RemoteInputListener -> com.badlogic.gdx.input.RemoteInput$RemoteInputListener:
    void onConnected() -> onConnected
    void onDisconnected() -> onDisconnected
com.badlogic.gdx.input.RemoteInput$TouchEvent -> com.badlogic.gdx.input.RemoteInput$TouchEvent:
    int TOUCH_DOWN -> TOUCH_DOWN
    int TOUCH_UP -> TOUCH_UP
    int TOUCH_DRAGGED -> TOUCH_DRAGGED
    long timeStamp -> timeStamp
    int type -> type
    int x -> x
    int y -> y
    int pointer -> pointer
    com.badlogic.gdx.input.RemoteInput this$0 -> this$0
com.badlogic.gdx.input.RemoteSender -> com.badlogic.gdx.input.RemoteSender:
    java.io.DataOutputStream out -> out
    boolean connected -> connected
    int KEY_DOWN -> KEY_DOWN
    int KEY_UP -> KEY_UP
    int KEY_TYPED -> KEY_TYPED
    int TOUCH_DOWN -> TOUCH_DOWN
    int TOUCH_UP -> TOUCH_UP
    int TOUCH_DRAGGED -> TOUCH_DRAGGED
    int ACCEL -> ACCEL
    int COMPASS -> COMPASS
    int SIZE -> SIZE
    void sendUpdate() -> sendUpdate
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
    boolean keyTyped(char) -> keyTyped
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchUp(int,int,int,int) -> touchUp
    boolean touchDragged(int,int,int) -> touchDragged
    boolean mouseMoved(int,int) -> mouseMoved
    boolean scrolled(int) -> scrolled
    boolean isConnected() -> isConnected
com.badlogic.gdx.maps.ImageResolver -> com.badlogic.gdx.maps.ImageResolver:
    com.badlogic.gdx.graphics.g2d.TextureRegion getImage(java.lang.String) -> getImage
com.badlogic.gdx.maps.ImageResolver$AssetManagerImageResolver -> com.badlogic.gdx.maps.ImageResolver$AssetManagerImageResolver:
    com.badlogic.gdx.assets.AssetManager assetManager -> assetManager
    com.badlogic.gdx.graphics.g2d.TextureRegion getImage(java.lang.String) -> getImage
com.badlogic.gdx.maps.ImageResolver$DirectImageResolver -> com.badlogic.gdx.maps.ImageResolver$DirectImageResolver:
    com.badlogic.gdx.utils.ObjectMap images -> images
    com.badlogic.gdx.graphics.g2d.TextureRegion getImage(java.lang.String) -> getImage
com.badlogic.gdx.maps.ImageResolver$TextureAtlasImageResolver -> com.badlogic.gdx.maps.ImageResolver$TextureAtlasImageResolver:
    com.badlogic.gdx.graphics.g2d.TextureAtlas atlas -> atlas
    com.badlogic.gdx.graphics.g2d.TextureRegion getImage(java.lang.String) -> getImage
com.badlogic.gdx.maps.Map -> com.badlogic.gdx.maps.Map:
    com.badlogic.gdx.maps.MapLayers layers -> layers
    com.badlogic.gdx.maps.MapProperties properties -> properties
    com.badlogic.gdx.maps.MapLayers getLayers() -> getLayers
    com.badlogic.gdx.maps.MapProperties getProperties() -> getProperties
    void dispose() -> dispose
com.badlogic.gdx.maps.MapLayer -> com.badlogic.gdx.maps.MapLayer:
    java.lang.String name -> name
    float opacity -> opacity
    boolean visible -> visible
    com.badlogic.gdx.maps.MapObjects objects -> objects
    com.badlogic.gdx.maps.MapProperties properties -> properties
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    float getOpacity() -> getOpacity
    void setOpacity(float) -> setOpacity
    com.badlogic.gdx.maps.MapObjects getObjects() -> getObjects
    boolean isVisible() -> isVisible
    void setVisible(boolean) -> setVisible
    com.badlogic.gdx.maps.MapProperties getProperties() -> getProperties
com.badlogic.gdx.maps.MapLayers -> com.badlogic.gdx.maps.MapLayers:
    com.badlogic.gdx.utils.Array layers -> layers
    com.badlogic.gdx.maps.MapLayer get(int) -> get
    com.badlogic.gdx.maps.MapLayer get(java.lang.String) -> get
    int getCount() -> getCount
    void add(com.badlogic.gdx.maps.MapLayer) -> add
    void remove(int) -> remove
    void remove(com.badlogic.gdx.maps.MapLayer) -> remove
    com.badlogic.gdx.utils.Array getByType(java.lang.Class) -> getByType
    com.badlogic.gdx.utils.Array getByType(java.lang.Class,com.badlogic.gdx.utils.Array) -> getByType
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.maps.MapObject -> com.badlogic.gdx.maps.MapObject:
    java.lang.String name -> name
    float opacity -> opacity
    boolean visible -> visible
    com.badlogic.gdx.maps.MapProperties properties -> properties
    com.badlogic.gdx.graphics.Color color -> color
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    float getOpacity() -> getOpacity
    void setOpacity(float) -> setOpacity
    boolean isVisible() -> isVisible
    void setVisible(boolean) -> setVisible
    com.badlogic.gdx.maps.MapProperties getProperties() -> getProperties
com.badlogic.gdx.maps.MapObjects -> com.badlogic.gdx.maps.MapObjects:
    com.badlogic.gdx.utils.Array objects -> objects
    com.badlogic.gdx.maps.MapObject get(int) -> get
    com.badlogic.gdx.maps.MapObject get(java.lang.String) -> get
    void add(com.badlogic.gdx.maps.MapObject) -> add
    void remove(int) -> remove
    void remove(com.badlogic.gdx.maps.MapObject) -> remove
    int getCount() -> getCount
    com.badlogic.gdx.utils.Array getByType(java.lang.Class) -> getByType
    com.badlogic.gdx.utils.Array getByType(java.lang.Class,com.badlogic.gdx.utils.Array) -> getByType
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.maps.MapProperties -> com.badlogic.gdx.maps.MapProperties:
    com.badlogic.gdx.utils.ObjectMap properties -> properties
    boolean containsKey(java.lang.String) -> containsKey
    java.lang.Object get(java.lang.String) -> get
    java.lang.Object get(java.lang.String,java.lang.Class) -> get
    java.lang.Object get(java.lang.String,java.lang.Object,java.lang.Class) -> get
    void put(java.lang.String,java.lang.Object) -> put
    void putAll(com.badlogic.gdx.maps.MapProperties) -> putAll
    void remove(java.lang.String) -> remove
    void clear() -> clear
    java.util.Iterator getKeys() -> getKeys
    java.util.Iterator getValues() -> getValues
com.badlogic.gdx.maps.MapRenderer -> com.badlogic.gdx.maps.MapRenderer:
    void setView(com.badlogic.gdx.graphics.OrthographicCamera) -> setView
    void setView(com.badlogic.gdx.math.Matrix4,float,float,float,float) -> setView
    void render() -> render
    void render(int[]) -> render
com.badlogic.gdx.maps.objects.CircleMapObject -> com.badlogic.gdx.maps.objects.CircleMapObject:
    com.badlogic.gdx.math.Circle circle -> circle
    com.badlogic.gdx.math.Circle getCircle() -> getCircle
com.badlogic.gdx.maps.objects.EllipseMapObject -> com.badlogic.gdx.maps.objects.EllipseMapObject:
    com.badlogic.gdx.math.Ellipse ellipse -> ellipse
    com.badlogic.gdx.math.Ellipse getEllipse() -> getEllipse
com.badlogic.gdx.maps.objects.PolygonMapObject -> com.badlogic.gdx.maps.objects.PolygonMapObject:
    com.badlogic.gdx.math.Polygon polygon -> polygon
    com.badlogic.gdx.math.Polygon getPolygon() -> getPolygon
    void setPolygon(com.badlogic.gdx.math.Polygon) -> setPolygon
com.badlogic.gdx.maps.objects.PolylineMapObject -> com.badlogic.gdx.maps.objects.PolylineMapObject:
    com.badlogic.gdx.math.Polyline polyline -> polyline
    com.badlogic.gdx.math.Polyline getPolyline() -> getPolyline
    void setPolyline(com.badlogic.gdx.math.Polyline) -> setPolyline
com.badlogic.gdx.maps.objects.RectangleMapObject -> com.badlogic.gdx.maps.objects.RectangleMapObject:
    com.badlogic.gdx.math.Rectangle rectangle -> rectangle
    com.badlogic.gdx.math.Rectangle getRectangle() -> getRectangle
com.badlogic.gdx.maps.objects.TextureMapObject -> com.badlogic.gdx.maps.objects.TextureMapObject:
    float x -> x
    float y -> y
    float originX -> originX
    float originY -> originY
    float scaleX -> scaleX
    float scaleY -> scaleY
    float rotation -> rotation
    com.badlogic.gdx.graphics.g2d.TextureRegion textureRegion -> textureRegion
    float getX() -> getX
    void setX(float) -> setX
    float getY() -> getY
    void setY(float) -> setY
    float getOriginX() -> getOriginX
    void setOriginX(float) -> setOriginX
    float getOriginY() -> getOriginY
    void setOriginY(float) -> setOriginY
    float getScaleX() -> getScaleX
    void setScaleX(float) -> setScaleX
    float getScaleY() -> getScaleY
    void setScaleY(float) -> setScaleY
    float getRotation() -> getRotation
    void setRotation(float) -> setRotation
    com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion() -> getTextureRegion
    void setTextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion) -> setTextureRegion
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader -> com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader:
    com.badlogic.gdx.utils.Array trackedTextures -> trackedTextures
    com.badlogic.gdx.maps.tiled.TiledMap load(java.lang.String) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters) -> getDependencies
    com.badlogic.gdx.maps.tiled.TiledMap load(java.lang.String,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters) -> load
    com.badlogic.gdx.files.FileHandle loadAtlas(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle) -> loadAtlas
    void setTextureFilters(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter) -> setTextureFilters
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters) -> loadAsync
    com.badlogic.gdx.maps.tiled.TiledMap loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters) -> loadSync
    com.badlogic.gdx.maps.tiled.TiledMap loadMap(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver) -> loadMap
    void loadTileset(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver) -> loadTileset
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver -> com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver:
    com.badlogic.gdx.graphics.g2d.TextureAtlas getAtlas(java.lang.String) -> getAtlas
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver$AssetManagerAtlasResolver -> com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver$AssetManagerAtlasResolver:
    com.badlogic.gdx.assets.AssetManager assetManager -> assetManager
    com.badlogic.gdx.graphics.g2d.TextureAtlas getAtlas(java.lang.String) -> getAtlas
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver$DirectAtlasResolver -> com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver$DirectAtlasResolver:
    com.badlogic.gdx.utils.ObjectMap atlases -> atlases
    com.badlogic.gdx.graphics.g2d.TextureAtlas getAtlas(java.lang.String) -> getAtlas
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters -> com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters:
    boolean forceTextureFilters -> forceTextureFilters
com.badlogic.gdx.maps.tiled.BaseTmxMapLoader -> com.badlogic.gdx.maps.tiled.BaseTmxMapLoader:
    int FLAG_FLIP_HORIZONTALLY -> FLAG_FLIP_HORIZONTALLY
    int FLAG_FLIP_VERTICALLY -> FLAG_FLIP_VERTICALLY
    int FLAG_FLIP_DIAGONALLY -> FLAG_FLIP_DIAGONALLY
    int MASK_CLEAR -> MASK_CLEAR
    com.badlogic.gdx.utils.XmlReader xml -> xml
    com.badlogic.gdx.utils.XmlReader$Element root -> root
    boolean convertObjectToTileSpace -> convertObjectToTileSpace
    int mapTileWidth -> mapTileWidth
    int mapTileHeight -> mapTileHeight
    int mapWidthInPixels -> mapWidthInPixels
    int mapHeightInPixels -> mapHeightInPixels
    com.badlogic.gdx.maps.tiled.TiledMap map -> map
    void loadTileLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element) -> loadTileLayer
    void loadObjectGroup(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element) -> loadObjectGroup
    void loadObject(com.badlogic.gdx.maps.MapLayer,com.badlogic.gdx.utils.XmlReader$Element) -> loadObject
    void loadProperties(com.badlogic.gdx.maps.MapProperties,com.badlogic.gdx.utils.XmlReader$Element) -> loadProperties
    com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell createTileLayerCell(boolean,boolean,boolean) -> createTileLayerCell
    int[] getTileIds(com.badlogic.gdx.utils.XmlReader$Element,int,int) -> getTileIds
    int unsignedByteToInt(byte) -> unsignedByteToInt
    com.badlogic.gdx.files.FileHandle getRelativeFileHandle(com.badlogic.gdx.files.FileHandle,java.lang.String) -> getRelativeFileHandle
com.badlogic.gdx.maps.tiled.BaseTmxMapLoader$Parameters -> com.badlogic.gdx.maps.tiled.BaseTmxMapLoader$Parameters:
    boolean generateMipMaps -> generateMipMaps
    com.badlogic.gdx.graphics.Texture$TextureFilter textureMinFilter -> textureMinFilter
    com.badlogic.gdx.graphics.Texture$TextureFilter textureMagFilter -> textureMagFilter
    boolean convertObjectToTileSpace -> convertObjectToTileSpace
com.badlogic.gdx.maps.tiled.TideMapLoader -> com.badlogic.gdx.maps.tiled.TideMapLoader:
    com.badlogic.gdx.utils.XmlReader xml -> xml
    com.badlogic.gdx.utils.XmlReader$Element root -> root
    com.badlogic.gdx.maps.tiled.TiledMap load(java.lang.String) -> load
    com.badlogic.gdx.maps.tiled.TiledMap load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.TideMapLoader$Parameters) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.TideMapLoader$Parameters) -> getDependencies
    com.badlogic.gdx.maps.tiled.TiledMap loadMap(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver) -> loadMap
    com.badlogic.gdx.utils.Array loadTileSheets(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle) -> loadTileSheets
    void loadTileSheet(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver) -> loadTileSheet
    void loadLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element) -> loadLayer
    void loadProperties(com.badlogic.gdx.maps.MapProperties,com.badlogic.gdx.utils.XmlReader$Element) -> loadProperties
    com.badlogic.gdx.files.FileHandle getRelativeFileHandle(com.badlogic.gdx.files.FileHandle,java.lang.String) -> getRelativeFileHandle
    java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.maps.tiled.TideMapLoader$Parameters -> com.badlogic.gdx.maps.tiled.TideMapLoader$Parameters:
com.badlogic.gdx.maps.tiled.TiledMap -> com.badlogic.gdx.maps.tiled.TiledMap:
    com.badlogic.gdx.maps.tiled.TiledMapTileSets tilesets -> tilesets
    com.badlogic.gdx.utils.Array ownedResources -> ownedResources
    com.badlogic.gdx.maps.tiled.TiledMapTileSets getTileSets() -> getTileSets
    void setOwnedResources(com.badlogic.gdx.utils.Array) -> setOwnedResources
    void dispose() -> dispose
com.badlogic.gdx.maps.tiled.TiledMapRenderer -> com.badlogic.gdx.maps.tiled.TiledMapRenderer:
    void renderObjects(com.badlogic.gdx.maps.MapLayer) -> renderObjects
    void renderObject(com.badlogic.gdx.maps.MapObject) -> renderObject
    void renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer) -> renderTileLayer
com.badlogic.gdx.maps.tiled.TiledMapTile -> com.badlogic.gdx.maps.tiled.TiledMapTile:
    int getId() -> getId
    void setId(int) -> setId
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode getBlendMode() -> getBlendMode
    void setBlendMode(com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode) -> setBlendMode
    com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion() -> getTextureRegion
    void setTextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion) -> setTextureRegion
    float getOffsetX() -> getOffsetX
    void setOffsetX(float) -> setOffsetX
    float getOffsetY() -> getOffsetY
    void setOffsetY(float) -> setOffsetY
    com.badlogic.gdx.maps.MapProperties getProperties() -> getProperties
com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode -> com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode:
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode NONE -> NONE
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode ALPHA -> ALPHA
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode[] $VALUES -> $VALUES
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode[] values() -> values
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.maps.tiled.TiledMapTileLayer -> com.badlogic.gdx.maps.tiled.TiledMapTileLayer:
    int width -> width
    int height -> height
    float tileWidth -> tileWidth
    float tileHeight -> tileHeight
    com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell[][] cells -> cells
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    float getTileWidth() -> getTileWidth
    float getTileHeight() -> getTileHeight
    com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell getCell(int,int) -> getCell
    void setCell(int,int,com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell) -> setCell
com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell -> com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell:
    com.badlogic.gdx.maps.tiled.TiledMapTile tile -> tile
    boolean flipHorizontally -> flipHorizontally
    boolean flipVertically -> flipVertically
    int rotation -> rotation
    int ROTATE_0 -> ROTATE_0
    int ROTATE_90 -> ROTATE_90
    int ROTATE_180 -> ROTATE_180
    int ROTATE_270 -> ROTATE_270
    com.badlogic.gdx.maps.tiled.TiledMapTile getTile() -> getTile
    void setTile(com.badlogic.gdx.maps.tiled.TiledMapTile) -> setTile
    boolean getFlipHorizontally() -> getFlipHorizontally
    void setFlipHorizontally(boolean) -> setFlipHorizontally
    boolean getFlipVertically() -> getFlipVertically
    void setFlipVertically(boolean) -> setFlipVertically
    int getRotation() -> getRotation
    void setRotation(int) -> setRotation
com.badlogic.gdx.maps.tiled.TiledMapTileSet -> com.badlogic.gdx.maps.tiled.TiledMapTileSet:
    java.lang.String name -> name
    com.badlogic.gdx.utils.IntMap tiles -> tiles
    com.badlogic.gdx.maps.MapProperties properties -> properties
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    com.badlogic.gdx.maps.MapProperties getProperties() -> getProperties
    com.badlogic.gdx.maps.tiled.TiledMapTile getTile(int) -> getTile
    java.util.Iterator iterator() -> iterator
    void putTile(int,com.badlogic.gdx.maps.tiled.TiledMapTile) -> putTile
    void removeTile(int) -> removeTile
    int size() -> size
com.badlogic.gdx.maps.tiled.TiledMapTileSets -> com.badlogic.gdx.maps.tiled.TiledMapTileSets:
    com.badlogic.gdx.utils.Array tilesets -> tilesets
    com.badlogic.gdx.maps.tiled.TiledMapTileSet getTileSet(int) -> getTileSet
    com.badlogic.gdx.maps.tiled.TiledMapTileSet getTileSet(java.lang.String) -> getTileSet
    void addTileSet(com.badlogic.gdx.maps.tiled.TiledMapTileSet) -> addTileSet
    void removeTileSet(int) -> removeTileSet
    void removeTileSet(com.badlogic.gdx.maps.tiled.TiledMapTileSet) -> removeTileSet
    com.badlogic.gdx.maps.tiled.TiledMapTile getTile(int) -> getTile
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.maps.tiled.TmxMapLoader -> com.badlogic.gdx.maps.tiled.TmxMapLoader:
    com.badlogic.gdx.maps.tiled.TiledMap load(java.lang.String) -> load
    com.badlogic.gdx.maps.tiled.TiledMap load(java.lang.String,com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters) -> load
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters) -> loadAsync
    com.badlogic.gdx.maps.tiled.TiledMap loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters) -> loadSync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters) -> getDependencies
    com.badlogic.gdx.maps.tiled.TiledMap loadTilemap(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver) -> loadTilemap
    com.badlogic.gdx.utils.Array loadTilesets(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle) -> loadTilesets
    void loadTileSet(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver) -> loadTileSet
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters -> com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters:
com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer -> com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer:
    com.badlogic.gdx.maps.tiled.TiledMap map -> map
    float unitScale -> unitScale
    com.badlogic.gdx.graphics.g2d.Batch batch -> batch
    com.badlogic.gdx.math.Rectangle viewBounds -> viewBounds
    boolean ownsBatch -> ownsBatch
    float[] vertices -> vertices
    com.badlogic.gdx.maps.tiled.TiledMap getMap() -> getMap
    void setMap(com.badlogic.gdx.maps.tiled.TiledMap) -> setMap
    float getUnitScale() -> getUnitScale
    com.badlogic.gdx.graphics.g2d.Batch getBatch() -> getBatch
    com.badlogic.gdx.math.Rectangle getViewBounds() -> getViewBounds
    void setView(com.badlogic.gdx.graphics.OrthographicCamera) -> setView
    void setView(com.badlogic.gdx.math.Matrix4,float,float,float,float) -> setView
    void render() -> render
    void render(int[]) -> render
    void renderObjects(com.badlogic.gdx.maps.MapLayer) -> renderObjects
    void renderObject(com.badlogic.gdx.maps.MapObject) -> renderObject
    void beginRender() -> beginRender
    void endRender() -> endRender
    void dispose() -> dispose
com.badlogic.gdx.maps.tiled.renderers.HexagonalTiledMapRenderer -> com.badlogic.gdx.maps.tiled.renderers.HexagonalTiledMapRenderer:
    void renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer) -> renderTileLayer
com.badlogic.gdx.maps.tiled.renderers.IsometricStaggeredTiledMapRenderer -> com.badlogic.gdx.maps.tiled.renderers.IsometricStaggeredTiledMapRenderer:
    void renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer) -> renderTileLayer
com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer -> com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer:
    com.badlogic.gdx.math.Matrix4 isoTransform -> isoTransform
    com.badlogic.gdx.math.Matrix4 invIsotransform -> invIsotransform
    com.badlogic.gdx.math.Vector3 screenPos -> screenPos
    com.badlogic.gdx.math.Vector2 topRight -> topRight
    com.badlogic.gdx.math.Vector2 bottomLeft -> bottomLeft
    com.badlogic.gdx.math.Vector2 topLeft -> topLeft
    com.badlogic.gdx.math.Vector2 bottomRight -> bottomRight
    void init() -> init
    com.badlogic.gdx.math.Vector3 translateScreenToIso(com.badlogic.gdx.math.Vector2) -> translateScreenToIso
    void renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer) -> renderTileLayer
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer -> com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer:
    float tolerance -> tolerance
    com.badlogic.gdx.maps.tiled.TiledMap map -> map
    com.badlogic.gdx.graphics.g2d.SpriteCache spriteCache -> spriteCache
    float[] vertices -> vertices
    boolean blending -> blending
    float unitScale -> unitScale
    com.badlogic.gdx.math.Rectangle viewBounds -> viewBounds
    com.badlogic.gdx.math.Rectangle cacheBounds -> cacheBounds
    float overCache -> overCache
    float maxTileWidth -> maxTileWidth
    float maxTileHeight -> maxTileHeight
    boolean cached -> cached
    int count -> count
    boolean canCacheMoreN -> canCacheMoreN
    boolean canCacheMoreE -> canCacheMoreE
    boolean canCacheMoreW -> canCacheMoreW
    boolean canCacheMoreS -> canCacheMoreS
    void setView(com.badlogic.gdx.graphics.OrthographicCamera) -> setView
    void setView(com.badlogic.gdx.math.Matrix4,float,float,float,float) -> setView
    void render() -> render
    void render(int[]) -> render
    void renderObjects(com.badlogic.gdx.maps.MapLayer) -> renderObjects
    void renderObject(com.badlogic.gdx.maps.MapObject) -> renderObject
    void renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer) -> renderTileLayer
    void invalidateCache() -> invalidateCache
    boolean isCached() -> isCached
    void setOverCache(float) -> setOverCache
    void setMaxTileSize(float,float) -> setMaxTileSize
    void setBlending(boolean) -> setBlending
    com.badlogic.gdx.graphics.g2d.SpriteCache getSpriteCache() -> getSpriteCache
    void dispose() -> dispose
com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer -> com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer:
    void renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer) -> renderTileLayer
com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile -> com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile:
    long lastTiledMapRenderTime -> lastTiledMapRenderTime
    int id -> id
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode blendMode -> blendMode
    com.badlogic.gdx.maps.MapProperties properties -> properties
    com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile[] frameTiles -> frameTiles
    int[] animationIntervals -> animationIntervals
    int frameCount -> frameCount
    int loopDuration -> loopDuration
    long initialTimeOffset -> initialTimeOffset
    int getId() -> getId
    void setId(int) -> setId
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode getBlendMode() -> getBlendMode
    void setBlendMode(com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode) -> setBlendMode
    com.badlogic.gdx.maps.tiled.TiledMapTile getCurrentFrame() -> getCurrentFrame
    com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion() -> getTextureRegion
    void setTextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion) -> setTextureRegion
    float getOffsetX() -> getOffsetX
    void setOffsetX(float) -> setOffsetX
    float getOffsetY() -> getOffsetY
    void setOffsetY(float) -> setOffsetY
    com.badlogic.gdx.maps.MapProperties getProperties() -> getProperties
    void updateAnimationBaseTime() -> updateAnimationBaseTime
com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile -> com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile:
    int id -> id
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode blendMode -> blendMode
    com.badlogic.gdx.maps.MapProperties properties -> properties
    com.badlogic.gdx.graphics.g2d.TextureRegion textureRegion -> textureRegion
    float offsetX -> offsetX
    float offsetY -> offsetY
    int getId() -> getId
    void setId(int) -> setId
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode getBlendMode() -> getBlendMode
    void setBlendMode(com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode) -> setBlendMode
    com.badlogic.gdx.maps.MapProperties getProperties() -> getProperties
    com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion() -> getTextureRegion
    void setTextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion) -> setTextureRegion
    float getOffsetX() -> getOffsetX
    void setOffsetX(float) -> setOffsetX
    float getOffsetY() -> getOffsetY
    void setOffsetY(float) -> setOffsetY
com.badlogic.gdx.math.Affine2 -> com.badlogic.gdx.math.Affine2:
    long serialVersionUID -> serialVersionUID
    float m00 -> m00
    float m01 -> m01
    float m02 -> m02
    float m10 -> m10
    float m11 -> m11
    float m12 -> m12
    com.badlogic.gdx.math.Affine2 idt() -> idt
    com.badlogic.gdx.math.Affine2 set(com.badlogic.gdx.math.Affine2) -> set
    com.badlogic.gdx.math.Affine2 set(com.badlogic.gdx.math.Matrix3) -> set
    com.badlogic.gdx.math.Affine2 set(com.badlogic.gdx.math.Matrix4) -> set
    com.badlogic.gdx.math.Affine2 setToTranslation(float,float) -> setToTranslation
    com.badlogic.gdx.math.Affine2 setToTranslation(com.badlogic.gdx.math.Vector2) -> setToTranslation
    com.badlogic.gdx.math.Affine2 setToScaling(float,float) -> setToScaling
    com.badlogic.gdx.math.Affine2 setToScaling(com.badlogic.gdx.math.Vector2) -> setToScaling
    com.badlogic.gdx.math.Affine2 setToRotation(float) -> setToRotation
    com.badlogic.gdx.math.Affine2 setToRotationRad(float) -> setToRotationRad
    com.badlogic.gdx.math.Affine2 setToRotation(float,float) -> setToRotation
    com.badlogic.gdx.math.Affine2 setToShearing(float,float) -> setToShearing
    com.badlogic.gdx.math.Affine2 setToShearing(com.badlogic.gdx.math.Vector2) -> setToShearing
    com.badlogic.gdx.math.Affine2 setToTrnRotScl(float,float,float,float,float) -> setToTrnRotScl
    com.badlogic.gdx.math.Affine2 setToTrnRotScl(com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.math.Vector2) -> setToTrnRotScl
    com.badlogic.gdx.math.Affine2 setToTrnRotRadScl(float,float,float,float,float) -> setToTrnRotRadScl
    com.badlogic.gdx.math.Affine2 setToTrnRotRadScl(com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.math.Vector2) -> setToTrnRotRadScl
    com.badlogic.gdx.math.Affine2 setToTrnScl(float,float,float,float) -> setToTrnScl
    com.badlogic.gdx.math.Affine2 setToTrnScl(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> setToTrnScl
    com.badlogic.gdx.math.Affine2 setToProduct(com.badlogic.gdx.math.Affine2,com.badlogic.gdx.math.Affine2) -> setToProduct
    com.badlogic.gdx.math.Affine2 inv() -> inv
    com.badlogic.gdx.math.Affine2 mul(com.badlogic.gdx.math.Affine2) -> mul
    com.badlogic.gdx.math.Affine2 preMul(com.badlogic.gdx.math.Affine2) -> preMul
    com.badlogic.gdx.math.Affine2 translate(float,float) -> translate
    com.badlogic.gdx.math.Affine2 translate(com.badlogic.gdx.math.Vector2) -> translate
    com.badlogic.gdx.math.Affine2 preTranslate(float,float) -> preTranslate
    com.badlogic.gdx.math.Affine2 preTranslate(com.badlogic.gdx.math.Vector2) -> preTranslate
    com.badlogic.gdx.math.Affine2 scale(float,float) -> scale
    com.badlogic.gdx.math.Affine2 scale(com.badlogic.gdx.math.Vector2) -> scale
    com.badlogic.gdx.math.Affine2 preScale(float,float) -> preScale
    com.badlogic.gdx.math.Affine2 preScale(com.badlogic.gdx.math.Vector2) -> preScale
    com.badlogic.gdx.math.Affine2 rotate(float) -> rotate
    com.badlogic.gdx.math.Affine2 rotateRad(float) -> rotateRad
    com.badlogic.gdx.math.Affine2 preRotate(float) -> preRotate
    com.badlogic.gdx.math.Affine2 preRotateRad(float) -> preRotateRad
    com.badlogic.gdx.math.Affine2 shear(float,float) -> shear
    com.badlogic.gdx.math.Affine2 shear(com.badlogic.gdx.math.Vector2) -> shear
    com.badlogic.gdx.math.Affine2 preShear(float,float) -> preShear
    com.badlogic.gdx.math.Affine2 preShear(com.badlogic.gdx.math.Vector2) -> preShear
    float det() -> det
    com.badlogic.gdx.math.Vector2 getTranslation(com.badlogic.gdx.math.Vector2) -> getTranslation
    boolean isTranslation() -> isTranslation
    boolean isIdt() -> isIdt
    void applyTo(com.badlogic.gdx.math.Vector2) -> applyTo
    java.lang.String toString() -> toString
com.badlogic.gdx.math.BSpline -> com.badlogic.gdx.math.BSpline:
    float d6 -> d6
    com.badlogic.gdx.math.Vector[] controlPoints -> controlPoints
    com.badlogic.gdx.utils.Array knots -> knots
    int degree -> degree
    boolean continuous -> continuous
    int spanCount -> spanCount
    com.badlogic.gdx.math.Vector tmp -> tmp
    com.badlogic.gdx.math.Vector tmp2 -> tmp2
    com.badlogic.gdx.math.Vector tmp3 -> tmp3
    com.badlogic.gdx.math.Vector cubic(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector) -> cubic
    com.badlogic.gdx.math.Vector cubic_derivative(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector) -> cubic_derivative
    com.badlogic.gdx.math.Vector cubic(com.badlogic.gdx.math.Vector,int,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector) -> cubic
    com.badlogic.gdx.math.Vector cubic_derivative(com.badlogic.gdx.math.Vector,int,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector) -> cubic_derivative
    com.badlogic.gdx.math.Vector calculate(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector[],int,boolean,com.badlogic.gdx.math.Vector) -> calculate
    com.badlogic.gdx.math.Vector derivative(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector[],int,boolean,com.badlogic.gdx.math.Vector) -> derivative
    com.badlogic.gdx.math.Vector calculate(com.badlogic.gdx.math.Vector,int,float,com.badlogic.gdx.math.Vector[],int,boolean,com.badlogic.gdx.math.Vector) -> calculate
    com.badlogic.gdx.math.Vector derivative(com.badlogic.gdx.math.Vector,int,float,com.badlogic.gdx.math.Vector[],int,boolean,com.badlogic.gdx.math.Vector) -> derivative
    com.badlogic.gdx.math.BSpline set(com.badlogic.gdx.math.Vector[],int,boolean) -> set
    com.badlogic.gdx.math.Vector valueAt(com.badlogic.gdx.math.Vector,float) -> valueAt
    com.badlogic.gdx.math.Vector valueAt(com.badlogic.gdx.math.Vector,int,float) -> valueAt
    com.badlogic.gdx.math.Vector derivativeAt(com.badlogic.gdx.math.Vector,float) -> derivativeAt
    com.badlogic.gdx.math.Vector derivativeAt(com.badlogic.gdx.math.Vector,int,float) -> derivativeAt
    int nearest(com.badlogic.gdx.math.Vector) -> nearest
    int nearest(com.badlogic.gdx.math.Vector,int,int) -> nearest
    float approximate(com.badlogic.gdx.math.Vector) -> approximate
    float approximate(com.badlogic.gdx.math.Vector,int,int) -> approximate
    float approximate(com.badlogic.gdx.math.Vector,int) -> approximate
    float locate(com.badlogic.gdx.math.Vector) -> locate
    float approxLength(int) -> approxLength
    float locate(java.lang.Object) -> locate
    float approximate(java.lang.Object) -> approximate
    java.lang.Object valueAt(java.lang.Object,float) -> valueAt
    java.lang.Object derivativeAt(java.lang.Object,float) -> derivativeAt
com.badlogic.gdx.math.Bezier -> com.badlogic.gdx.math.Bezier:
    com.badlogic.gdx.utils.Array points -> points
    com.badlogic.gdx.math.Vector tmp -> tmp
    com.badlogic.gdx.math.Vector tmp2 -> tmp2
    com.badlogic.gdx.math.Vector tmp3 -> tmp3
    com.badlogic.gdx.math.Vector linear(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector) -> linear
    com.badlogic.gdx.math.Vector linear_derivative(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector) -> linear_derivative
    com.badlogic.gdx.math.Vector quadratic(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector) -> quadratic
    com.badlogic.gdx.math.Vector quadratic_derivative(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector) -> quadratic_derivative
    com.badlogic.gdx.math.Vector cubic(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector) -> cubic
    com.badlogic.gdx.math.Vector cubic_derivative(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector) -> cubic_derivative
    com.badlogic.gdx.math.Bezier set(com.badlogic.gdx.math.Vector[]) -> set
    com.badlogic.gdx.math.Bezier set(com.badlogic.gdx.math.Vector[],int,int) -> set
    com.badlogic.gdx.math.Bezier set(com.badlogic.gdx.utils.Array,int,int) -> set
    com.badlogic.gdx.math.Vector valueAt(com.badlogic.gdx.math.Vector,float) -> valueAt
    com.badlogic.gdx.math.Vector derivativeAt(com.badlogic.gdx.math.Vector,float) -> derivativeAt
    float approximate(com.badlogic.gdx.math.Vector) -> approximate
    float locate(com.badlogic.gdx.math.Vector) -> locate
    float approxLength(int) -> approxLength
    float locate(java.lang.Object) -> locate
    float approximate(java.lang.Object) -> approximate
    java.lang.Object valueAt(java.lang.Object,float) -> valueAt
    java.lang.Object derivativeAt(java.lang.Object,float) -> derivativeAt
com.badlogic.gdx.math.Bresenham2 -> com.badlogic.gdx.math.Bresenham2:
    com.badlogic.gdx.utils.Array points -> points
    com.badlogic.gdx.utils.Pool pool -> pool
    com.badlogic.gdx.utils.Array line(com.badlogic.gdx.math.GridPoint2,com.badlogic.gdx.math.GridPoint2) -> line
    com.badlogic.gdx.utils.Array line(int,int,int,int) -> line
    com.badlogic.gdx.utils.Array line(int,int,int,int,com.badlogic.gdx.utils.Pool,com.badlogic.gdx.utils.Array) -> line
com.badlogic.gdx.math.Bresenham2$1 -> com.badlogic.gdx.math.Bresenham2$1:
    com.badlogic.gdx.math.Bresenham2 this$0 -> this$0
    com.badlogic.gdx.math.GridPoint2 newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.math.CatmullRomSpline -> com.badlogic.gdx.math.CatmullRomSpline:
    com.badlogic.gdx.math.Vector[] controlPoints -> controlPoints
    boolean continuous -> continuous
    int spanCount -> spanCount
    com.badlogic.gdx.math.Vector tmp -> tmp
    com.badlogic.gdx.math.Vector tmp2 -> tmp2
    com.badlogic.gdx.math.Vector tmp3 -> tmp3
    com.badlogic.gdx.math.Vector calculate(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector) -> calculate
    com.badlogic.gdx.math.Vector calculate(com.badlogic.gdx.math.Vector,int,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector) -> calculate
    com.badlogic.gdx.math.Vector derivative(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector) -> derivative
    com.badlogic.gdx.math.Vector derivative(com.badlogic.gdx.math.Vector,int,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector) -> derivative
    com.badlogic.gdx.math.CatmullRomSpline set(com.badlogic.gdx.math.Vector[],boolean) -> set
    com.badlogic.gdx.math.Vector valueAt(com.badlogic.gdx.math.Vector,float) -> valueAt
    com.badlogic.gdx.math.Vector valueAt(com.badlogic.gdx.math.Vector,int,float) -> valueAt
    com.badlogic.gdx.math.Vector derivativeAt(com.badlogic.gdx.math.Vector,float) -> derivativeAt
    com.badlogic.gdx.math.Vector derivativeAt(com.badlogic.gdx.math.Vector,int,float) -> derivativeAt
    int nearest(com.badlogic.gdx.math.Vector) -> nearest
    int nearest(com.badlogic.gdx.math.Vector,int,int) -> nearest
    float approximate(com.badlogic.gdx.math.Vector) -> approximate
    float approximate(com.badlogic.gdx.math.Vector,int,int) -> approximate
    float approximate(com.badlogic.gdx.math.Vector,int) -> approximate
    float locate(com.badlogic.gdx.math.Vector) -> locate
    float approxLength(int) -> approxLength
    float locate(java.lang.Object) -> locate
    float approximate(java.lang.Object) -> approximate
    java.lang.Object valueAt(java.lang.Object,float) -> valueAt
    java.lang.Object derivativeAt(java.lang.Object,float) -> derivativeAt
com.badlogic.gdx.math.Circle -> com.badlogic.gdx.math.Circle:
    float x -> x
    float y -> y
    float radius -> radius
    void set(float,float,float) -> set
    void set(com.badlogic.gdx.math.Vector2,float) -> set
    void set(com.badlogic.gdx.math.Circle) -> set
    void set(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> set
    void setPosition(com.badlogic.gdx.math.Vector2) -> setPosition
    void setPosition(float,float) -> setPosition
    void setX(float) -> setX
    void setY(float) -> setY
    void setRadius(float) -> setRadius
    boolean contains(float,float) -> contains
    boolean contains(com.badlogic.gdx.math.Vector2) -> contains
    boolean contains(com.badlogic.gdx.math.Circle) -> contains
    boolean overlaps(com.badlogic.gdx.math.Circle) -> overlaps
    java.lang.String toString() -> toString
    float circumference() -> circumference
    float area() -> area
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.badlogic.gdx.math.ConvexHull -> com.badlogic.gdx.math.ConvexHull:
    com.badlogic.gdx.utils.IntArray quicksortStack -> quicksortStack
    float[] sortedPoints -> sortedPoints
    com.badlogic.gdx.utils.FloatArray hull -> hull
    com.badlogic.gdx.utils.IntArray indices -> indices
    com.badlogic.gdx.utils.ShortArray originalIndices -> originalIndices
    com.badlogic.gdx.utils.FloatArray computePolygon(com.badlogic.gdx.utils.FloatArray,boolean) -> computePolygon
    com.badlogic.gdx.utils.FloatArray computePolygon(float[],boolean) -> computePolygon
    com.badlogic.gdx.utils.FloatArray computePolygon(float[],int,int,boolean) -> computePolygon
    com.badlogic.gdx.utils.IntArray computeIndices(com.badlogic.gdx.utils.FloatArray,boolean,boolean) -> computeIndices
    com.badlogic.gdx.utils.IntArray computeIndices(float[],boolean,boolean) -> computeIndices
    com.badlogic.gdx.utils.IntArray computeIndices(float[],int,int,boolean,boolean) -> computeIndices
    float ccw(float,float) -> ccw
    void sort(float[],int) -> sort
    int quicksortPartition(float[],int,int) -> quicksortPartition
    void sortWithIndices(float[],int,boolean) -> sortWithIndices
    int quicksortPartitionWithIndices(float[],int,int,boolean,short[]) -> quicksortPartitionWithIndices
com.badlogic.gdx.math.CumulativeDistribution -> com.badlogic.gdx.math.CumulativeDistribution:
    com.badlogic.gdx.utils.Array values -> values
    void add(java.lang.Object,float) -> add
    void add(java.lang.Object) -> add
    void generate() -> generate
    void generateNormalized() -> generateNormalized
    void generateUniform() -> generateUniform
    java.lang.Object value(float) -> value
    java.lang.Object value() -> value
    int size() -> size
    float getInterval(int) -> getInterval
    java.lang.Object getValue(int) -> getValue
    void setInterval(java.lang.Object,float) -> setInterval
    void setInterval(int,float) -> setInterval
    void clear() -> clear
com.badlogic.gdx.math.CumulativeDistribution$CumulativeValue -> com.badlogic.gdx.math.CumulativeDistribution$CumulativeValue:
    java.lang.Object value -> value
    float frequency -> frequency
    float interval -> interval
    com.badlogic.gdx.math.CumulativeDistribution this$0 -> this$0
com.badlogic.gdx.math.DelaunayTriangulator -> com.badlogic.gdx.math.DelaunayTriangulator:
    float EPSILON -> EPSILON
    int INSIDE -> INSIDE
    int COMPLETE -> COMPLETE
    int INCOMPLETE -> INCOMPLETE
    com.badlogic.gdx.utils.IntArray quicksortStack -> quicksortStack
    float[] sortedPoints -> sortedPoints
    com.badlogic.gdx.utils.ShortArray triangles -> triangles
    com.badlogic.gdx.utils.ShortArray originalIndices -> originalIndices
    com.badlogic.gdx.utils.IntArray edges -> edges
    com.badlogic.gdx.utils.BooleanArray complete -> complete
    float[] superTriangle -> superTriangle
    com.badlogic.gdx.math.Vector2 centroid -> centroid
    com.badlogic.gdx.utils.ShortArray computeTriangles(com.badlogic.gdx.utils.FloatArray,boolean) -> computeTriangles
    com.badlogic.gdx.utils.ShortArray computeTriangles(float[],boolean) -> computeTriangles
    com.badlogic.gdx.utils.ShortArray computeTriangles(float[],int,int,boolean) -> computeTriangles
    int circumCircle(float,float,float,float,float,float,float,float) -> circumCircle
    void sort(float[],int) -> sort
    int quicksortPartition(float[],int,int,short[]) -> quicksortPartition
    void trim(com.badlogic.gdx.utils.ShortArray,float[],float[],int,int) -> trim
com.badlogic.gdx.math.EarClippingTriangulator -> com.badlogic.gdx.math.EarClippingTriangulator:
    int CONCAVE -> CONCAVE
    int TANGENTIAL -> TANGENTIAL
    int CONVEX -> CONVEX
    com.badlogic.gdx.utils.ShortArray indicesArray -> indicesArray
    short[] indices -> indices
    float[] vertices -> vertices
    int vertexCount -> vertexCount
    com.badlogic.gdx.utils.IntArray vertexTypes -> vertexTypes
    com.badlogic.gdx.utils.ShortArray triangles -> triangles
    com.badlogic.gdx.utils.ShortArray computeTriangles(com.badlogic.gdx.utils.FloatArray) -> computeTriangles
    com.badlogic.gdx.utils.ShortArray computeTriangles(float[]) -> computeTriangles
    com.badlogic.gdx.utils.ShortArray computeTriangles(float[],int,int) -> computeTriangles
    void triangulate() -> triangulate
    int classifyVertex(int) -> classifyVertex
    int findEarTip() -> findEarTip
    boolean isEarTip(int) -> isEarTip
    void cutEarTip(int) -> cutEarTip
    int previousIndex(int) -> previousIndex
    int nextIndex(int) -> nextIndex
    boolean areVerticesClockwise(float[],int,int) -> areVerticesClockwise
    int computeSpannedAreaSign(float,float,float,float,float,float) -> computeSpannedAreaSign
com.badlogic.gdx.math.Ellipse -> com.badlogic.gdx.math.Ellipse:
    float x -> x
    float y -> y
    float width -> width
    float height -> height
    long serialVersionUID -> serialVersionUID
    boolean contains(float,float) -> contains
    boolean contains(com.badlogic.gdx.math.Vector2) -> contains
    void set(float,float,float,float) -> set
    void set(com.badlogic.gdx.math.Ellipse) -> set
    void set(com.badlogic.gdx.math.Circle) -> set
    void set(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> set
    com.badlogic.gdx.math.Ellipse setPosition(com.badlogic.gdx.math.Vector2) -> setPosition
    com.badlogic.gdx.math.Ellipse setPosition(float,float) -> setPosition
    com.badlogic.gdx.math.Ellipse setSize(float,float) -> setSize
    float area() -> area
    float circumference() -> circumference
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.badlogic.gdx.math.FloatCounter -> com.badlogic.gdx.math.FloatCounter:
    int count -> count
    float total -> total
    float min -> min
    float max -> max
    float average -> average
    float latest -> latest
    float value -> value
    com.badlogic.gdx.math.WindowedMean mean -> mean
    void put(float) -> put
    void reset() -> reset
com.badlogic.gdx.math.Frustum -> com.badlogic.gdx.math.Frustum:
    com.badlogic.gdx.math.Vector3[] clipSpacePlanePoints -> clipSpacePlanePoints
    float[] clipSpacePlanePointsArray -> clipSpacePlanePointsArray
    com.badlogic.gdx.math.Plane[] planes -> planes
    com.badlogic.gdx.math.Vector3[] planePoints -> planePoints
    float[] planePointsArray -> planePointsArray
    void update(com.badlogic.gdx.math.Matrix4) -> update
    boolean pointInFrustum(com.badlogic.gdx.math.Vector3) -> pointInFrustum
    boolean pointInFrustum(float,float,float) -> pointInFrustum
    boolean sphereInFrustum(com.badlogic.gdx.math.Vector3,float) -> sphereInFrustum
    boolean sphereInFrustum(float,float,float,float) -> sphereInFrustum
    boolean sphereInFrustumWithoutNearFar(com.badlogic.gdx.math.Vector3,float) -> sphereInFrustumWithoutNearFar
    boolean sphereInFrustumWithoutNearFar(float,float,float,float) -> sphereInFrustumWithoutNearFar
    boolean boundsInFrustum(com.badlogic.gdx.math.collision.BoundingBox) -> boundsInFrustum
    boolean boundsInFrustum(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> boundsInFrustum
    boolean boundsInFrustum(float,float,float,float,float,float) -> boundsInFrustum
com.badlogic.gdx.math.GeometryUtils -> com.badlogic.gdx.math.GeometryUtils:
    com.badlogic.gdx.math.Vector2 tmp1 -> tmp1
    com.badlogic.gdx.math.Vector2 tmp2 -> tmp2
    com.badlogic.gdx.math.Vector2 tmp3 -> tmp3
    com.badlogic.gdx.math.Vector2 toBarycoord(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> toBarycoord
    boolean barycoordInsideTriangle(com.badlogic.gdx.math.Vector2) -> barycoordInsideTriangle
    com.badlogic.gdx.math.Vector2 fromBarycoord(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> fromBarycoord
    float fromBarycoord(com.badlogic.gdx.math.Vector2,float,float,float) -> fromBarycoord
    float lowestPositiveRoot(float,float,float) -> lowestPositiveRoot
    boolean colinear(float,float,float,float,float,float) -> colinear
    com.badlogic.gdx.math.Vector2 triangleCentroid(float,float,float,float,float,float,com.badlogic.gdx.math.Vector2) -> triangleCentroid
    com.badlogic.gdx.math.Vector2 triangleCircumcenter(float,float,float,float,float,float,com.badlogic.gdx.math.Vector2) -> triangleCircumcenter
    float triangleArea(float,float,float,float,float,float) -> triangleArea
    com.badlogic.gdx.math.Vector2 quadrilateralCentroid(float,float,float,float,float,float,float,float,com.badlogic.gdx.math.Vector2) -> quadrilateralCentroid
    com.badlogic.gdx.math.Vector2 polygonCentroid(float[],int,int,com.badlogic.gdx.math.Vector2) -> polygonCentroid
    float polygonArea(float[],int,int) -> polygonArea
    void ensureCCW(float[]) -> ensureCCW
    boolean areVerticesClockwise(float[],int,int) -> areVerticesClockwise
com.badlogic.gdx.math.GridPoint2 -> com.badlogic.gdx.math.GridPoint2:
    int x -> x
    int y -> y
    com.badlogic.gdx.math.GridPoint2 set(com.badlogic.gdx.math.GridPoint2) -> set
    com.badlogic.gdx.math.GridPoint2 set(int,int) -> set
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.badlogic.gdx.math.GridPoint3 -> com.badlogic.gdx.math.GridPoint3:
    int x -> x
    int y -> y
    int z -> z
    com.badlogic.gdx.math.GridPoint3 set(com.badlogic.gdx.math.GridPoint3) -> set
    com.badlogic.gdx.math.GridPoint3 set(int,int,int) -> set
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.badlogic.gdx.math.Interpolation -> com.badlogic.gdx.math.Interpolation:
    com.badlogic.gdx.math.Interpolation linear -> linear
    com.badlogic.gdx.math.Interpolation fade -> fade
    com.badlogic.gdx.math.Interpolation$Pow pow2 -> pow2
    com.badlogic.gdx.math.Interpolation$PowIn pow2In -> pow2In
    com.badlogic.gdx.math.Interpolation$PowOut pow2Out -> pow2Out
    com.badlogic.gdx.math.Interpolation$Pow pow3 -> pow3
    com.badlogic.gdx.math.Interpolation$PowIn pow3In -> pow3In
    com.badlogic.gdx.math.Interpolation$PowOut pow3Out -> pow3Out
    com.badlogic.gdx.math.Interpolation$Pow pow4 -> pow4
    com.badlogic.gdx.math.Interpolation$PowIn pow4In -> pow4In
    com.badlogic.gdx.math.Interpolation$PowOut pow4Out -> pow4Out
    com.badlogic.gdx.math.Interpolation$Pow pow5 -> pow5
    com.badlogic.gdx.math.Interpolation$PowIn pow5In -> pow5In
    com.badlogic.gdx.math.Interpolation$PowOut pow5Out -> pow5Out
    com.badlogic.gdx.math.Interpolation sine -> sine
    com.badlogic.gdx.math.Interpolation sineIn -> sineIn
    com.badlogic.gdx.math.Interpolation sineOut -> sineOut
    com.badlogic.gdx.math.Interpolation exp10 -> exp10
    com.badlogic.gdx.math.Interpolation exp10In -> exp10In
    com.badlogic.gdx.math.Interpolation exp10Out -> exp10Out
    com.badlogic.gdx.math.Interpolation exp5 -> exp5
    com.badlogic.gdx.math.Interpolation exp5In -> exp5In
    com.badlogic.gdx.math.Interpolation exp5Out -> exp5Out
    com.badlogic.gdx.math.Interpolation circle -> circle
    com.badlogic.gdx.math.Interpolation circleIn -> circleIn
    com.badlogic.gdx.math.Interpolation circleOut -> circleOut
    com.badlogic.gdx.math.Interpolation$Elastic elastic -> elastic
    com.badlogic.gdx.math.Interpolation$Elastic elasticIn -> elasticIn
    com.badlogic.gdx.math.Interpolation$Elastic elasticOut -> elasticOut
    com.badlogic.gdx.math.Interpolation swing -> swing
    com.badlogic.gdx.math.Interpolation swingIn -> swingIn
    com.badlogic.gdx.math.Interpolation swingOut -> swingOut
    com.badlogic.gdx.math.Interpolation bounce -> bounce
    com.badlogic.gdx.math.Interpolation bounceIn -> bounceIn
    com.badlogic.gdx.math.Interpolation bounceOut -> bounceOut
    float apply(float) -> apply
    float apply(float,float,float) -> apply
com.badlogic.gdx.math.Interpolation$1 -> com.badlogic.gdx.math.Interpolation$1:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$2 -> com.badlogic.gdx.math.Interpolation$2:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$3 -> com.badlogic.gdx.math.Interpolation$3:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$4 -> com.badlogic.gdx.math.Interpolation$4:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$5 -> com.badlogic.gdx.math.Interpolation$5:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$6 -> com.badlogic.gdx.math.Interpolation$6:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$7 -> com.badlogic.gdx.math.Interpolation$7:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$8 -> com.badlogic.gdx.math.Interpolation$8:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$Bounce -> com.badlogic.gdx.math.Interpolation$Bounce:
    float out(float) -> out
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$BounceIn -> com.badlogic.gdx.math.Interpolation$BounceIn:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$BounceOut -> com.badlogic.gdx.math.Interpolation$BounceOut:
    float[] widths -> widths
    float[] heights -> heights
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$Elastic -> com.badlogic.gdx.math.Interpolation$Elastic:
    float value -> value
    float power -> power
    float scale -> scale
    float bounces -> bounces
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$ElasticIn -> com.badlogic.gdx.math.Interpolation$ElasticIn:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$ElasticOut -> com.badlogic.gdx.math.Interpolation$ElasticOut:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$Exp -> com.badlogic.gdx.math.Interpolation$Exp:
    float value -> value
    float power -> power
    float min -> min
    float scale -> scale
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$ExpIn -> com.badlogic.gdx.math.Interpolation$ExpIn:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$ExpOut -> com.badlogic.gdx.math.Interpolation$ExpOut:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$Pow -> com.badlogic.gdx.math.Interpolation$Pow:
    int power -> power
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$PowIn -> com.badlogic.gdx.math.Interpolation$PowIn:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$PowOut -> com.badlogic.gdx.math.Interpolation$PowOut:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$Swing -> com.badlogic.gdx.math.Interpolation$Swing:
    float scale -> scale
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$SwingIn -> com.badlogic.gdx.math.Interpolation$SwingIn:
    float scale -> scale
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$SwingOut -> com.badlogic.gdx.math.Interpolation$SwingOut:
    float scale -> scale
    float apply(float) -> apply
com.badlogic.gdx.math.Intersector -> com.badlogic.gdx.math.Intersector:
    com.badlogic.gdx.math.Vector3 v0 -> v0
    com.badlogic.gdx.math.Vector3 v1 -> v1
    com.badlogic.gdx.math.Vector3 v2 -> v2
    com.badlogic.gdx.math.Plane p -> p
    com.badlogic.gdx.math.Vector3 i -> i
    com.badlogic.gdx.math.Vector3 dir -> dir
    com.badlogic.gdx.math.Vector3 start -> start
    com.badlogic.gdx.math.Vector3 best -> best
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    com.badlogic.gdx.math.Vector3 tmp1 -> tmp1
    com.badlogic.gdx.math.Vector3 tmp2 -> tmp2
    com.badlogic.gdx.math.Vector3 tmp3 -> tmp3
    com.badlogic.gdx.math.Vector2 v2tmp -> v2tmp
    com.badlogic.gdx.math.Vector3 intersection -> intersection
    boolean isPointInTriangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> isPointInTriangle
    boolean isPointInTriangle(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> isPointInTriangle
    boolean isPointInTriangle(float,float,float,float,float,float,float,float) -> isPointInTriangle
    boolean intersectSegmentPlane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3) -> intersectSegmentPlane
    int pointLineSide(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> pointLineSide
    int pointLineSide(float,float,float,float,float,float) -> pointLineSide
    boolean isPointInPolygon(com.badlogic.gdx.utils.Array,com.badlogic.gdx.math.Vector2) -> isPointInPolygon
    boolean isPointInPolygon(float[],int,int,float,float) -> isPointInPolygon
    float distanceLinePoint(float,float,float,float,float,float) -> distanceLinePoint
    float distanceSegmentPoint(float,float,float,float,float,float) -> distanceSegmentPoint
    float distanceSegmentPoint(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> distanceSegmentPoint
    com.badlogic.gdx.math.Vector2 nearestSegmentPoint(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> nearestSegmentPoint
    com.badlogic.gdx.math.Vector2 nearestSegmentPoint(float,float,float,float,float,float,com.badlogic.gdx.math.Vector2) -> nearestSegmentPoint
    boolean intersectSegmentCircle(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float) -> intersectSegmentCircle
    float intersectSegmentCircleDisplace(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.math.Vector2) -> intersectSegmentCircleDisplace
    float intersectRayRay(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> intersectRayRay
    boolean intersectRayPlane(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3) -> intersectRayPlane
    float intersectLinePlane(float,float,float,float,float,float,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3) -> intersectLinePlane
    boolean intersectRayTriangle(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> intersectRayTriangle
    boolean intersectRaySphere(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3) -> intersectRaySphere
    boolean intersectRayBounds(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.collision.BoundingBox,com.badlogic.gdx.math.Vector3) -> intersectRayBounds
    boolean intersectRayBoundsFast(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.collision.BoundingBox) -> intersectRayBoundsFast
    boolean intersectRayBoundsFast(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> intersectRayBoundsFast
    boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,float[],com.badlogic.gdx.math.Vector3) -> intersectRayTriangles
    boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,float[],short[],int,com.badlogic.gdx.math.Vector3) -> intersectRayTriangles
    boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,java.util.List,com.badlogic.gdx.math.Vector3) -> intersectRayTriangles
    boolean intersectLines(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> intersectLines
    boolean intersectLines(float,float,float,float,float,float,float,float,com.badlogic.gdx.math.Vector2) -> intersectLines
    boolean intersectLinePolygon(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Polygon) -> intersectLinePolygon
    boolean intersectRectangles(com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle) -> intersectRectangles
    boolean intersectSegmentPolygon(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Polygon) -> intersectSegmentPolygon
    boolean intersectSegments(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> intersectSegments
    boolean intersectSegments(float,float,float,float,float,float,float,float,com.badlogic.gdx.math.Vector2) -> intersectSegments
    float det(float,float,float,float) -> det
    double detd(double,double,double,double) -> detd
    boolean overlaps(com.badlogic.gdx.math.Circle,com.badlogic.gdx.math.Circle) -> overlaps
    boolean overlaps(com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle) -> overlaps
    boolean overlaps(com.badlogic.gdx.math.Circle,com.badlogic.gdx.math.Rectangle) -> overlaps
    boolean overlapConvexPolygons(com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Polygon) -> overlapConvexPolygons
    boolean overlapConvexPolygons(com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Intersector$MinimumTranslationVector) -> overlapConvexPolygons
    boolean overlapConvexPolygons(float[],float[],com.badlogic.gdx.math.Intersector$MinimumTranslationVector) -> overlapConvexPolygons
    boolean overlapConvexPolygons(float[],int,int,float[],int,int,com.badlogic.gdx.math.Intersector$MinimumTranslationVector) -> overlapConvexPolygons
    void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle) -> splitTriangle
    void splitEdge(float[],int,int,int,com.badlogic.gdx.math.Plane,float[],int) -> splitEdge
    void main(java.lang.String[]) -> main
com.badlogic.gdx.math.Intersector$MinimumTranslationVector -> com.badlogic.gdx.math.Intersector$MinimumTranslationVector:
    com.badlogic.gdx.math.Vector2 normal -> normal
    float depth -> depth
com.badlogic.gdx.math.Intersector$SplitTriangle -> com.badlogic.gdx.math.Intersector$SplitTriangle:
    float[] front -> front
    float[] back -> back
    float[] edgeSplit -> edgeSplit
    int numFront -> numFront
    int numBack -> numBack
    int total -> total
    boolean frontCurrent -> frontCurrent
    int frontOffset -> frontOffset
    int backOffset -> backOffset
    java.lang.String toString() -> toString
    void setSide(boolean) -> setSide
    boolean getSide() -> getSide
    void add(float[],int,int) -> add
    void reset() -> reset
com.badlogic.gdx.math.MathUtils -> com.badlogic.gdx.math.MathUtils:
    float nanoToSec -> nanoToSec
    float FLOAT_ROUNDING_ERROR -> FLOAT_ROUNDING_ERROR
    float PI -> PI
    float PI2 -> PI2
    float E -> E
    int SIN_BITS -> SIN_BITS
    int SIN_MASK -> SIN_MASK
    int SIN_COUNT -> SIN_COUNT
    float radFull -> radFull
    float degFull -> degFull
    float radToIndex -> radToIndex
    float degToIndex -> degToIndex
    float radiansToDegrees -> radiansToDegrees
    float radDeg -> radDeg
    float degreesToRadians -> degreesToRadians
    float degRad -> degRad
    int ATAN2_BITS -> ATAN2_BITS
    int ATAN2_BITS2 -> ATAN2_BITS2
    int ATAN2_MASK -> ATAN2_MASK
    int ATAN2_COUNT -> ATAN2_COUNT
    int ATAN2_DIM -> ATAN2_DIM
    float INV_ATAN2_DIM_MINUS_1 -> INV_ATAN2_DIM_MINUS_1
    java.util.Random random -> random
    int BIG_ENOUGH_INT -> BIG_ENOUGH_INT
    double BIG_ENOUGH_FLOOR -> BIG_ENOUGH_FLOOR
    double CEIL -> CEIL
    double BIG_ENOUGH_CEIL -> BIG_ENOUGH_CEIL
    double BIG_ENOUGH_ROUND -> BIG_ENOUGH_ROUND
    float sin(float) -> sin
    float cos(float) -> cos
    float sinDeg(float) -> sinDeg
    float cosDeg(float) -> cosDeg
    float atan2(float,float) -> atan2
    int random(int) -> random
    int random(int,int) -> random
    long random(long) -> random
    long random(long,long) -> random
    boolean randomBoolean() -> randomBoolean
    boolean randomBoolean(float) -> randomBoolean
    float random() -> random
    float random(float) -> random
    float random(float,float) -> random
    int randomSign() -> randomSign
    float randomTriangular() -> randomTriangular
    float randomTriangular(float) -> randomTriangular
    float randomTriangular(float,float) -> randomTriangular
    float randomTriangular(float,float,float) -> randomTriangular
    int nextPowerOfTwo(int) -> nextPowerOfTwo
    boolean isPowerOfTwo(int) -> isPowerOfTwo
    int clamp(int,int,int) -> clamp
    short clamp(short,short,short) -> clamp
    float clamp(float,float,float) -> clamp
    long clamp(long,long,long) -> clamp
    float lerp(float,float,float) -> lerp
    int floor(float) -> floor
    int floorPositive(float) -> floorPositive
    int ceil(float) -> ceil
    int ceilPositive(float) -> ceilPositive
    int round(float) -> round
    int roundPositive(float) -> roundPositive
    boolean isZero(float) -> isZero
    boolean isZero(float,float) -> isZero
    boolean isEqual(float,float) -> isEqual
    boolean isEqual(float,float,float) -> isEqual
    float log(float,float) -> log
    float log2(float) -> log2
com.badlogic.gdx.math.MathUtils$Atan2 -> com.badlogic.gdx.math.MathUtils$Atan2:
    float[] table -> table
com.badlogic.gdx.math.MathUtils$Sin -> com.badlogic.gdx.math.MathUtils$Sin:
    float[] table -> table
com.badlogic.gdx.math.Matrix3 -> com.badlogic.gdx.math.Matrix3:
    long serialVersionUID -> serialVersionUID
    int M00 -> M00
    int M01 -> M01
    int M02 -> M02
    int M10 -> M10
    int M11 -> M11
    int M12 -> M12
    int M20 -> M20
    int M21 -> M21
    int M22 -> M22
    float[] val -> val
    float[] tmp -> tmp
    com.badlogic.gdx.math.Matrix3 idt() -> idt
    com.badlogic.gdx.math.Matrix3 mul(com.badlogic.gdx.math.Matrix3) -> mul
    com.badlogic.gdx.math.Matrix3 mulLeft(com.badlogic.gdx.math.Matrix3) -> mulLeft
    com.badlogic.gdx.math.Matrix3 setToRotation(float) -> setToRotation
    com.badlogic.gdx.math.Matrix3 setToRotationRad(float) -> setToRotationRad
    com.badlogic.gdx.math.Matrix3 setToRotation(com.badlogic.gdx.math.Vector3,float) -> setToRotation
    com.badlogic.gdx.math.Matrix3 setToRotation(com.badlogic.gdx.math.Vector3,float,float) -> setToRotation
    com.badlogic.gdx.math.Matrix3 setToTranslation(float,float) -> setToTranslation
    com.badlogic.gdx.math.Matrix3 setToTranslation(com.badlogic.gdx.math.Vector2) -> setToTranslation
    com.badlogic.gdx.math.Matrix3 setToScaling(float,float) -> setToScaling
    com.badlogic.gdx.math.Matrix3 setToScaling(com.badlogic.gdx.math.Vector2) -> setToScaling
    java.lang.String toString() -> toString
    float det() -> det
    com.badlogic.gdx.math.Matrix3 inv() -> inv
    com.badlogic.gdx.math.Matrix3 set(com.badlogic.gdx.math.Matrix3) -> set
    com.badlogic.gdx.math.Matrix3 set(com.badlogic.gdx.math.Affine2) -> set
    com.badlogic.gdx.math.Matrix3 set(com.badlogic.gdx.math.Matrix4) -> set
    com.badlogic.gdx.math.Matrix3 set(float[]) -> set
    com.badlogic.gdx.math.Matrix3 trn(com.badlogic.gdx.math.Vector2) -> trn
    com.badlogic.gdx.math.Matrix3 trn(float,float) -> trn
    com.badlogic.gdx.math.Matrix3 trn(com.badlogic.gdx.math.Vector3) -> trn
    com.badlogic.gdx.math.Matrix3 translate(float,float) -> translate
    com.badlogic.gdx.math.Matrix3 translate(com.badlogic.gdx.math.Vector2) -> translate
    com.badlogic.gdx.math.Matrix3 rotate(float) -> rotate
    com.badlogic.gdx.math.Matrix3 rotateRad(float) -> rotateRad
    com.badlogic.gdx.math.Matrix3 scale(float,float) -> scale
    com.badlogic.gdx.math.Matrix3 scale(com.badlogic.gdx.math.Vector2) -> scale
    float[] getValues() -> getValues
    com.badlogic.gdx.math.Vector2 getTranslation(com.badlogic.gdx.math.Vector2) -> getTranslation
    com.badlogic.gdx.math.Vector2 getScale(com.badlogic.gdx.math.Vector2) -> getScale
    float getRotation() -> getRotation
    float getRotationRad() -> getRotationRad
    com.badlogic.gdx.math.Matrix3 scl(float) -> scl
    com.badlogic.gdx.math.Matrix3 scl(com.badlogic.gdx.math.Vector2) -> scl
    com.badlogic.gdx.math.Matrix3 scl(com.badlogic.gdx.math.Vector3) -> scl
    com.badlogic.gdx.math.Matrix3 transpose() -> transpose
    void mul(float[],float[]) -> mul
com.badlogic.gdx.math.Matrix4 -> com.badlogic.gdx.math.Matrix4:
    long serialVersionUID -> serialVersionUID
    int M00 -> M00
    int M01 -> M01
    int M02 -> M02
    int M03 -> M03
    int M10 -> M10
    int M11 -> M11
    int M12 -> M12
    int M13 -> M13
    int M20 -> M20
    int M21 -> M21
    int M22 -> M22
    int M23 -> M23
    int M30 -> M30
    int M31 -> M31
    int M32 -> M32
    int M33 -> M33
    float[] tmp -> tmp
    float[] val -> val
    com.badlogic.gdx.math.Quaternion quat -> quat
    com.badlogic.gdx.math.Quaternion quat2 -> quat2
    com.badlogic.gdx.math.Vector3 l_vez -> l_vez
    com.badlogic.gdx.math.Vector3 l_vex -> l_vex
    com.badlogic.gdx.math.Vector3 l_vey -> l_vey
    com.badlogic.gdx.math.Vector3 tmpVec -> tmpVec
    com.badlogic.gdx.math.Matrix4 tmpMat -> tmpMat
    com.badlogic.gdx.math.Vector3 right -> right
    com.badlogic.gdx.math.Vector3 tmpForward -> tmpForward
    com.badlogic.gdx.math.Vector3 tmpUp -> tmpUp
    com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Matrix4) -> set
    com.badlogic.gdx.math.Matrix4 set(float[]) -> set
    com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Quaternion) -> set
    com.badlogic.gdx.math.Matrix4 set(float,float,float,float) -> set
    com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion) -> set
    com.badlogic.gdx.math.Matrix4 set(float,float,float,float,float,float,float) -> set
    com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.math.Matrix4 set(float,float,float,float,float,float,float,float,float,float) -> set
    com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.math.Matrix4 cpy() -> cpy
    com.badlogic.gdx.math.Matrix4 trn(com.badlogic.gdx.math.Vector3) -> trn
    com.badlogic.gdx.math.Matrix4 trn(float,float,float) -> trn
    float[] getValues() -> getValues
    com.badlogic.gdx.math.Matrix4 mul(com.badlogic.gdx.math.Matrix4) -> mul
    com.badlogic.gdx.math.Matrix4 mulLeft(com.badlogic.gdx.math.Matrix4) -> mulLeft
    com.badlogic.gdx.math.Matrix4 tra() -> tra
    com.badlogic.gdx.math.Matrix4 idt() -> idt
    com.badlogic.gdx.math.Matrix4 inv() -> inv
    float det() -> det
    float det3x3() -> det3x3
    com.badlogic.gdx.math.Matrix4 setToProjection(float,float,float,float) -> setToProjection
    com.badlogic.gdx.math.Matrix4 setToOrtho2D(float,float,float,float) -> setToOrtho2D
    com.badlogic.gdx.math.Matrix4 setToOrtho2D(float,float,float,float,float,float) -> setToOrtho2D
    com.badlogic.gdx.math.Matrix4 setToOrtho(float,float,float,float,float,float) -> setToOrtho
    com.badlogic.gdx.math.Matrix4 setTranslation(com.badlogic.gdx.math.Vector3) -> setTranslation
    com.badlogic.gdx.math.Matrix4 setTranslation(float,float,float) -> setTranslation
    com.badlogic.gdx.math.Matrix4 setToTranslation(com.badlogic.gdx.math.Vector3) -> setToTranslation
    com.badlogic.gdx.math.Matrix4 setToTranslation(float,float,float) -> setToTranslation
    com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setToTranslationAndScaling
    com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(float,float,float,float,float,float) -> setToTranslationAndScaling
    com.badlogic.gdx.math.Matrix4 setToRotation(com.badlogic.gdx.math.Vector3,float) -> setToRotation
    com.badlogic.gdx.math.Matrix4 setToRotationRad(com.badlogic.gdx.math.Vector3,float) -> setToRotationRad
    com.badlogic.gdx.math.Matrix4 setToRotation(float,float,float,float) -> setToRotation
    com.badlogic.gdx.math.Matrix4 setToRotationRad(float,float,float,float) -> setToRotationRad
    com.badlogic.gdx.math.Matrix4 setToRotation(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setToRotation
    com.badlogic.gdx.math.Matrix4 setToRotation(float,float,float,float,float,float) -> setToRotation
    com.badlogic.gdx.math.Matrix4 setFromEulerAngles(float,float,float) -> setFromEulerAngles
    com.badlogic.gdx.math.Matrix4 setToScaling(com.badlogic.gdx.math.Vector3) -> setToScaling
    com.badlogic.gdx.math.Matrix4 setToScaling(float,float,float) -> setToScaling
    com.badlogic.gdx.math.Matrix4 setToLookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setToLookAt
    com.badlogic.gdx.math.Matrix4 setToLookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setToLookAt
    com.badlogic.gdx.math.Matrix4 setToWorld(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setToWorld
    java.lang.String toString() -> toString
    com.badlogic.gdx.math.Matrix4 lerp(com.badlogic.gdx.math.Matrix4,float) -> lerp
    com.badlogic.gdx.math.Matrix4 avg(com.badlogic.gdx.math.Matrix4,float) -> avg
    com.badlogic.gdx.math.Matrix4 avg(com.badlogic.gdx.math.Matrix4[]) -> avg
    com.badlogic.gdx.math.Matrix4 avg(com.badlogic.gdx.math.Matrix4[],float[]) -> avg
    com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Matrix3) -> set
    com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Affine2) -> set
    com.badlogic.gdx.math.Matrix4 setAsAffine(com.badlogic.gdx.math.Affine2) -> setAsAffine
    com.badlogic.gdx.math.Matrix4 setAsAffine(com.badlogic.gdx.math.Matrix4) -> setAsAffine
    com.badlogic.gdx.math.Matrix4 scl(com.badlogic.gdx.math.Vector3) -> scl
    com.badlogic.gdx.math.Matrix4 scl(float,float,float) -> scl
    com.badlogic.gdx.math.Matrix4 scl(float) -> scl
    com.badlogic.gdx.math.Vector3 getTranslation(com.badlogic.gdx.math.Vector3) -> getTranslation
    com.badlogic.gdx.math.Quaternion getRotation(com.badlogic.gdx.math.Quaternion,boolean) -> getRotation
    com.badlogic.gdx.math.Quaternion getRotation(com.badlogic.gdx.math.Quaternion) -> getRotation
    float getScaleXSquared() -> getScaleXSquared
    float getScaleYSquared() -> getScaleYSquared
    float getScaleZSquared() -> getScaleZSquared
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
    float getScaleZ() -> getScaleZ
    com.badlogic.gdx.math.Vector3 getScale(com.badlogic.gdx.math.Vector3) -> getScale
    com.badlogic.gdx.math.Matrix4 toNormalMatrix() -> toNormalMatrix
    void mul(float[],float[]) -> mul
    void mulVec(float[],float[]) -> mulVec
    void mulVec(float[],float[],int,int,int) -> mulVec
    void prj(float[],float[]) -> prj
    void prj(float[],float[],int,int,int) -> prj
    void rot(float[],float[]) -> rot
    void rot(float[],float[],int,int,int) -> rot
    boolean inv(float[]) -> inv
    float det(float[]) -> det
    com.badlogic.gdx.math.Matrix4 translate(com.badlogic.gdx.math.Vector3) -> translate
    com.badlogic.gdx.math.Matrix4 translate(float,float,float) -> translate
    com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Vector3,float) -> rotate
    com.badlogic.gdx.math.Matrix4 rotateRad(com.badlogic.gdx.math.Vector3,float) -> rotateRad
    com.badlogic.gdx.math.Matrix4 rotate(float,float,float,float) -> rotate
    com.badlogic.gdx.math.Matrix4 rotateRad(float,float,float,float) -> rotateRad
    com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Quaternion) -> rotate
    com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> rotate
    com.badlogic.gdx.math.Matrix4 scale(float,float,float) -> scale
    void extract4x3Matrix(float[]) -> extract4x3Matrix
com.badlogic.gdx.math.Path -> com.badlogic.gdx.math.Path:
    java.lang.Object derivativeAt(java.lang.Object,float) -> derivativeAt
    java.lang.Object valueAt(java.lang.Object,float) -> valueAt
    float approximate(java.lang.Object) -> approximate
    float locate(java.lang.Object) -> locate
    float approxLength(int) -> approxLength
com.badlogic.gdx.math.Plane -> com.badlogic.gdx.math.Plane:
    long serialVersionUID -> serialVersionUID
    com.badlogic.gdx.math.Vector3 normal -> normal
    float d -> d
    void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> set
    void set(float,float,float,float) -> set
    float distance(com.badlogic.gdx.math.Vector3) -> distance
    com.badlogic.gdx.math.Plane$PlaneSide testPoint(com.badlogic.gdx.math.Vector3) -> testPoint
    com.badlogic.gdx.math.Plane$PlaneSide testPoint(float,float,float) -> testPoint
    boolean isFrontFacing(com.badlogic.gdx.math.Vector3) -> isFrontFacing
    com.badlogic.gdx.math.Vector3 getNormal() -> getNormal
    float getD() -> getD
    void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> set
    void set(float,float,float,float,float,float) -> set
    void set(com.badlogic.gdx.math.Plane) -> set
    java.lang.String toString() -> toString
com.badlogic.gdx.math.Plane$PlaneSide -> com.badlogic.gdx.math.Plane$PlaneSide:
    com.badlogic.gdx.math.Plane$PlaneSide OnPlane -> OnPlane
    com.badlogic.gdx.math.Plane$PlaneSide Back -> Back
    com.badlogic.gdx.math.Plane$PlaneSide Front -> Front
    com.badlogic.gdx.math.Plane$PlaneSide[] $VALUES -> $VALUES
    com.badlogic.gdx.math.Plane$PlaneSide[] values() -> values
    com.badlogic.gdx.math.Plane$PlaneSide valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.math.Polygon -> com.badlogic.gdx.math.Polygon:
    float[] localVertices -> localVertices
    float[] worldVertices -> worldVertices
    float x -> x
    float y -> y
    float originX -> originX
    float originY -> originY
    float rotation -> rotation
    float scaleX -> scaleX
    float scaleY -> scaleY
    boolean dirty -> dirty
    com.badlogic.gdx.math.Rectangle bounds -> bounds
    float[] getVertices() -> getVertices
    float[] getTransformedVertices() -> getTransformedVertices
    void setOrigin(float,float) -> setOrigin
    void setPosition(float,float) -> setPosition
    void setVertices(float[]) -> setVertices
    void translate(float,float) -> translate
    void setRotation(float) -> setRotation
    void rotate(float) -> rotate
    void setScale(float,float) -> setScale
    void scale(float) -> scale
    void dirty() -> dirty
    float area() -> area
    com.badlogic.gdx.math.Rectangle getBoundingRectangle() -> getBoundingRectangle
    boolean contains(float,float) -> contains
    float getX() -> getX
    float getY() -> getY
    float getOriginX() -> getOriginX
    float getOriginY() -> getOriginY
    float getRotation() -> getRotation
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
com.badlogic.gdx.math.Polyline -> com.badlogic.gdx.math.Polyline:
    float[] localVertices -> localVertices
    float[] worldVertices -> worldVertices
    float x -> x
    float y -> y
    float originX -> originX
    float originY -> originY
    float rotation -> rotation
    float scaleX -> scaleX
    float scaleY -> scaleY
    float length -> length
    float scaledLength -> scaledLength
    boolean calculateScaledLength -> calculateScaledLength
    boolean calculateLength -> calculateLength
    boolean dirty -> dirty
    float[] getVertices() -> getVertices
    float[] getTransformedVertices() -> getTransformedVertices
    float getLength() -> getLength
    float getScaledLength() -> getScaledLength
    float getX() -> getX
    float getY() -> getY
    float getOriginX() -> getOriginX
    float getOriginY() -> getOriginY
    float getRotation() -> getRotation
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
    void setOrigin(float,float) -> setOrigin
    void setPosition(float,float) -> setPosition
    void setRotation(float) -> setRotation
    void rotate(float) -> rotate
    void setScale(float,float) -> setScale
    void scale(float) -> scale
    void calculateLength() -> calculateLength
    void calculateScaledLength() -> calculateScaledLength
    void dirty() -> dirty
    void translate(float,float) -> translate
com.badlogic.gdx.math.Quaternion -> com.badlogic.gdx.math.Quaternion:
    long serialVersionUID -> serialVersionUID
    com.badlogic.gdx.math.Quaternion tmp1 -> tmp1
    com.badlogic.gdx.math.Quaternion tmp2 -> tmp2
    float x -> x
    float y -> y
    float z -> z
    float w -> w
    com.badlogic.gdx.math.Quaternion set(float,float,float,float) -> set
    com.badlogic.gdx.math.Quaternion set(com.badlogic.gdx.math.Quaternion) -> set
    com.badlogic.gdx.math.Quaternion set(com.badlogic.gdx.math.Vector3,float) -> set
    com.badlogic.gdx.math.Quaternion cpy() -> cpy
    float len(float,float,float,float) -> len
    float len() -> len
    java.lang.String toString() -> toString
    com.badlogic.gdx.math.Quaternion setEulerAngles(float,float,float) -> setEulerAngles
    com.badlogic.gdx.math.Quaternion setEulerAnglesRad(float,float,float) -> setEulerAnglesRad
    int getGimbalPole() -> getGimbalPole
    float getRollRad() -> getRollRad
    float getRoll() -> getRoll
    float getPitchRad() -> getPitchRad
    float getPitch() -> getPitch
    float getYawRad() -> getYawRad
    float getYaw() -> getYaw
    float len2(float,float,float,float) -> len2
    float len2() -> len2
    com.badlogic.gdx.math.Quaternion nor() -> nor
    com.badlogic.gdx.math.Quaternion conjugate() -> conjugate
    com.badlogic.gdx.math.Vector3 transform(com.badlogic.gdx.math.Vector3) -> transform
    com.badlogic.gdx.math.Quaternion mul(com.badlogic.gdx.math.Quaternion) -> mul
    com.badlogic.gdx.math.Quaternion mul(float,float,float,float) -> mul
    com.badlogic.gdx.math.Quaternion mulLeft(com.badlogic.gdx.math.Quaternion) -> mulLeft
    com.badlogic.gdx.math.Quaternion mulLeft(float,float,float,float) -> mulLeft
    com.badlogic.gdx.math.Quaternion add(com.badlogic.gdx.math.Quaternion) -> add
    com.badlogic.gdx.math.Quaternion add(float,float,float,float) -> add
    void toMatrix(float[]) -> toMatrix
    com.badlogic.gdx.math.Quaternion idt() -> idt
    boolean isIdentity() -> isIdentity
    boolean isIdentity(float) -> isIdentity
    com.badlogic.gdx.math.Quaternion setFromAxis(com.badlogic.gdx.math.Vector3,float) -> setFromAxis
    com.badlogic.gdx.math.Quaternion setFromAxisRad(com.badlogic.gdx.math.Vector3,float) -> setFromAxisRad
    com.badlogic.gdx.math.Quaternion setFromAxis(float,float,float,float) -> setFromAxis
    com.badlogic.gdx.math.Quaternion setFromAxisRad(float,float,float,float) -> setFromAxisRad
    com.badlogic.gdx.math.Quaternion setFromMatrix(boolean,com.badlogic.gdx.math.Matrix4) -> setFromMatrix
    com.badlogic.gdx.math.Quaternion setFromMatrix(com.badlogic.gdx.math.Matrix4) -> setFromMatrix
    com.badlogic.gdx.math.Quaternion setFromMatrix(boolean,com.badlogic.gdx.math.Matrix3) -> setFromMatrix
    com.badlogic.gdx.math.Quaternion setFromMatrix(com.badlogic.gdx.math.Matrix3) -> setFromMatrix
    com.badlogic.gdx.math.Quaternion setFromAxes(float,float,float,float,float,float,float,float,float) -> setFromAxes
    com.badlogic.gdx.math.Quaternion setFromAxes(boolean,float,float,float,float,float,float,float,float,float) -> setFromAxes
    com.badlogic.gdx.math.Quaternion setFromCross(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setFromCross
    com.badlogic.gdx.math.Quaternion setFromCross(float,float,float,float,float,float) -> setFromCross
    com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion,float) -> slerp
    com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion[]) -> slerp
    com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion[],float[]) -> slerp
    com.badlogic.gdx.math.Quaternion exp(float) -> exp
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    float dot(float,float,float,float,float,float,float,float) -> dot
    float dot(com.badlogic.gdx.math.Quaternion) -> dot
    float dot(float,float,float,float) -> dot
    com.badlogic.gdx.math.Quaternion mul(float) -> mul
    float getAxisAngle(com.badlogic.gdx.math.Vector3) -> getAxisAngle
    float getAxisAngleRad(com.badlogic.gdx.math.Vector3) -> getAxisAngleRad
    float getAngleRad() -> getAngleRad
    float getAngle() -> getAngle
    void getSwingTwist(float,float,float,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Quaternion) -> getSwingTwist
    void getSwingTwist(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Quaternion) -> getSwingTwist
    float getAngleAroundRad(float,float,float) -> getAngleAroundRad
    float getAngleAroundRad(com.badlogic.gdx.math.Vector3) -> getAngleAroundRad
    float getAngleAround(float,float,float) -> getAngleAround
    float getAngleAround(com.badlogic.gdx.math.Vector3) -> getAngleAround
com.badlogic.gdx.math.RandomXS128 -> com.badlogic.gdx.math.RandomXS128:
    double NORM_DOUBLE -> NORM_DOUBLE
    double NORM_FLOAT -> NORM_FLOAT
    long seed0 -> seed0
    long seed1 -> seed1
    long nextLong() -> nextLong
    int next(int) -> next
    int nextInt() -> nextInt
    int nextInt(int) -> nextInt
    long nextLong(long) -> nextLong
    double nextDouble() -> nextDouble
    float nextFloat() -> nextFloat
    boolean nextBoolean() -> nextBoolean
    void nextBytes(byte[]) -> nextBytes
    void setSeed(long) -> setSeed
    void setState(long,long) -> setState
    long getState(int) -> getState
    long murmurHash3(long) -> murmurHash3
com.badlogic.gdx.math.Rectangle -> com.badlogic.gdx.math.Rectangle:
    com.badlogic.gdx.math.Rectangle tmp -> tmp
    com.badlogic.gdx.math.Rectangle tmp2 -> tmp2
    long serialVersionUID -> serialVersionUID
    float x -> x
    float y -> y
    float width -> width
    float height -> height
    com.badlogic.gdx.math.Rectangle set(float,float,float,float) -> set
    float getX() -> getX
    com.badlogic.gdx.math.Rectangle setX(float) -> setX
    float getY() -> getY
    com.badlogic.gdx.math.Rectangle setY(float) -> setY
    float getWidth() -> getWidth
    com.badlogic.gdx.math.Rectangle setWidth(float) -> setWidth
    float getHeight() -> getHeight
    com.badlogic.gdx.math.Rectangle setHeight(float) -> setHeight
    com.badlogic.gdx.math.Vector2 getPosition(com.badlogic.gdx.math.Vector2) -> getPosition
    com.badlogic.gdx.math.Rectangle setPosition(com.badlogic.gdx.math.Vector2) -> setPosition
    com.badlogic.gdx.math.Rectangle setPosition(float,float) -> setPosition
    com.badlogic.gdx.math.Rectangle setSize(float,float) -> setSize
    com.badlogic.gdx.math.Rectangle setSize(float) -> setSize
    com.badlogic.gdx.math.Vector2 getSize(com.badlogic.gdx.math.Vector2) -> getSize
    boolean contains(float,float) -> contains
    boolean contains(com.badlogic.gdx.math.Vector2) -> contains
    boolean contains(com.badlogic.gdx.math.Rectangle) -> contains
    boolean overlaps(com.badlogic.gdx.math.Rectangle) -> overlaps
    com.badlogic.gdx.math.Rectangle set(com.badlogic.gdx.math.Rectangle) -> set
    com.badlogic.gdx.math.Rectangle merge(com.badlogic.gdx.math.Rectangle) -> merge
    com.badlogic.gdx.math.Rectangle merge(float,float) -> merge
    com.badlogic.gdx.math.Rectangle merge(com.badlogic.gdx.math.Vector2) -> merge
    com.badlogic.gdx.math.Rectangle merge(com.badlogic.gdx.math.Vector2[]) -> merge
    float getAspectRatio() -> getAspectRatio
    com.badlogic.gdx.math.Vector2 getCenter(com.badlogic.gdx.math.Vector2) -> getCenter
    com.badlogic.gdx.math.Rectangle setCenter(float,float) -> setCenter
    com.badlogic.gdx.math.Rectangle setCenter(com.badlogic.gdx.math.Vector2) -> setCenter
    com.badlogic.gdx.math.Rectangle fitOutside(com.badlogic.gdx.math.Rectangle) -> fitOutside
    com.badlogic.gdx.math.Rectangle fitInside(com.badlogic.gdx.math.Rectangle) -> fitInside
    java.lang.String toString() -> toString
    float area() -> area
    float perimeter() -> perimeter
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.math.Shape2D -> com.badlogic.gdx.math.Shape2D:
com.badlogic.gdx.math.Vector -> com.badlogic.gdx.math.Vector:
    com.badlogic.gdx.math.Vector cpy() -> cpy
    float len() -> len
    float len2() -> len2
    com.badlogic.gdx.math.Vector limit(float) -> limit
    com.badlogic.gdx.math.Vector limit2(float) -> limit2
    com.badlogic.gdx.math.Vector setLength(float) -> setLength
    com.badlogic.gdx.math.Vector setLength2(float) -> setLength2
    com.badlogic.gdx.math.Vector clamp(float,float) -> clamp
    com.badlogic.gdx.math.Vector set(com.badlogic.gdx.math.Vector) -> set
    com.badlogic.gdx.math.Vector sub(com.badlogic.gdx.math.Vector) -> sub
    com.badlogic.gdx.math.Vector nor() -> nor
    com.badlogic.gdx.math.Vector add(com.badlogic.gdx.math.Vector) -> add
    float dot(com.badlogic.gdx.math.Vector) -> dot
    com.badlogic.gdx.math.Vector scl(float) -> scl
    com.badlogic.gdx.math.Vector scl(com.badlogic.gdx.math.Vector) -> scl
    float dst(com.badlogic.gdx.math.Vector) -> dst
    float dst2(com.badlogic.gdx.math.Vector) -> dst2
    com.badlogic.gdx.math.Vector lerp(com.badlogic.gdx.math.Vector,float) -> lerp
    com.badlogic.gdx.math.Vector interpolate(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Interpolation) -> interpolate
    boolean isUnit() -> isUnit
    boolean isUnit(float) -> isUnit
    boolean isZero() -> isZero
    boolean isZero(float) -> isZero
    boolean isOnLine(com.badlogic.gdx.math.Vector,float) -> isOnLine
    boolean isOnLine(com.badlogic.gdx.math.Vector) -> isOnLine
    boolean isCollinear(com.badlogic.gdx.math.Vector,float) -> isCollinear
    boolean isCollinear(com.badlogic.gdx.math.Vector) -> isCollinear
    boolean isCollinearOpposite(com.badlogic.gdx.math.Vector,float) -> isCollinearOpposite
    boolean isCollinearOpposite(com.badlogic.gdx.math.Vector) -> isCollinearOpposite
    boolean isPerpendicular(com.badlogic.gdx.math.Vector) -> isPerpendicular
    boolean isPerpendicular(com.badlogic.gdx.math.Vector,float) -> isPerpendicular
    boolean hasSameDirection(com.badlogic.gdx.math.Vector) -> hasSameDirection
    boolean hasOppositeDirection(com.badlogic.gdx.math.Vector) -> hasOppositeDirection
    boolean epsilonEquals(com.badlogic.gdx.math.Vector,float) -> epsilonEquals
    com.badlogic.gdx.math.Vector mulAdd(com.badlogic.gdx.math.Vector,float) -> mulAdd
    com.badlogic.gdx.math.Vector mulAdd(com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector) -> mulAdd
    com.badlogic.gdx.math.Vector setZero() -> setZero
com.badlogic.gdx.math.Vector2 -> com.badlogic.gdx.math.Vector2:
    long serialVersionUID -> serialVersionUID
    com.badlogic.gdx.math.Vector2 X -> X
    com.badlogic.gdx.math.Vector2 Y -> Y
    com.badlogic.gdx.math.Vector2 Zero -> Zero
    float x -> x
    float y -> y
    com.badlogic.gdx.math.Vector2 cpy() -> cpy
    float len(float,float) -> len
    float len() -> len
    float len2(float,float) -> len2
    float len2() -> len2
    com.badlogic.gdx.math.Vector2 set(com.badlogic.gdx.math.Vector2) -> set
    com.badlogic.gdx.math.Vector2 set(float,float) -> set
    com.badlogic.gdx.math.Vector2 sub(com.badlogic.gdx.math.Vector2) -> sub
    com.badlogic.gdx.math.Vector2 sub(float,float) -> sub
    com.badlogic.gdx.math.Vector2 nor() -> nor
    com.badlogic.gdx.math.Vector2 add(com.badlogic.gdx.math.Vector2) -> add
    com.badlogic.gdx.math.Vector2 add(float,float) -> add
    float dot(float,float,float,float) -> dot
    float dot(com.badlogic.gdx.math.Vector2) -> dot
    float dot(float,float) -> dot
    com.badlogic.gdx.math.Vector2 scl(float) -> scl
    com.badlogic.gdx.math.Vector2 scl(float,float) -> scl
    com.badlogic.gdx.math.Vector2 scl(com.badlogic.gdx.math.Vector2) -> scl
    com.badlogic.gdx.math.Vector2 mulAdd(com.badlogic.gdx.math.Vector2,float) -> mulAdd
    com.badlogic.gdx.math.Vector2 mulAdd(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> mulAdd
    float dst(float,float,float,float) -> dst
    float dst(com.badlogic.gdx.math.Vector2) -> dst
    float dst(float,float) -> dst
    float dst2(float,float,float,float) -> dst2
    float dst2(com.badlogic.gdx.math.Vector2) -> dst2
    float dst2(float,float) -> dst2
    com.badlogic.gdx.math.Vector2 limit(float) -> limit
    com.badlogic.gdx.math.Vector2 limit2(float) -> limit2
    com.badlogic.gdx.math.Vector2 clamp(float,float) -> clamp
    com.badlogic.gdx.math.Vector2 setLength(float) -> setLength
    com.badlogic.gdx.math.Vector2 setLength2(float) -> setLength2
    java.lang.String toString() -> toString
    com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Matrix3) -> mul
    float crs(com.badlogic.gdx.math.Vector2) -> crs
    float crs(float,float) -> crs
    float angle() -> angle
    float angle(com.badlogic.gdx.math.Vector2) -> angle
    float angleRad() -> angleRad
    float angleRad(com.badlogic.gdx.math.Vector2) -> angleRad
    com.badlogic.gdx.math.Vector2 setAngle(float) -> setAngle
    com.badlogic.gdx.math.Vector2 setAngleRad(float) -> setAngleRad
    com.badlogic.gdx.math.Vector2 rotate(float) -> rotate
    com.badlogic.gdx.math.Vector2 rotateRad(float) -> rotateRad
    com.badlogic.gdx.math.Vector2 rotate90(int) -> rotate90
    com.badlogic.gdx.math.Vector2 lerp(com.badlogic.gdx.math.Vector2,float) -> lerp
    com.badlogic.gdx.math.Vector2 interpolate(com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.math.Interpolation) -> interpolate
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean epsilonEquals(com.badlogic.gdx.math.Vector2,float) -> epsilonEquals
    boolean epsilonEquals(float,float,float) -> epsilonEquals
    boolean isUnit() -> isUnit
    boolean isUnit(float) -> isUnit
    boolean isZero() -> isZero
    boolean isZero(float) -> isZero
    boolean isOnLine(com.badlogic.gdx.math.Vector2) -> isOnLine
    boolean isOnLine(com.badlogic.gdx.math.Vector2,float) -> isOnLine
    boolean isCollinear(com.badlogic.gdx.math.Vector2,float) -> isCollinear
    boolean isCollinear(com.badlogic.gdx.math.Vector2) -> isCollinear
    boolean isCollinearOpposite(com.badlogic.gdx.math.Vector2,float) -> isCollinearOpposite
    boolean isCollinearOpposite(com.badlogic.gdx.math.Vector2) -> isCollinearOpposite
    boolean isPerpendicular(com.badlogic.gdx.math.Vector2) -> isPerpendicular
    boolean isPerpendicular(com.badlogic.gdx.math.Vector2,float) -> isPerpendicular
    boolean hasSameDirection(com.badlogic.gdx.math.Vector2) -> hasSameDirection
    boolean hasOppositeDirection(com.badlogic.gdx.math.Vector2) -> hasOppositeDirection
    com.badlogic.gdx.math.Vector2 setZero() -> setZero
    com.badlogic.gdx.math.Vector setZero() -> setZero
    com.badlogic.gdx.math.Vector mulAdd(com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector) -> mulAdd
    com.badlogic.gdx.math.Vector mulAdd(com.badlogic.gdx.math.Vector,float) -> mulAdd
    boolean epsilonEquals(com.badlogic.gdx.math.Vector,float) -> epsilonEquals
    boolean hasOppositeDirection(com.badlogic.gdx.math.Vector) -> hasOppositeDirection
    boolean hasSameDirection(com.badlogic.gdx.math.Vector) -> hasSameDirection
    boolean isPerpendicular(com.badlogic.gdx.math.Vector,float) -> isPerpendicular
    boolean isPerpendicular(com.badlogic.gdx.math.Vector) -> isPerpendicular
    boolean isCollinearOpposite(com.badlogic.gdx.math.Vector) -> isCollinearOpposite
    boolean isCollinearOpposite(com.badlogic.gdx.math.Vector,float) -> isCollinearOpposite
    boolean isCollinear(com.badlogic.gdx.math.Vector) -> isCollinear
    boolean isCollinear(com.badlogic.gdx.math.Vector,float) -> isCollinear
    boolean isOnLine(com.badlogic.gdx.math.Vector) -> isOnLine
    boolean isOnLine(com.badlogic.gdx.math.Vector,float) -> isOnLine
    com.badlogic.gdx.math.Vector interpolate(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Interpolation) -> interpolate
    com.badlogic.gdx.math.Vector lerp(com.badlogic.gdx.math.Vector,float) -> lerp
    float dst2(com.badlogic.gdx.math.Vector) -> dst2
    float dst(com.badlogic.gdx.math.Vector) -> dst
    com.badlogic.gdx.math.Vector scl(com.badlogic.gdx.math.Vector) -> scl
    com.badlogic.gdx.math.Vector scl(float) -> scl
    float dot(com.badlogic.gdx.math.Vector) -> dot
    com.badlogic.gdx.math.Vector add(com.badlogic.gdx.math.Vector) -> add
    com.badlogic.gdx.math.Vector nor() -> nor
    com.badlogic.gdx.math.Vector sub(com.badlogic.gdx.math.Vector) -> sub
    com.badlogic.gdx.math.Vector set(com.badlogic.gdx.math.Vector) -> set
    com.badlogic.gdx.math.Vector clamp(float,float) -> clamp
    com.badlogic.gdx.math.Vector setLength2(float) -> setLength2
    com.badlogic.gdx.math.Vector setLength(float) -> setLength
    com.badlogic.gdx.math.Vector limit2(float) -> limit2
    com.badlogic.gdx.math.Vector limit(float) -> limit
    com.badlogic.gdx.math.Vector cpy() -> cpy
com.badlogic.gdx.math.Vector3 -> com.badlogic.gdx.math.Vector3:
    long serialVersionUID -> serialVersionUID
    float x -> x
    float y -> y
    float z -> z
    com.badlogic.gdx.math.Vector3 X -> X
    com.badlogic.gdx.math.Vector3 Y -> Y
    com.badlogic.gdx.math.Vector3 Z -> Z
    com.badlogic.gdx.math.Vector3 Zero -> Zero
    com.badlogic.gdx.math.Matrix4 tmpMat -> tmpMat
    com.badlogic.gdx.math.Vector3 set(float,float,float) -> set
    com.badlogic.gdx.math.Vector3 set(com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.math.Vector3 set(float[]) -> set
    com.badlogic.gdx.math.Vector3 set(com.badlogic.gdx.math.Vector2,float) -> set
    com.badlogic.gdx.math.Vector3 cpy() -> cpy
    com.badlogic.gdx.math.Vector3 add(com.badlogic.gdx.math.Vector3) -> add
    com.badlogic.gdx.math.Vector3 add(float,float,float) -> add
    com.badlogic.gdx.math.Vector3 add(float) -> add
    com.badlogic.gdx.math.Vector3 sub(com.badlogic.gdx.math.Vector3) -> sub
    com.badlogic.gdx.math.Vector3 sub(float,float,float) -> sub
    com.badlogic.gdx.math.Vector3 sub(float) -> sub
    com.badlogic.gdx.math.Vector3 scl(float) -> scl
    com.badlogic.gdx.math.Vector3 scl(com.badlogic.gdx.math.Vector3) -> scl
    com.badlogic.gdx.math.Vector3 scl(float,float,float) -> scl
    com.badlogic.gdx.math.Vector3 mulAdd(com.badlogic.gdx.math.Vector3,float) -> mulAdd
    com.badlogic.gdx.math.Vector3 mulAdd(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> mulAdd
    float len(float,float,float) -> len
    float len() -> len
    float len2(float,float,float) -> len2
    float len2() -> len2
    boolean idt(com.badlogic.gdx.math.Vector3) -> idt
    float dst(float,float,float,float,float,float) -> dst
    float dst(com.badlogic.gdx.math.Vector3) -> dst
    float dst(float,float,float) -> dst
    float dst2(float,float,float,float,float,float) -> dst2
    float dst2(com.badlogic.gdx.math.Vector3) -> dst2
    float dst2(float,float,float) -> dst2
    com.badlogic.gdx.math.Vector3 nor() -> nor
    float dot(float,float,float,float,float,float) -> dot
    float dot(com.badlogic.gdx.math.Vector3) -> dot
    float dot(float,float,float) -> dot
    com.badlogic.gdx.math.Vector3 crs(com.badlogic.gdx.math.Vector3) -> crs
    com.badlogic.gdx.math.Vector3 crs(float,float,float) -> crs
    com.badlogic.gdx.math.Vector3 mul4x3(float[]) -> mul4x3
    com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Matrix4) -> mul
    com.badlogic.gdx.math.Vector3 traMul(com.badlogic.gdx.math.Matrix4) -> traMul
    com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Matrix3) -> mul
    com.badlogic.gdx.math.Vector3 traMul(com.badlogic.gdx.math.Matrix3) -> traMul
    com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Quaternion) -> mul
    com.badlogic.gdx.math.Vector3 prj(com.badlogic.gdx.math.Matrix4) -> prj
    com.badlogic.gdx.math.Vector3 rot(com.badlogic.gdx.math.Matrix4) -> rot
    com.badlogic.gdx.math.Vector3 unrotate(com.badlogic.gdx.math.Matrix4) -> unrotate
    com.badlogic.gdx.math.Vector3 untransform(com.badlogic.gdx.math.Matrix4) -> untransform
    com.badlogic.gdx.math.Vector3 rotate(float,float,float,float) -> rotate
    com.badlogic.gdx.math.Vector3 rotateRad(float,float,float,float) -> rotateRad
    com.badlogic.gdx.math.Vector3 rotate(com.badlogic.gdx.math.Vector3,float) -> rotate
    com.badlogic.gdx.math.Vector3 rotateRad(com.badlogic.gdx.math.Vector3,float) -> rotateRad
    boolean isUnit() -> isUnit
    boolean isUnit(float) -> isUnit
    boolean isZero() -> isZero
    boolean isZero(float) -> isZero
    boolean isOnLine(com.badlogic.gdx.math.Vector3,float) -> isOnLine
    boolean isOnLine(com.badlogic.gdx.math.Vector3) -> isOnLine
    boolean isCollinear(com.badlogic.gdx.math.Vector3,float) -> isCollinear
    boolean isCollinear(com.badlogic.gdx.math.Vector3) -> isCollinear
    boolean isCollinearOpposite(com.badlogic.gdx.math.Vector3,float) -> isCollinearOpposite
    boolean isCollinearOpposite(com.badlogic.gdx.math.Vector3) -> isCollinearOpposite
    boolean isPerpendicular(com.badlogic.gdx.math.Vector3) -> isPerpendicular
    boolean isPerpendicular(com.badlogic.gdx.math.Vector3,float) -> isPerpendicular
    boolean hasSameDirection(com.badlogic.gdx.math.Vector3) -> hasSameDirection
    boolean hasOppositeDirection(com.badlogic.gdx.math.Vector3) -> hasOppositeDirection
    com.badlogic.gdx.math.Vector3 lerp(com.badlogic.gdx.math.Vector3,float) -> lerp
    com.badlogic.gdx.math.Vector3 interpolate(com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Interpolation) -> interpolate
    com.badlogic.gdx.math.Vector3 slerp(com.badlogic.gdx.math.Vector3,float) -> slerp
    java.lang.String toString() -> toString
    com.badlogic.gdx.math.Vector3 limit(float) -> limit
    com.badlogic.gdx.math.Vector3 limit2(float) -> limit2
    com.badlogic.gdx.math.Vector3 setLength(float) -> setLength
    com.badlogic.gdx.math.Vector3 setLength2(float) -> setLength2
    com.badlogic.gdx.math.Vector3 clamp(float,float) -> clamp
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean epsilonEquals(com.badlogic.gdx.math.Vector3,float) -> epsilonEquals
    boolean epsilonEquals(float,float,float,float) -> epsilonEquals
    com.badlogic.gdx.math.Vector3 setZero() -> setZero
    com.badlogic.gdx.math.Vector setZero() -> setZero
    com.badlogic.gdx.math.Vector mulAdd(com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector) -> mulAdd
    com.badlogic.gdx.math.Vector mulAdd(com.badlogic.gdx.math.Vector,float) -> mulAdd
    boolean epsilonEquals(com.badlogic.gdx.math.Vector,float) -> epsilonEquals
    boolean hasOppositeDirection(com.badlogic.gdx.math.Vector) -> hasOppositeDirection
    boolean hasSameDirection(com.badlogic.gdx.math.Vector) -> hasSameDirection
    boolean isPerpendicular(com.badlogic.gdx.math.Vector,float) -> isPerpendicular
    boolean isPerpendicular(com.badlogic.gdx.math.Vector) -> isPerpendicular
    boolean isCollinearOpposite(com.badlogic.gdx.math.Vector) -> isCollinearOpposite
    boolean isCollinearOpposite(com.badlogic.gdx.math.Vector,float) -> isCollinearOpposite
    boolean isCollinear(com.badlogic.gdx.math.Vector) -> isCollinear
    boolean isCollinear(com.badlogic.gdx.math.Vector,float) -> isCollinear
    boolean isOnLine(com.badlogic.gdx.math.Vector) -> isOnLine
    boolean isOnLine(com.badlogic.gdx.math.Vector,float) -> isOnLine
    com.badlogic.gdx.math.Vector interpolate(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Interpolation) -> interpolate
    com.badlogic.gdx.math.Vector lerp(com.badlogic.gdx.math.Vector,float) -> lerp
    float dst2(com.badlogic.gdx.math.Vector) -> dst2
    float dst(com.badlogic.gdx.math.Vector) -> dst
    com.badlogic.gdx.math.Vector scl(com.badlogic.gdx.math.Vector) -> scl
    com.badlogic.gdx.math.Vector scl(float) -> scl
    float dot(com.badlogic.gdx.math.Vector) -> dot
    com.badlogic.gdx.math.Vector add(com.badlogic.gdx.math.Vector) -> add
    com.badlogic.gdx.math.Vector nor() -> nor
    com.badlogic.gdx.math.Vector sub(com.badlogic.gdx.math.Vector) -> sub
    com.badlogic.gdx.math.Vector set(com.badlogic.gdx.math.Vector) -> set
    com.badlogic.gdx.math.Vector clamp(float,float) -> clamp
    com.badlogic.gdx.math.Vector setLength2(float) -> setLength2
    com.badlogic.gdx.math.Vector setLength(float) -> setLength
    com.badlogic.gdx.math.Vector limit2(float) -> limit2
    com.badlogic.gdx.math.Vector limit(float) -> limit
    com.badlogic.gdx.math.Vector cpy() -> cpy
com.badlogic.gdx.math.WindowedMean -> com.badlogic.gdx.math.WindowedMean:
    float[] values -> values
    int added_values -> added_values
    int last_value -> last_value
    float mean -> mean
    boolean dirty -> dirty
    boolean hasEnoughData() -> hasEnoughData
    void clear() -> clear
    void addValue(float) -> addValue
    float getMean() -> getMean
    float getOldest() -> getOldest
    float getLatest() -> getLatest
    float standardDeviation() -> standardDeviation
    int getWindowSize() -> getWindowSize
com.badlogic.gdx.math.collision.BoundingBox -> com.badlogic.gdx.math.collision.BoundingBox:
    long serialVersionUID -> serialVersionUID
    com.badlogic.gdx.math.Vector3 tmpVector -> tmpVector
    com.badlogic.gdx.math.Vector3 min -> min
    com.badlogic.gdx.math.Vector3 max -> max
    com.badlogic.gdx.math.Vector3 cnt -> cnt
    com.badlogic.gdx.math.Vector3 dim -> dim
    com.badlogic.gdx.math.Vector3[] corners -> corners
    com.badlogic.gdx.math.Vector3 getCenter() -> getCenter
    com.badlogic.gdx.math.Vector3 getCenter(com.badlogic.gdx.math.Vector3) -> getCenter
    float getCenterX() -> getCenterX
    float getCenterY() -> getCenterY
    float getCenterZ() -> getCenterZ
    void updateCorners() -> updateCorners
    com.badlogic.gdx.math.Vector3[] getCorners() -> getCorners
    com.badlogic.gdx.math.Vector3 getCorner000(com.badlogic.gdx.math.Vector3) -> getCorner000
    com.badlogic.gdx.math.Vector3 getCorner001(com.badlogic.gdx.math.Vector3) -> getCorner001
    com.badlogic.gdx.math.Vector3 getCorner010(com.badlogic.gdx.math.Vector3) -> getCorner010
    com.badlogic.gdx.math.Vector3 getCorner011(com.badlogic.gdx.math.Vector3) -> getCorner011
    com.badlogic.gdx.math.Vector3 getCorner100(com.badlogic.gdx.math.Vector3) -> getCorner100
    com.badlogic.gdx.math.Vector3 getCorner101(com.badlogic.gdx.math.Vector3) -> getCorner101
    com.badlogic.gdx.math.Vector3 getCorner110(com.badlogic.gdx.math.Vector3) -> getCorner110
    com.badlogic.gdx.math.Vector3 getCorner111(com.badlogic.gdx.math.Vector3) -> getCorner111
    com.badlogic.gdx.math.Vector3 getDimensions() -> getDimensions
    com.badlogic.gdx.math.Vector3 getDimensions(com.badlogic.gdx.math.Vector3) -> getDimensions
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    float getDepth() -> getDepth
    com.badlogic.gdx.math.Vector3 getMin() -> getMin
    com.badlogic.gdx.math.Vector3 getMin(com.badlogic.gdx.math.Vector3) -> getMin
    com.badlogic.gdx.math.Vector3 getMax() -> getMax
    com.badlogic.gdx.math.Vector3 getMax(com.badlogic.gdx.math.Vector3) -> getMax
    com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.collision.BoundingBox) -> set
    com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.Vector3[]) -> set
    com.badlogic.gdx.math.collision.BoundingBox set(java.util.List) -> set
    com.badlogic.gdx.math.collision.BoundingBox inf() -> inf
    com.badlogic.gdx.math.collision.BoundingBox ext(com.badlogic.gdx.math.Vector3) -> ext
    com.badlogic.gdx.math.collision.BoundingBox clr() -> clr
    boolean isValid() -> isValid
    com.badlogic.gdx.math.collision.BoundingBox ext(com.badlogic.gdx.math.collision.BoundingBox) -> ext
    com.badlogic.gdx.math.collision.BoundingBox ext(com.badlogic.gdx.math.collision.BoundingBox,com.badlogic.gdx.math.Matrix4) -> ext
    com.badlogic.gdx.math.collision.BoundingBox mul(com.badlogic.gdx.math.Matrix4) -> mul
    boolean contains(com.badlogic.gdx.math.collision.BoundingBox) -> contains
    boolean intersects(com.badlogic.gdx.math.collision.BoundingBox) -> intersects
    boolean contains(com.badlogic.gdx.math.Vector3) -> contains
    java.lang.String toString() -> toString
    com.badlogic.gdx.math.collision.BoundingBox ext(float,float,float) -> ext
    float min(float,float) -> min
    float max(float,float) -> max
com.badlogic.gdx.math.collision.Ray -> com.badlogic.gdx.math.collision.Ray:
    long serialVersionUID -> serialVersionUID
    com.badlogic.gdx.math.Vector3 origin -> origin
    com.badlogic.gdx.math.Vector3 direction -> direction
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    com.badlogic.gdx.math.collision.Ray cpy() -> cpy
    com.badlogic.gdx.math.Vector3 getEndPoint(float) -> getEndPoint
    com.badlogic.gdx.math.Vector3 getEndPoint(com.badlogic.gdx.math.Vector3,float) -> getEndPoint
    com.badlogic.gdx.math.collision.Ray mul(com.badlogic.gdx.math.Matrix4) -> mul
    java.lang.String toString() -> toString
    com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.math.collision.Ray set(float,float,float,float,float,float) -> set
    com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.collision.Ray) -> set
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.badlogic.gdx.math.collision.Segment -> com.badlogic.gdx.math.collision.Segment:
    long serialVersionUID -> serialVersionUID
    com.badlogic.gdx.math.Vector3 a -> a
    com.badlogic.gdx.math.Vector3 b -> b
    float len() -> len
    float len2() -> len2
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.badlogic.gdx.math.collision.Sphere -> com.badlogic.gdx.math.collision.Sphere:
    long serialVersionUID -> serialVersionUID
    float radius -> radius
    com.badlogic.gdx.math.Vector3 center -> center
    float PI_4_3 -> PI_4_3
    boolean overlaps(com.badlogic.gdx.math.collision.Sphere) -> overlaps
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    float volume() -> volume
    float surfaceArea() -> surfaceArea
com.badlogic.gdx.net.HttpParametersUtils -> com.badlogic.gdx.net.HttpParametersUtils:
    java.lang.String defaultEncoding -> defaultEncoding
    java.lang.String nameValueSeparator -> nameValueSeparator
    java.lang.String parameterSeparator -> parameterSeparator
    java.lang.String convertHttpParameters(java.util.Map) -> convertHttpParameters
    java.lang.String encode(java.lang.String,java.lang.String) -> encode
com.badlogic.gdx.net.HttpRequestHeader -> com.badlogic.gdx.net.HttpRequestHeader:
    java.lang.String Accept -> Accept
    java.lang.String AcceptCharset -> AcceptCharset
    java.lang.String AcceptEncoding -> AcceptEncoding
    java.lang.String AcceptLanguage -> AcceptLanguage
    java.lang.String AcceptDatetime -> AcceptDatetime
    java.lang.String Authorization -> Authorization
    java.lang.String CacheControl -> CacheControl
    java.lang.String Connection -> Connection
    java.lang.String Cookie -> Cookie
    java.lang.String ContentLength -> ContentLength
    java.lang.String ContentMD5 -> ContentMD5
    java.lang.String ContentType -> ContentType
    java.lang.String Date -> Date
    java.lang.String Expect -> Expect
    java.lang.String From -> From
    java.lang.String Host -> Host
    java.lang.String IfMatch -> IfMatch
    java.lang.String IfModifiedSince -> IfModifiedSince
    java.lang.String IfNoneMatch -> IfNoneMatch
    java.lang.String IfRange -> IfRange
    java.lang.String IfUnmodifiedSince -> IfUnmodifiedSince
    java.lang.String MaxForwards -> MaxForwards
    java.lang.String Origin -> Origin
    java.lang.String Pragma -> Pragma
    java.lang.String ProxyAuthorization -> ProxyAuthorization
    java.lang.String Range -> Range
    java.lang.String Referer -> Referer
    java.lang.String TE -> TE
    java.lang.String UserAgent -> UserAgent
    java.lang.String Upgrade -> Upgrade
    java.lang.String Via -> Via
    java.lang.String Warning -> Warning
com.badlogic.gdx.net.HttpResponseHeader -> com.badlogic.gdx.net.HttpResponseHeader:
    java.lang.String AccessControlAllowOrigin -> AccessControlAllowOrigin
    java.lang.String AcceptRanges -> AcceptRanges
    java.lang.String Age -> Age
    java.lang.String Allow -> Allow
    java.lang.String CacheControl -> CacheControl
    java.lang.String Connection -> Connection
    java.lang.String ContentEncoding -> ContentEncoding
    java.lang.String ContentLanguage -> ContentLanguage
    java.lang.String ContentLength -> ContentLength
    java.lang.String ContentLocation -> ContentLocation
    java.lang.String ContentMD5 -> ContentMD5
    java.lang.String ContentDisposition -> ContentDisposition
    java.lang.String ContentRange -> ContentRange
    java.lang.String ContentType -> ContentType
    java.lang.String Date -> Date
    java.lang.String ETag -> ETag
    java.lang.String Expires -> Expires
    java.lang.String LastModified -> LastModified
    java.lang.String Link -> Link
    java.lang.String Location -> Location
    java.lang.String P3P -> P3P
    java.lang.String Pragma -> Pragma
    java.lang.String ProxyAuthenticate -> ProxyAuthenticate
    java.lang.String Refresh -> Refresh
    java.lang.String RetryAfter -> RetryAfter
    java.lang.String Server -> Server
    java.lang.String SetCookie -> SetCookie
    java.lang.String Status -> Status
    java.lang.String StrictTransportSecurity -> StrictTransportSecurity
    java.lang.String Trailer -> Trailer
    java.lang.String TransferEncoding -> TransferEncoding
    java.lang.String Upgrade -> Upgrade
    java.lang.String Vary -> Vary
    java.lang.String Via -> Via
    java.lang.String Warning -> Warning
    java.lang.String WWWAuthenticate -> WWWAuthenticate
com.badlogic.gdx.net.HttpStatus -> com.badlogic.gdx.net.HttpStatus:
    int statusCode -> statusCode
    int SC_CONTINUE -> SC_CONTINUE
    int SC_SWITCHING_PROTOCOLS -> SC_SWITCHING_PROTOCOLS
    int SC_PROCESSING -> SC_PROCESSING
    int SC_OK -> SC_OK
    int SC_CREATED -> SC_CREATED
    int SC_ACCEPTED -> SC_ACCEPTED
    int SC_NON_AUTHORITATIVE_INFORMATION -> SC_NON_AUTHORITATIVE_INFORMATION
    int SC_NO_CONTENT -> SC_NO_CONTENT
    int SC_RESET_CONTENT -> SC_RESET_CONTENT
    int SC_PARTIAL_CONTENT -> SC_PARTIAL_CONTENT
    int SC_MULTI_STATUS -> SC_MULTI_STATUS
    int SC_MULTIPLE_CHOICES -> SC_MULTIPLE_CHOICES
    int SC_MOVED_PERMANENTLY -> SC_MOVED_PERMANENTLY
    int SC_MOVED_TEMPORARILY -> SC_MOVED_TEMPORARILY
    int SC_SEE_OTHER -> SC_SEE_OTHER
    int SC_NOT_MODIFIED -> SC_NOT_MODIFIED
    int SC_USE_PROXY -> SC_USE_PROXY
    int SC_TEMPORARY_REDIRECT -> SC_TEMPORARY_REDIRECT
    int SC_BAD_REQUEST -> SC_BAD_REQUEST
    int SC_UNAUTHORIZED -> SC_UNAUTHORIZED
    int SC_PAYMENT_REQUIRED -> SC_PAYMENT_REQUIRED
    int SC_FORBIDDEN -> SC_FORBIDDEN
    int SC_NOT_FOUND -> SC_NOT_FOUND
    int SC_METHOD_NOT_ALLOWED -> SC_METHOD_NOT_ALLOWED
    int SC_NOT_ACCEPTABLE -> SC_NOT_ACCEPTABLE
    int SC_PROXY_AUTHENTICATION_REQUIRED -> SC_PROXY_AUTHENTICATION_REQUIRED
    int SC_REQUEST_TIMEOUT -> SC_REQUEST_TIMEOUT
    int SC_CONFLICT -> SC_CONFLICT
    int SC_GONE -> SC_GONE
    int SC_LENGTH_REQUIRED -> SC_LENGTH_REQUIRED
    int SC_PRECONDITION_FAILED -> SC_PRECONDITION_FAILED
    int SC_REQUEST_TOO_LONG -> SC_REQUEST_TOO_LONG
    int SC_REQUEST_URI_TOO_LONG -> SC_REQUEST_URI_TOO_LONG
    int SC_UNSUPPORTED_MEDIA_TYPE -> SC_UNSUPPORTED_MEDIA_TYPE
    int SC_REQUESTED_RANGE_NOT_SATISFIABLE -> SC_REQUESTED_RANGE_NOT_SATISFIABLE
    int SC_EXPECTATION_FAILED -> SC_EXPECTATION_FAILED
    int SC_INSUFFICIENT_SPACE_ON_RESOURCE -> SC_INSUFFICIENT_SPACE_ON_RESOURCE
    int SC_METHOD_FAILURE -> SC_METHOD_FAILURE
    int SC_UNPROCESSABLE_ENTITY -> SC_UNPROCESSABLE_ENTITY
    int SC_LOCKED -> SC_LOCKED
    int SC_FAILED_DEPENDENCY -> SC_FAILED_DEPENDENCY
    int SC_INTERNAL_SERVER_ERROR -> SC_INTERNAL_SERVER_ERROR
    int SC_NOT_IMPLEMENTED -> SC_NOT_IMPLEMENTED
    int SC_BAD_GATEWAY -> SC_BAD_GATEWAY
    int SC_SERVICE_UNAVAILABLE -> SC_SERVICE_UNAVAILABLE
    int SC_GATEWAY_TIMEOUT -> SC_GATEWAY_TIMEOUT
    int SC_HTTP_VERSION_NOT_SUPPORTED -> SC_HTTP_VERSION_NOT_SUPPORTED
    int SC_INSUFFICIENT_STORAGE -> SC_INSUFFICIENT_STORAGE
    int getStatusCode() -> getStatusCode
com.badlogic.gdx.net.NetJavaImpl -> com.badlogic.gdx.net.NetJavaImpl:
    java.util.concurrent.ExecutorService executorService -> executorService
    com.badlogic.gdx.utils.ObjectMap connections -> connections
    com.badlogic.gdx.utils.ObjectMap listeners -> listeners
    java.util.concurrent.locks.Lock lock -> lock
    void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener) -> sendHttpRequest
    void cancelHttpRequest(com.badlogic.gdx.Net$HttpRequest) -> cancelHttpRequest
com.badlogic.gdx.net.NetJavaImpl$1 -> com.badlogic.gdx.net.NetJavaImpl$1:
    boolean val$doingOutPut -> val$doingOutPut
    com.badlogic.gdx.Net$HttpRequest val$httpRequest -> val$httpRequest
    java.net.HttpURLConnection val$connection -> val$connection
    com.badlogic.gdx.Net$HttpResponseListener val$httpResponseListener -> val$httpResponseListener
    com.badlogic.gdx.net.NetJavaImpl this$0 -> this$0
    void run() -> run
com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse -> com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse:
    java.net.HttpURLConnection connection -> connection
    com.badlogic.gdx.net.HttpStatus status -> status
    byte[] getResult() -> getResult
    java.lang.String getResultAsString() -> getResultAsString
    java.io.InputStream getResultAsStream() -> getResultAsStream
    com.badlogic.gdx.net.HttpStatus getStatus() -> getStatus
    java.lang.String getHeader(java.lang.String) -> getHeader
    java.util.Map getHeaders() -> getHeaders
    java.io.InputStream getInputStream() -> getInputStream
com.badlogic.gdx.net.NetJavaServerSocketImpl -> com.badlogic.gdx.net.NetJavaServerSocketImpl:
    com.badlogic.gdx.Net$Protocol protocol -> protocol
    java.net.ServerSocket server -> server
    com.badlogic.gdx.Net$Protocol getProtocol() -> getProtocol
    com.badlogic.gdx.net.Socket accept(com.badlogic.gdx.net.SocketHints) -> accept
    void dispose() -> dispose
com.badlogic.gdx.net.NetJavaSocketImpl -> com.badlogic.gdx.net.NetJavaSocketImpl:
    java.net.Socket socket -> socket
    void applyHints(com.badlogic.gdx.net.SocketHints) -> applyHints
    boolean isConnected() -> isConnected
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    java.lang.String getRemoteAddress() -> getRemoteAddress
    void dispose() -> dispose
com.badlogic.gdx.net.ServerSocket -> com.badlogic.gdx.net.ServerSocket:
    com.badlogic.gdx.Net$Protocol getProtocol() -> getProtocol
    com.badlogic.gdx.net.Socket accept(com.badlogic.gdx.net.SocketHints) -> accept
com.badlogic.gdx.net.ServerSocketHints -> com.badlogic.gdx.net.ServerSocketHints:
    int backlog -> backlog
    int performancePrefConnectionTime -> performancePrefConnectionTime
    int performancePrefLatency -> performancePrefLatency
    int performancePrefBandwidth -> performancePrefBandwidth
    boolean reuseAddress -> reuseAddress
    int acceptTimeout -> acceptTimeout
    int receiveBufferSize -> receiveBufferSize
com.badlogic.gdx.net.Socket -> com.badlogic.gdx.net.Socket:
    boolean isConnected() -> isConnected
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    java.lang.String getRemoteAddress() -> getRemoteAddress
com.badlogic.gdx.net.SocketHints -> com.badlogic.gdx.net.SocketHints:
    int connectTimeout -> connectTimeout
    int performancePrefConnectionTime -> performancePrefConnectionTime
    int performancePrefLatency -> performancePrefLatency
    int performancePrefBandwidth -> performancePrefBandwidth
    int trafficClass -> trafficClass
    boolean keepAlive -> keepAlive
    boolean tcpNoDelay -> tcpNoDelay
    int sendBufferSize -> sendBufferSize
    int receiveBufferSize -> receiveBufferSize
    boolean linger -> linger
    int lingerDuration -> lingerDuration
    int socketTimeout -> socketTimeout
com.badlogic.gdx.scenes.scene2d.Action -> com.badlogic.gdx.scenes.scene2d.Action:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> actor
    com.badlogic.gdx.scenes.scene2d.Actor target -> target
    com.badlogic.gdx.utils.Pool pool -> pool
    boolean act(float) -> act
    void restart() -> restart
    void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setActor
    com.badlogic.gdx.scenes.scene2d.Actor getActor() -> getActor
    void setTarget(com.badlogic.gdx.scenes.scene2d.Actor) -> setTarget
    com.badlogic.gdx.scenes.scene2d.Actor getTarget() -> getTarget
    void reset() -> reset
    com.badlogic.gdx.utils.Pool getPool() -> getPool
    void setPool(com.badlogic.gdx.utils.Pool) -> setPool
    java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.Actor -> com.badlogic.gdx.scenes.scene2d.Actor:
    com.badlogic.gdx.scenes.scene2d.Stage stage -> stage
    com.badlogic.gdx.scenes.scene2d.Group parent -> parent
    com.badlogic.gdx.utils.DelayedRemovalArray listeners -> listeners
    com.badlogic.gdx.utils.DelayedRemovalArray captureListeners -> captureListeners
    com.badlogic.gdx.utils.Array actions -> actions
    java.lang.String name -> name
    com.badlogic.gdx.scenes.scene2d.Touchable touchable -> touchable
    boolean visible -> visible
    boolean debug -> debug
    float x -> x
    float y -> y
    float width -> width
    float height -> height
    float originX -> originX
    float originY -> originY
    float scaleX -> scaleX
    float scaleY -> scaleY
    float rotation -> rotation
    com.badlogic.gdx.graphics.Color color -> color
    java.lang.Object userObject -> userObject
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void act(float) -> act
    boolean fire(com.badlogic.gdx.scenes.scene2d.Event) -> fire
    boolean notify(com.badlogic.gdx.scenes.scene2d.Event,boolean) -> notify
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    boolean remove() -> remove
    boolean addListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> addListener
    boolean removeListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> removeListener
    com.badlogic.gdx.utils.Array getListeners() -> getListeners
    boolean addCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> addCaptureListener
    boolean removeCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> removeCaptureListener
    com.badlogic.gdx.utils.Array getCaptureListeners() -> getCaptureListeners
    void addAction(com.badlogic.gdx.scenes.scene2d.Action) -> addAction
    void removeAction(com.badlogic.gdx.scenes.scene2d.Action) -> removeAction
    com.badlogic.gdx.utils.Array getActions() -> getActions
    void clearActions() -> clearActions
    void clearListeners() -> clearListeners
    void clear() -> clear
    com.badlogic.gdx.scenes.scene2d.Stage getStage() -> getStage
    void setStage(com.badlogic.gdx.scenes.scene2d.Stage) -> setStage
    boolean isDescendantOf(com.badlogic.gdx.scenes.scene2d.Actor) -> isDescendantOf
    boolean isAscendantOf(com.badlogic.gdx.scenes.scene2d.Actor) -> isAscendantOf
    boolean hasParent() -> hasParent
    com.badlogic.gdx.scenes.scene2d.Group getParent() -> getParent
    void setParent(com.badlogic.gdx.scenes.scene2d.Group) -> setParent
    boolean isTouchable() -> isTouchable
    com.badlogic.gdx.scenes.scene2d.Touchable getTouchable() -> getTouchable
    void setTouchable(com.badlogic.gdx.scenes.scene2d.Touchable) -> setTouchable
    boolean isVisible() -> isVisible
    void setVisible(boolean) -> setVisible
    java.lang.Object getUserObject() -> getUserObject
    void setUserObject(java.lang.Object) -> setUserObject
    float getX() -> getX
    float getX(int) -> getX
    void setX(float) -> setX
    float getY() -> getY
    void setY(float) -> setY
    float getY(int) -> getY
    void setPosition(float,float) -> setPosition
    void setPosition(float,float,int) -> setPosition
    void moveBy(float,float) -> moveBy
    float getWidth() -> getWidth
    void setWidth(float) -> setWidth
    float getHeight() -> getHeight
    void setHeight(float) -> setHeight
    float getTop() -> getTop
    float getRight() -> getRight
    void positionChanged() -> positionChanged
    void sizeChanged() -> sizeChanged
    void setSize(float,float) -> setSize
    void sizeBy(float) -> sizeBy
    void sizeBy(float,float) -> sizeBy
    void setBounds(float,float,float,float) -> setBounds
    float getOriginX() -> getOriginX
    void setOriginX(float) -> setOriginX
    float getOriginY() -> getOriginY
    void setOriginY(float) -> setOriginY
    void setOrigin(float,float) -> setOrigin
    void setOrigin(int) -> setOrigin
    float getScaleX() -> getScaleX
    void setScaleX(float) -> setScaleX
    float getScaleY() -> getScaleY
    void setScaleY(float) -> setScaleY
    void setScale(float) -> setScale
    void setScale(float,float) -> setScale
    void scaleBy(float) -> scaleBy
    void scaleBy(float,float) -> scaleBy
    float getRotation() -> getRotation
    void setRotation(float) -> setRotation
    void rotateBy(float) -> rotateBy
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    void toFront() -> toFront
    void toBack() -> toBack
    void setZIndex(int) -> setZIndex
    int getZIndex() -> getZIndex
    boolean clipBegin() -> clipBegin
    boolean clipBegin(float,float,float,float) -> clipBegin
    void clipEnd() -> clipEnd
    com.badlogic.gdx.math.Vector2 screenToLocalCoordinates(com.badlogic.gdx.math.Vector2) -> screenToLocalCoordinates
    com.badlogic.gdx.math.Vector2 stageToLocalCoordinates(com.badlogic.gdx.math.Vector2) -> stageToLocalCoordinates
    com.badlogic.gdx.math.Vector2 localToStageCoordinates(com.badlogic.gdx.math.Vector2) -> localToStageCoordinates
    com.badlogic.gdx.math.Vector2 localToParentCoordinates(com.badlogic.gdx.math.Vector2) -> localToParentCoordinates
    com.badlogic.gdx.math.Vector2 localToAscendantCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2) -> localToAscendantCoordinates
    com.badlogic.gdx.math.Vector2 parentToLocalCoordinates(com.badlogic.gdx.math.Vector2) -> parentToLocalCoordinates
    void drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer) -> drawDebug
    void drawDebugBounds(com.badlogic.gdx.graphics.glutils.ShapeRenderer) -> drawDebugBounds
    void setDebug(boolean) -> setDebug
    boolean getDebug() -> getDebug
    com.badlogic.gdx.scenes.scene2d.Actor debug() -> debug
    java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.Event -> com.badlogic.gdx.scenes.scene2d.Event:
    com.badlogic.gdx.scenes.scene2d.Stage stage -> stage
    com.badlogic.gdx.scenes.scene2d.Actor targetActor -> targetActor
    com.badlogic.gdx.scenes.scene2d.Actor listenerActor -> listenerActor
    boolean capture -> capture
    boolean bubbles -> bubbles
    boolean handled -> handled
    boolean stopped -> stopped
    boolean cancelled -> cancelled
    void handle() -> handle
    void cancel() -> cancel
    void stop() -> stop
    void reset() -> reset
    com.badlogic.gdx.scenes.scene2d.Actor getTarget() -> getTarget
    void setTarget(com.badlogic.gdx.scenes.scene2d.Actor) -> setTarget
    com.badlogic.gdx.scenes.scene2d.Actor getListenerActor() -> getListenerActor
    void setListenerActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setListenerActor
    boolean getBubbles() -> getBubbles
    void setBubbles(boolean) -> setBubbles
    boolean isHandled() -> isHandled
    boolean isStopped() -> isStopped
    boolean isCancelled() -> isCancelled
    void setCapture(boolean) -> setCapture
    boolean isCapture() -> isCapture
    void setStage(com.badlogic.gdx.scenes.scene2d.Stage) -> setStage
    com.badlogic.gdx.scenes.scene2d.Stage getStage() -> getStage
com.badlogic.gdx.scenes.scene2d.EventListener -> com.badlogic.gdx.scenes.scene2d.EventListener:
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
com.badlogic.gdx.scenes.scene2d.Group -> com.badlogic.gdx.scenes.scene2d.Group:
    com.badlogic.gdx.math.Vector2 tmp -> tmp
    com.badlogic.gdx.utils.SnapshotArray children -> children
    com.badlogic.gdx.math.Affine2 worldTransform -> worldTransform
    com.badlogic.gdx.math.Matrix4 computedTransform -> computedTransform
    com.badlogic.gdx.math.Matrix4 oldTransform -> oldTransform
    boolean transform -> transform
    com.badlogic.gdx.math.Rectangle cullingArea -> cullingArea
    void act(float) -> act
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void drawChildren(com.badlogic.gdx.graphics.g2d.Batch,float) -> drawChildren
    void drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer) -> drawDebug
    void drawDebugChildren(com.badlogic.gdx.graphics.glutils.ShapeRenderer) -> drawDebugChildren
    com.badlogic.gdx.math.Matrix4 computeTransform() -> computeTransform
    void applyTransform(com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.math.Matrix4) -> applyTransform
    void resetTransform(com.badlogic.gdx.graphics.g2d.Batch) -> resetTransform
    void applyTransform(com.badlogic.gdx.graphics.glutils.ShapeRenderer,com.badlogic.gdx.math.Matrix4) -> applyTransform
    void resetTransform(com.badlogic.gdx.graphics.glutils.ShapeRenderer) -> resetTransform
    void setCullingArea(com.badlogic.gdx.math.Rectangle) -> setCullingArea
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    void childrenChanged() -> childrenChanged
    void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> addActor
    void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAt
    void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorBefore
    void addActorAfter(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAfter
    boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
    void clearChildren() -> clearChildren
    void clear() -> clear
    com.badlogic.gdx.scenes.scene2d.Actor findActor(java.lang.String) -> findActor
    void setStage(com.badlogic.gdx.scenes.scene2d.Stage) -> setStage
    boolean swapActor(int,int) -> swapActor
    boolean swapActor(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> swapActor
    com.badlogic.gdx.utils.SnapshotArray getChildren() -> getChildren
    boolean hasChildren() -> hasChildren
    void setTransform(boolean) -> setTransform
    boolean isTransform() -> isTransform
    com.badlogic.gdx.math.Vector2 localToDescendantCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2) -> localToDescendantCoordinates
    void setDebug(boolean,boolean) -> setDebug
    com.badlogic.gdx.scenes.scene2d.Group debugAll() -> debugAll
    void print() -> print
    void print(java.lang.String) -> print
com.badlogic.gdx.scenes.scene2d.InputEvent -> com.badlogic.gdx.scenes.scene2d.InputEvent:
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type type -> type
    float stageX -> stageX
    float stageY -> stageY
    int pointer -> pointer
    int button -> button
    int keyCode -> keyCode
    int scrollAmount -> scrollAmount
    char character -> character
    com.badlogic.gdx.scenes.scene2d.Actor relatedActor -> relatedActor
    void reset() -> reset
    float getStageX() -> getStageX
    void setStageX(float) -> setStageX
    float getStageY() -> getStageY
    void setStageY(float) -> setStageY
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type getType() -> getType
    void setType(com.badlogic.gdx.scenes.scene2d.InputEvent$Type) -> setType
    int getPointer() -> getPointer
    void setPointer(int) -> setPointer
    int getButton() -> getButton
    void setButton(int) -> setButton
    int getKeyCode() -> getKeyCode
    void setKeyCode(int) -> setKeyCode
    char getCharacter() -> getCharacter
    void setCharacter(char) -> setCharacter
    int getScrollAmount() -> getScrollAmount
    void setScrollAmount(int) -> setScrollAmount
    com.badlogic.gdx.scenes.scene2d.Actor getRelatedActor() -> getRelatedActor
    void setRelatedActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setRelatedActor
    com.badlogic.gdx.math.Vector2 toCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2) -> toCoordinates
    boolean isTouchFocusCancel() -> isTouchFocusCancel
    java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.InputEvent$Type -> com.badlogic.gdx.scenes.scene2d.InputEvent$Type:
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type touchDown -> touchDown
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type touchUp -> touchUp
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type touchDragged -> touchDragged
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type mouseMoved -> mouseMoved
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type enter -> enter
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type exit -> exit
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type scrolled -> scrolled
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type keyDown -> keyDown
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type keyUp -> keyUp
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type keyTyped -> keyTyped
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type[] $VALUES -> $VALUES
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type[] values() -> values
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.scenes.scene2d.InputListener -> com.badlogic.gdx.scenes.scene2d.InputListener:
    com.badlogic.gdx.math.Vector2 tmpCoords -> tmpCoords
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> mouseMoved
    void enter(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> enter
    void exit(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> exit
    boolean scrolled(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> scrolled
    boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyDown
    boolean keyUp(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyUp
    boolean keyTyped(com.badlogic.gdx.scenes.scene2d.InputEvent,char) -> keyTyped
com.badlogic.gdx.scenes.scene2d.InputListener$1 -> com.badlogic.gdx.scenes.scene2d.InputListener$1:
    int[] $SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type -> $SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type
com.badlogic.gdx.scenes.scene2d.Stage -> com.badlogic.gdx.scenes.scene2d.Stage:
    boolean debug -> debug
    com.badlogic.gdx.utils.viewport.Viewport viewport -> viewport
    com.badlogic.gdx.graphics.g2d.Batch batch -> batch
    boolean ownsBatch -> ownsBatch
    com.badlogic.gdx.scenes.scene2d.Group root -> root
    com.badlogic.gdx.math.Vector2 tempCoords -> tempCoords
    com.badlogic.gdx.scenes.scene2d.Actor[] pointerOverActors -> pointerOverActors
    boolean[] pointerTouched -> pointerTouched
    int[] pointerScreenX -> pointerScreenX
    int[] pointerScreenY -> pointerScreenY
    int mouseScreenX -> mouseScreenX
    int mouseScreenY -> mouseScreenY
    com.badlogic.gdx.scenes.scene2d.Actor mouseOverActor -> mouseOverActor
    com.badlogic.gdx.scenes.scene2d.Actor keyboardFocus -> keyboardFocus
    com.badlogic.gdx.scenes.scene2d.Actor scrollFocus -> scrollFocus
    com.badlogic.gdx.utils.SnapshotArray touchFocuses -> touchFocuses
    boolean actionsRequestRendering -> actionsRequestRendering
    com.badlogic.gdx.graphics.glutils.ShapeRenderer debugShapes -> debugShapes
    boolean debugInvisible -> debugInvisible
    boolean debugAll -> debugAll
    boolean debugUnderMouse -> debugUnderMouse
    boolean debugParentUnderMouse -> debugParentUnderMouse
    com.badlogic.gdx.scenes.scene2d.ui.Table$Debug debugTableUnderMouse -> debugTableUnderMouse
    com.badlogic.gdx.graphics.Color debugColor -> debugColor
    void draw() -> draw
    void drawDebug() -> drawDebug
    void disableDebug(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> disableDebug
    void act() -> act
    void act(float) -> act
    com.badlogic.gdx.scenes.scene2d.Actor fireEnterAndExit(com.badlogic.gdx.scenes.scene2d.Actor,int,int,int) -> fireEnterAndExit
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchDragged(int,int,int) -> touchDragged
    boolean touchUp(int,int,int,int) -> touchUp
    boolean mouseMoved(int,int) -> mouseMoved
    boolean scrolled(int) -> scrolled
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
    boolean keyTyped(char) -> keyTyped
    void addTouchFocus(com.badlogic.gdx.scenes.scene2d.EventListener,com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor,int,int) -> addTouchFocus
    void removeTouchFocus(com.badlogic.gdx.scenes.scene2d.EventListener,com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor,int,int) -> removeTouchFocus
    void cancelTouchFocus(com.badlogic.gdx.scenes.scene2d.Actor) -> cancelTouchFocus
    void cancelTouchFocus() -> cancelTouchFocus
    void cancelTouchFocusExcept(com.badlogic.gdx.scenes.scene2d.EventListener,com.badlogic.gdx.scenes.scene2d.Actor) -> cancelTouchFocusExcept
    void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> addActor
    void addAction(com.badlogic.gdx.scenes.scene2d.Action) -> addAction
    com.badlogic.gdx.utils.Array getActors() -> getActors
    boolean addListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> addListener
    boolean removeListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> removeListener
    boolean addCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> addCaptureListener
    boolean removeCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> removeCaptureListener
    void clear() -> clear
    void unfocusAll() -> unfocusAll
    void unfocus(com.badlogic.gdx.scenes.scene2d.Actor) -> unfocus
    void setKeyboardFocus(com.badlogic.gdx.scenes.scene2d.Actor) -> setKeyboardFocus
    com.badlogic.gdx.scenes.scene2d.Actor getKeyboardFocus() -> getKeyboardFocus
    void setScrollFocus(com.badlogic.gdx.scenes.scene2d.Actor) -> setScrollFocus
    com.badlogic.gdx.scenes.scene2d.Actor getScrollFocus() -> getScrollFocus
    com.badlogic.gdx.graphics.g2d.Batch getBatch() -> getBatch
    com.badlogic.gdx.utils.viewport.Viewport getViewport() -> getViewport
    void setViewport(com.badlogic.gdx.utils.viewport.Viewport) -> setViewport
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    com.badlogic.gdx.graphics.Camera getCamera() -> getCamera
    com.badlogic.gdx.scenes.scene2d.Group getRoot() -> getRoot
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    com.badlogic.gdx.math.Vector2 screenToStageCoordinates(com.badlogic.gdx.math.Vector2) -> screenToStageCoordinates
    com.badlogic.gdx.math.Vector2 stageToScreenCoordinates(com.badlogic.gdx.math.Vector2) -> stageToScreenCoordinates
    com.badlogic.gdx.math.Vector2 toScreenCoordinates(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Matrix4) -> toScreenCoordinates
    void calculateScissors(com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle) -> calculateScissors
    void setActionsRequestRendering(boolean) -> setActionsRequestRendering
    boolean getActionsRequestRendering() -> getActionsRequestRendering
    com.badlogic.gdx.graphics.Color getDebugColor() -> getDebugColor
    void setDebugInvisible(boolean) -> setDebugInvisible
    void setDebugAll(boolean) -> setDebugAll
    void setDebugUnderMouse(boolean) -> setDebugUnderMouse
    void setDebugParentUnderMouse(boolean) -> setDebugParentUnderMouse
    void setDebugTableUnderMouse(com.badlogic.gdx.scenes.scene2d.ui.Table$Debug) -> setDebugTableUnderMouse
    void setDebugTableUnderMouse(boolean) -> setDebugTableUnderMouse
    void dispose() -> dispose
com.badlogic.gdx.scenes.scene2d.Stage$TouchFocus -> com.badlogic.gdx.scenes.scene2d.Stage$TouchFocus:
    com.badlogic.gdx.scenes.scene2d.EventListener listener -> listener
    com.badlogic.gdx.scenes.scene2d.Actor listenerActor -> listenerActor
    com.badlogic.gdx.scenes.scene2d.Actor target -> target
    int pointer -> pointer
    int button -> button
    void reset() -> reset
com.badlogic.gdx.scenes.scene2d.Touchable -> com.badlogic.gdx.scenes.scene2d.Touchable:
    com.badlogic.gdx.scenes.scene2d.Touchable enabled -> enabled
    com.badlogic.gdx.scenes.scene2d.Touchable disabled -> disabled
    com.badlogic.gdx.scenes.scene2d.Touchable childrenOnly -> childrenOnly
    com.badlogic.gdx.scenes.scene2d.Touchable[] $VALUES -> $VALUES
    com.badlogic.gdx.scenes.scene2d.Touchable[] values() -> values
    com.badlogic.gdx.scenes.scene2d.Touchable valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.scenes.scene2d.actions.Actions -> com.badlogic.gdx.scenes.scene2d.actions.Actions:
    com.badlogic.gdx.scenes.scene2d.Action action(java.lang.Class) -> action
    com.badlogic.gdx.scenes.scene2d.actions.AddAction addAction(com.badlogic.gdx.scenes.scene2d.Action) -> addAction
    com.badlogic.gdx.scenes.scene2d.actions.AddAction addAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Actor) -> addAction
    com.badlogic.gdx.scenes.scene2d.actions.RemoveAction removeAction(com.badlogic.gdx.scenes.scene2d.Action) -> removeAction
    com.badlogic.gdx.scenes.scene2d.actions.RemoveAction removeAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Actor) -> removeAction
    com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveTo(float,float) -> moveTo
    com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveTo(float,float,float) -> moveTo
    com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveTo(float,float,float,com.badlogic.gdx.math.Interpolation) -> moveTo
    com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveToAligned(float,float,int) -> moveToAligned
    com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveToAligned(float,float,int,float) -> moveToAligned
    com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveToAligned(float,float,int,float,com.badlogic.gdx.math.Interpolation) -> moveToAligned
    com.badlogic.gdx.scenes.scene2d.actions.MoveByAction moveBy(float,float) -> moveBy
    com.badlogic.gdx.scenes.scene2d.actions.MoveByAction moveBy(float,float,float) -> moveBy
    com.badlogic.gdx.scenes.scene2d.actions.MoveByAction moveBy(float,float,float,com.badlogic.gdx.math.Interpolation) -> moveBy
    com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo(float,float) -> sizeTo
    com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo(float,float,float) -> sizeTo
    com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo(float,float,float,com.badlogic.gdx.math.Interpolation) -> sizeTo
    com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy(float,float) -> sizeBy
    com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy(float,float,float) -> sizeBy
    com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy(float,float,float,com.badlogic.gdx.math.Interpolation) -> sizeBy
    com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float) -> scaleTo
    com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float,float) -> scaleTo
    com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float,float,com.badlogic.gdx.math.Interpolation) -> scaleTo
    com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy(float,float) -> scaleBy
    com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy(float,float,float) -> scaleBy
    com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy(float,float,float,com.badlogic.gdx.math.Interpolation) -> scaleBy
    com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo(float) -> rotateTo
    com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo(float,float) -> rotateTo
    com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo(float,float,com.badlogic.gdx.math.Interpolation) -> rotateTo
    com.badlogic.gdx.scenes.scene2d.actions.RotateByAction rotateBy(float) -> rotateBy
    com.badlogic.gdx.scenes.scene2d.actions.RotateByAction rotateBy(float,float) -> rotateBy
    com.badlogic.gdx.scenes.scene2d.actions.RotateByAction rotateBy(float,float,com.badlogic.gdx.math.Interpolation) -> rotateBy
    com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color) -> color
    com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color,float) -> color
    com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color,float,com.badlogic.gdx.math.Interpolation) -> color
    com.badlogic.gdx.scenes.scene2d.actions.AlphaAction alpha(float) -> alpha
    com.badlogic.gdx.scenes.scene2d.actions.AlphaAction alpha(float,float) -> alpha
    com.badlogic.gdx.scenes.scene2d.actions.AlphaAction alpha(float,float,com.badlogic.gdx.math.Interpolation) -> alpha
    com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeOut(float) -> fadeOut
    com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeOut(float,com.badlogic.gdx.math.Interpolation) -> fadeOut
    com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeIn(float) -> fadeIn
    com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeIn(float,com.badlogic.gdx.math.Interpolation) -> fadeIn
    com.badlogic.gdx.scenes.scene2d.actions.VisibleAction show() -> show
    com.badlogic.gdx.scenes.scene2d.actions.VisibleAction hide() -> hide
    com.badlogic.gdx.scenes.scene2d.actions.VisibleAction visible(boolean) -> visible
    com.badlogic.gdx.scenes.scene2d.actions.TouchableAction touchable(com.badlogic.gdx.scenes.scene2d.Touchable) -> touchable
    com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction removeActor() -> removeActor
    com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
    com.badlogic.gdx.scenes.scene2d.actions.DelayAction delay(float) -> delay
    com.badlogic.gdx.scenes.scene2d.actions.DelayAction delay(float,com.badlogic.gdx.scenes.scene2d.Action) -> delay
    com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction timeScale(float,com.badlogic.gdx.scenes.scene2d.Action) -> timeScale
    com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action) -> sequence
    com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> sequence
    com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> sequence
    com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> sequence
    com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> sequence
    com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action[]) -> sequence
    com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence() -> sequence
    com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action) -> parallel
    com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> parallel
    com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> parallel
    com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> parallel
    com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> parallel
    com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action[]) -> parallel
    com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel() -> parallel
    com.badlogic.gdx.scenes.scene2d.actions.RepeatAction repeat(int,com.badlogic.gdx.scenes.scene2d.Action) -> repeat
    com.badlogic.gdx.scenes.scene2d.actions.RepeatAction forever(com.badlogic.gdx.scenes.scene2d.Action) -> forever
    com.badlogic.gdx.scenes.scene2d.actions.RunnableAction run(java.lang.Runnable) -> run
    com.badlogic.gdx.scenes.scene2d.actions.LayoutAction layout(boolean) -> layout
    com.badlogic.gdx.scenes.scene2d.actions.AfterAction after(com.badlogic.gdx.scenes.scene2d.Action) -> after
    com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction addListener(com.badlogic.gdx.scenes.scene2d.EventListener,boolean) -> addListener
    com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction addListener(com.badlogic.gdx.scenes.scene2d.EventListener,boolean,com.badlogic.gdx.scenes.scene2d.Actor) -> addListener
    com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction removeListener(com.badlogic.gdx.scenes.scene2d.EventListener,boolean) -> removeListener
    com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction removeListener(com.badlogic.gdx.scenes.scene2d.EventListener,boolean,com.badlogic.gdx.scenes.scene2d.Actor) -> removeListener
com.badlogic.gdx.scenes.scene2d.actions.AddAction -> com.badlogic.gdx.scenes.scene2d.actions.AddAction:
    com.badlogic.gdx.scenes.scene2d.Action action -> action
    boolean act(float) -> act
    com.badlogic.gdx.scenes.scene2d.Action getAction() -> getAction
    void setAction(com.badlogic.gdx.scenes.scene2d.Action) -> setAction
    void restart() -> restart
    void reset() -> reset
com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction -> com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction:
    com.badlogic.gdx.scenes.scene2d.EventListener listener -> listener
    boolean capture -> capture
    boolean act(float) -> act
    com.badlogic.gdx.scenes.scene2d.EventListener getListener() -> getListener
    void setListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> setListener
    boolean getCapture() -> getCapture
    void setCapture(boolean) -> setCapture
    void reset() -> reset
com.badlogic.gdx.scenes.scene2d.actions.AfterAction -> com.badlogic.gdx.scenes.scene2d.actions.AfterAction:
    com.badlogic.gdx.utils.Array waitForActions -> waitForActions
    void setTarget(com.badlogic.gdx.scenes.scene2d.Actor) -> setTarget
    void restart() -> restart
    boolean delegate(float) -> delegate
com.badlogic.gdx.scenes.scene2d.actions.AlphaAction -> com.badlogic.gdx.scenes.scene2d.actions.AlphaAction:
    float start -> start
    float end -> end
    com.badlogic.gdx.graphics.Color color -> color
    void begin() -> begin
    void update(float) -> update
    void reset() -> reset
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
com.badlogic.gdx.scenes.scene2d.actions.ColorAction -> com.badlogic.gdx.scenes.scene2d.actions.ColorAction:
    float startR -> startR
    float startG -> startG
    float startB -> startB
    float startA -> startA
    com.badlogic.gdx.graphics.Color color -> color
    com.badlogic.gdx.graphics.Color end -> end
    void begin() -> begin
    void update(float) -> update
    void reset() -> reset
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    com.badlogic.gdx.graphics.Color getEndColor() -> getEndColor
    void setEndColor(com.badlogic.gdx.graphics.Color) -> setEndColor
com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction -> com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction:
    int count -> count
    int current -> current
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
com.badlogic.gdx.scenes.scene2d.actions.DelayAction -> com.badlogic.gdx.scenes.scene2d.actions.DelayAction:
    float duration -> duration
    float time -> time
    boolean delegate(float) -> delegate
    void finish() -> finish
    void restart() -> restart
    float getTime() -> getTime
    void setTime(float) -> setTime
    float getDuration() -> getDuration
    void setDuration(float) -> setDuration
com.badlogic.gdx.scenes.scene2d.actions.DelegateAction -> com.badlogic.gdx.scenes.scene2d.actions.DelegateAction:
    com.badlogic.gdx.scenes.scene2d.Action action -> action
    void setAction(com.badlogic.gdx.scenes.scene2d.Action) -> setAction
    com.badlogic.gdx.scenes.scene2d.Action getAction() -> getAction
    boolean delegate(float) -> delegate
    boolean act(float) -> act
    void restart() -> restart
    void reset() -> reset
    void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setActor
    void setTarget(com.badlogic.gdx.scenes.scene2d.Actor) -> setTarget
    java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.actions.EventAction -> com.badlogic.gdx.scenes.scene2d.actions.EventAction:
    java.lang.Class eventClass -> eventClass
    boolean result -> result
    boolean active -> active
    com.badlogic.gdx.scenes.scene2d.EventListener listener -> listener
    void restart() -> restart
    void setTarget(com.badlogic.gdx.scenes.scene2d.Actor) -> setTarget
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
    boolean act(float) -> act
    boolean isActive() -> isActive
    void setActive(boolean) -> setActive
com.badlogic.gdx.scenes.scene2d.actions.EventAction$1 -> com.badlogic.gdx.scenes.scene2d.actions.EventAction$1:
    com.badlogic.gdx.scenes.scene2d.actions.EventAction this$0 -> this$0
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
com.badlogic.gdx.scenes.scene2d.actions.FloatAction -> com.badlogic.gdx.scenes.scene2d.actions.FloatAction:
    float start -> start
    float end -> end
    float value -> value
    void begin() -> begin
    void update(float) -> update
    float getValue() -> getValue
    void setValue(float) -> setValue
    float getStart() -> getStart
    void setStart(float) -> setStart
    float getEnd() -> getEnd
    void setEnd(float) -> setEnd
com.badlogic.gdx.scenes.scene2d.actions.IntAction -> com.badlogic.gdx.scenes.scene2d.actions.IntAction:
    int start -> start
    int end -> end
    int value -> value
    void begin() -> begin
    void update(float) -> update
    int getValue() -> getValue
    void setValue(int) -> setValue
    int getStart() -> getStart
    void setStart(int) -> setStart
    int getEnd() -> getEnd
    void setEnd(int) -> setEnd
com.badlogic.gdx.scenes.scene2d.actions.LayoutAction -> com.badlogic.gdx.scenes.scene2d.actions.LayoutAction:
    boolean enabled -> enabled
    void setTarget(com.badlogic.gdx.scenes.scene2d.Actor) -> setTarget
    boolean act(float) -> act
    boolean isEnabled() -> isEnabled
    void setLayoutEnabled(boolean) -> setLayoutEnabled
com.badlogic.gdx.scenes.scene2d.actions.MoveByAction -> com.badlogic.gdx.scenes.scene2d.actions.MoveByAction:
    float amountX -> amountX
    float amountY -> amountY
    void updateRelative(float) -> updateRelative
    void setAmount(float,float) -> setAmount
    float getAmountX() -> getAmountX
    void setAmountX(float) -> setAmountX
    float getAmountY() -> getAmountY
    void setAmountY(float) -> setAmountY
com.badlogic.gdx.scenes.scene2d.actions.MoveToAction -> com.badlogic.gdx.scenes.scene2d.actions.MoveToAction:
    float startX -> startX
    float startY -> startY
    float endX -> endX
    float endY -> endY
    int alignment -> alignment
    void begin() -> begin
    void update(float) -> update
    void reset() -> reset
    void setPosition(float,float) -> setPosition
    void setPosition(float,float,int) -> setPosition
    float getX() -> getX
    void setX(float) -> setX
    float getY() -> getY
    void setY(float) -> setY
    int getAlignment() -> getAlignment
    void setAlignment(int) -> setAlignment
com.badlogic.gdx.scenes.scene2d.actions.ParallelAction -> com.badlogic.gdx.scenes.scene2d.actions.ParallelAction:
    com.badlogic.gdx.utils.Array actions -> actions
    boolean complete -> complete
    boolean act(float) -> act
    void restart() -> restart
    void reset() -> reset
    void addAction(com.badlogic.gdx.scenes.scene2d.Action) -> addAction
    void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setActor
    com.badlogic.gdx.utils.Array getActions() -> getActions
    java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction -> com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction:
    float lastPercent -> lastPercent
    void begin() -> begin
    void update(float) -> update
    void updateRelative(float) -> updateRelative
com.badlogic.gdx.scenes.scene2d.actions.RemoveAction -> com.badlogic.gdx.scenes.scene2d.actions.RemoveAction:
    com.badlogic.gdx.scenes.scene2d.Action action -> action
    boolean act(float) -> act
    com.badlogic.gdx.scenes.scene2d.Action getAction() -> getAction
    void setAction(com.badlogic.gdx.scenes.scene2d.Action) -> setAction
    void reset() -> reset
com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction -> com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction:
    boolean removed -> removed
    boolean act(float) -> act
    void restart() -> restart
com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction -> com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction:
    com.badlogic.gdx.scenes.scene2d.EventListener listener -> listener
    boolean capture -> capture
    boolean act(float) -> act
    com.badlogic.gdx.scenes.scene2d.EventListener getListener() -> getListener
    void setListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> setListener
    boolean getCapture() -> getCapture
    void setCapture(boolean) -> setCapture
    void reset() -> reset
com.badlogic.gdx.scenes.scene2d.actions.RepeatAction -> com.badlogic.gdx.scenes.scene2d.actions.RepeatAction:
    int FOREVER -> FOREVER
    int repeatCount -> repeatCount
    int executedCount -> executedCount
    boolean finished -> finished
    boolean delegate(float) -> delegate
    void finish() -> finish
    void restart() -> restart
    void setCount(int) -> setCount
    int getCount() -> getCount
com.badlogic.gdx.scenes.scene2d.actions.RotateByAction -> com.badlogic.gdx.scenes.scene2d.actions.RotateByAction:
    float amount -> amount
    void updateRelative(float) -> updateRelative
    float getAmount() -> getAmount
    void setAmount(float) -> setAmount
com.badlogic.gdx.scenes.scene2d.actions.RotateToAction -> com.badlogic.gdx.scenes.scene2d.actions.RotateToAction:
    float start -> start
    float end -> end
    void begin() -> begin
    void update(float) -> update
    float getRotation() -> getRotation
    void setRotation(float) -> setRotation
com.badlogic.gdx.scenes.scene2d.actions.RunnableAction -> com.badlogic.gdx.scenes.scene2d.actions.RunnableAction:
    java.lang.Runnable runnable -> runnable
    boolean ran -> ran
    boolean act(float) -> act
    void run() -> run
    void restart() -> restart
    void reset() -> reset
    java.lang.Runnable getRunnable() -> getRunnable
    void setRunnable(java.lang.Runnable) -> setRunnable
com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction -> com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction:
    float amountX -> amountX
    float amountY -> amountY
    void updateRelative(float) -> updateRelative
    void setAmount(float,float) -> setAmount
    void setAmount(float) -> setAmount
    float getAmountX() -> getAmountX
    void setAmountX(float) -> setAmountX
    float getAmountY() -> getAmountY
    void setAmountY(float) -> setAmountY
com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction -> com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction:
    float startX -> startX
    float startY -> startY
    float endX -> endX
    float endY -> endY
    void begin() -> begin
    void update(float) -> update
    void setScale(float,float) -> setScale
    void setScale(float) -> setScale
    float getX() -> getX
    void setX(float) -> setX
    float getY() -> getY
    void setY(float) -> setY
com.badlogic.gdx.scenes.scene2d.actions.SequenceAction -> com.badlogic.gdx.scenes.scene2d.actions.SequenceAction:
    int index -> index
    boolean act(float) -> act
    void restart() -> restart
com.badlogic.gdx.scenes.scene2d.actions.SizeByAction -> com.badlogic.gdx.scenes.scene2d.actions.SizeByAction:
    float amountWidth -> amountWidth
    float amountHeight -> amountHeight
    void updateRelative(float) -> updateRelative
    void setAmount(float,float) -> setAmount
    float getAmountWidth() -> getAmountWidth
    void setAmountWidth(float) -> setAmountWidth
    float getAmountHeight() -> getAmountHeight
    void setAmountHeight(float) -> setAmountHeight
com.badlogic.gdx.scenes.scene2d.actions.SizeToAction -> com.badlogic.gdx.scenes.scene2d.actions.SizeToAction:
    float startWidth -> startWidth
    float startHeight -> startHeight
    float endWidth -> endWidth
    float endHeight -> endHeight
    void begin() -> begin
    void update(float) -> update
    void setSize(float,float) -> setSize
    float getWidth() -> getWidth
    void setWidth(float) -> setWidth
    float getHeight() -> getHeight
    void setHeight(float) -> setHeight
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction -> com.badlogic.gdx.scenes.scene2d.actions.TemporalAction:
    float duration -> duration
    float time -> time
    com.badlogic.gdx.math.Interpolation interpolation -> interpolation
    boolean reverse -> reverse
    boolean began -> began
    boolean complete -> complete
    boolean act(float) -> act
    void begin() -> begin
    void end() -> end
    void update(float) -> update
    void finish() -> finish
    void restart() -> restart
    void reset() -> reset
    float getTime() -> getTime
    void setTime(float) -> setTime
    float getDuration() -> getDuration
    void setDuration(float) -> setDuration
    com.badlogic.gdx.math.Interpolation getInterpolation() -> getInterpolation
    void setInterpolation(com.badlogic.gdx.math.Interpolation) -> setInterpolation
    boolean isReverse() -> isReverse
    void setReverse(boolean) -> setReverse
com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction -> com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction:
    float scale -> scale
    boolean delegate(float) -> delegate
    float getScale() -> getScale
    void setScale(float) -> setScale
com.badlogic.gdx.scenes.scene2d.actions.TouchableAction -> com.badlogic.gdx.scenes.scene2d.actions.TouchableAction:
    com.badlogic.gdx.scenes.scene2d.Touchable touchable -> touchable
    boolean act(float) -> act
    com.badlogic.gdx.scenes.scene2d.Touchable getTouchable() -> getTouchable
    void setTouchable(com.badlogic.gdx.scenes.scene2d.Touchable) -> setTouchable
com.badlogic.gdx.scenes.scene2d.actions.VisibleAction -> com.badlogic.gdx.scenes.scene2d.actions.VisibleAction:
    boolean visible -> visible
    boolean act(float) -> act
    boolean isVisible() -> isVisible
    void setVisible(boolean) -> setVisible
com.badlogic.gdx.scenes.scene2d.ui.Button -> com.badlogic.gdx.scenes.scene2d.ui.Button:
    com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle style -> style
    boolean isChecked -> isChecked
    boolean isDisabled -> isDisabled
    com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup buttonGroup -> buttonGroup
    com.badlogic.gdx.scenes.scene2d.utils.ClickListener clickListener -> clickListener
    void initialize() -> initialize
    void setChecked(boolean) -> setChecked
    void toggle() -> toggle
    boolean isChecked() -> isChecked
    boolean isPressed() -> isPressed
    boolean isOver() -> isOver
    com.badlogic.gdx.scenes.scene2d.utils.ClickListener getClickListener() -> getClickListener
    boolean isDisabled() -> isDisabled
    void setDisabled(boolean) -> setDisabled
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> getStyle
    com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup getButtonGroup() -> getButtonGroup
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
com.badlogic.gdx.scenes.scene2d.ui.Button$1 -> com.badlogic.gdx.scenes.scene2d.ui.Button$1:
    com.badlogic.gdx.scenes.scene2d.ui.Button this$0 -> this$0
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle -> com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable up -> up
    com.badlogic.gdx.scenes.scene2d.utils.Drawable down -> down
    com.badlogic.gdx.scenes.scene2d.utils.Drawable over -> over
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checked -> checked
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkedOver -> checkedOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable disabled -> disabled
    float pressedOffsetX -> pressedOffsetX
    float pressedOffsetY -> pressedOffsetY
    float unpressedOffsetX -> unpressedOffsetX
    float unpressedOffsetY -> unpressedOffsetY
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup -> com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup:
    com.badlogic.gdx.utils.Array buttons -> buttons
    com.badlogic.gdx.utils.Array checkedButtons -> checkedButtons
    int minCheckCount -> minCheckCount
    int maxCheckCount -> maxCheckCount
    boolean uncheckLast -> uncheckLast
    com.badlogic.gdx.scenes.scene2d.ui.Button lastChecked -> lastChecked
    void add(com.badlogic.gdx.scenes.scene2d.ui.Button) -> add
    void add(com.badlogic.gdx.scenes.scene2d.ui.Button[]) -> add
    void remove(com.badlogic.gdx.scenes.scene2d.ui.Button) -> remove
    void remove(com.badlogic.gdx.scenes.scene2d.ui.Button[]) -> remove
    void clear() -> clear
    void setChecked(java.lang.String) -> setChecked
    boolean canCheck(com.badlogic.gdx.scenes.scene2d.ui.Button,boolean) -> canCheck
    void uncheckAll() -> uncheckAll
    com.badlogic.gdx.scenes.scene2d.ui.Button getChecked() -> getChecked
    int getCheckedIndex() -> getCheckedIndex
    com.badlogic.gdx.utils.Array getAllChecked() -> getAllChecked
    com.badlogic.gdx.utils.Array getButtons() -> getButtons
    void setMinCheckCount(int) -> setMinCheckCount
    void setMaxCheckCount(int) -> setMaxCheckCount
    void setUncheckLast(boolean) -> setUncheckLast
com.badlogic.gdx.scenes.scene2d.ui.Cell -> com.badlogic.gdx.scenes.scene2d.ui.Cell:
    java.lang.Float zerof -> zerof
    java.lang.Float onef -> onef
    java.lang.Integer zeroi -> zeroi
    java.lang.Integer onei -> onei
    java.lang.Integer centeri -> centeri
    java.lang.Integer topi -> topi
    java.lang.Integer bottomi -> bottomi
    java.lang.Integer lefti -> lefti
    java.lang.Integer righti -> righti
    com.badlogic.gdx.scenes.scene2d.ui.Value minWidth -> minWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value minHeight -> minHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value prefWidth -> prefWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value prefHeight -> prefHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value maxWidth -> maxWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value maxHeight -> maxHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value spaceTop -> spaceTop
    com.badlogic.gdx.scenes.scene2d.ui.Value spaceLeft -> spaceLeft
    com.badlogic.gdx.scenes.scene2d.ui.Value spaceBottom -> spaceBottom
    com.badlogic.gdx.scenes.scene2d.ui.Value spaceRight -> spaceRight
    com.badlogic.gdx.scenes.scene2d.ui.Value padTop -> padTop
    com.badlogic.gdx.scenes.scene2d.ui.Value padLeft -> padLeft
    com.badlogic.gdx.scenes.scene2d.ui.Value padBottom -> padBottom
    com.badlogic.gdx.scenes.scene2d.ui.Value padRight -> padRight
    java.lang.Float fillX -> fillX
    java.lang.Float fillY -> fillY
    java.lang.Integer align -> align
    java.lang.Integer expandX -> expandX
    java.lang.Integer expandY -> expandY
    java.lang.Integer colspan -> colspan
    java.lang.Boolean uniformX -> uniformX
    java.lang.Boolean uniformY -> uniformY
    com.badlogic.gdx.scenes.scene2d.Actor actor -> actor
    float actorX -> actorX
    float actorY -> actorY
    float actorWidth -> actorWidth
    float actorHeight -> actorHeight
    com.badlogic.gdx.scenes.scene2d.ui.Table table -> table
    boolean endRow -> endRow
    int column -> column
    int row -> row
    int cellAboveIndex -> cellAboveIndex
    float computedPadTop -> computedPadTop
    float computedPadLeft -> computedPadLeft
    float computedPadBottom -> computedPadBottom
    float computedPadRight -> computedPadRight
    void setLayout(com.badlogic.gdx.scenes.scene2d.ui.Table) -> setLayout
    com.badlogic.gdx.scenes.scene2d.ui.Cell setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setActor
    com.badlogic.gdx.scenes.scene2d.ui.Cell clearActor() -> clearActor
    com.badlogic.gdx.scenes.scene2d.Actor getActor() -> getActor
    boolean hasActor() -> hasActor
    com.badlogic.gdx.scenes.scene2d.ui.Cell size(com.badlogic.gdx.scenes.scene2d.ui.Value) -> size
    com.badlogic.gdx.scenes.scene2d.ui.Cell size(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> size
    com.badlogic.gdx.scenes.scene2d.ui.Cell size(float) -> size
    com.badlogic.gdx.scenes.scene2d.ui.Cell size(float,float) -> size
    com.badlogic.gdx.scenes.scene2d.ui.Cell width(com.badlogic.gdx.scenes.scene2d.ui.Value) -> width
    com.badlogic.gdx.scenes.scene2d.ui.Cell width(float) -> width
    com.badlogic.gdx.scenes.scene2d.ui.Cell height(com.badlogic.gdx.scenes.scene2d.ui.Value) -> height
    com.badlogic.gdx.scenes.scene2d.ui.Cell height(float) -> height
    com.badlogic.gdx.scenes.scene2d.ui.Cell minSize(com.badlogic.gdx.scenes.scene2d.ui.Value) -> minSize
    com.badlogic.gdx.scenes.scene2d.ui.Cell minSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> minSize
    com.badlogic.gdx.scenes.scene2d.ui.Cell minWidth(com.badlogic.gdx.scenes.scene2d.ui.Value) -> minWidth
    com.badlogic.gdx.scenes.scene2d.ui.Cell minHeight(com.badlogic.gdx.scenes.scene2d.ui.Value) -> minHeight
    com.badlogic.gdx.scenes.scene2d.ui.Cell minSize(float) -> minSize
    com.badlogic.gdx.scenes.scene2d.ui.Cell minSize(float,float) -> minSize
    com.badlogic.gdx.scenes.scene2d.ui.Cell minWidth(float) -> minWidth
    com.badlogic.gdx.scenes.scene2d.ui.Cell minHeight(float) -> minHeight
    com.badlogic.gdx.scenes.scene2d.ui.Cell prefSize(com.badlogic.gdx.scenes.scene2d.ui.Value) -> prefSize
    com.badlogic.gdx.scenes.scene2d.ui.Cell prefSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> prefSize
    com.badlogic.gdx.scenes.scene2d.ui.Cell prefWidth(com.badlogic.gdx.scenes.scene2d.ui.Value) -> prefWidth
    com.badlogic.gdx.scenes.scene2d.ui.Cell prefHeight(com.badlogic.gdx.scenes.scene2d.ui.Value) -> prefHeight
    com.badlogic.gdx.scenes.scene2d.ui.Cell prefSize(float,float) -> prefSize
    com.badlogic.gdx.scenes.scene2d.ui.Cell prefSize(float) -> prefSize
    com.badlogic.gdx.scenes.scene2d.ui.Cell prefWidth(float) -> prefWidth
    com.badlogic.gdx.scenes.scene2d.ui.Cell prefHeight(float) -> prefHeight
    com.badlogic.gdx.scenes.scene2d.ui.Cell maxSize(com.badlogic.gdx.scenes.scene2d.ui.Value) -> maxSize
    com.badlogic.gdx.scenes.scene2d.ui.Cell maxSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> maxSize
    com.badlogic.gdx.scenes.scene2d.ui.Cell maxWidth(com.badlogic.gdx.scenes.scene2d.ui.Value) -> maxWidth
    com.badlogic.gdx.scenes.scene2d.ui.Cell maxHeight(com.badlogic.gdx.scenes.scene2d.ui.Value) -> maxHeight
    com.badlogic.gdx.scenes.scene2d.ui.Cell maxSize(float) -> maxSize
    com.badlogic.gdx.scenes.scene2d.ui.Cell maxSize(float,float) -> maxSize
    com.badlogic.gdx.scenes.scene2d.ui.Cell maxWidth(float) -> maxWidth
    com.badlogic.gdx.scenes.scene2d.ui.Cell maxHeight(float) -> maxHeight
    com.badlogic.gdx.scenes.scene2d.ui.Cell space(com.badlogic.gdx.scenes.scene2d.ui.Value) -> space
    com.badlogic.gdx.scenes.scene2d.ui.Cell space(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> space
    com.badlogic.gdx.scenes.scene2d.ui.Cell spaceTop(com.badlogic.gdx.scenes.scene2d.ui.Value) -> spaceTop
    com.badlogic.gdx.scenes.scene2d.ui.Cell spaceLeft(com.badlogic.gdx.scenes.scene2d.ui.Value) -> spaceLeft
    com.badlogic.gdx.scenes.scene2d.ui.Cell spaceBottom(com.badlogic.gdx.scenes.scene2d.ui.Value) -> spaceBottom
    com.badlogic.gdx.scenes.scene2d.ui.Cell spaceRight(com.badlogic.gdx.scenes.scene2d.ui.Value) -> spaceRight
    com.badlogic.gdx.scenes.scene2d.ui.Cell space(float) -> space
    com.badlogic.gdx.scenes.scene2d.ui.Cell space(float,float,float,float) -> space
    com.badlogic.gdx.scenes.scene2d.ui.Cell spaceTop(float) -> spaceTop
    com.badlogic.gdx.scenes.scene2d.ui.Cell spaceLeft(float) -> spaceLeft
    com.badlogic.gdx.scenes.scene2d.ui.Cell spaceBottom(float) -> spaceBottom
    com.badlogic.gdx.scenes.scene2d.ui.Cell spaceRight(float) -> spaceRight
    com.badlogic.gdx.scenes.scene2d.ui.Cell pad(com.badlogic.gdx.scenes.scene2d.ui.Value) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.Cell pad(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.Cell padTop(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padTop
    com.badlogic.gdx.scenes.scene2d.ui.Cell padLeft(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padLeft
    com.badlogic.gdx.scenes.scene2d.ui.Cell padBottom(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padBottom
    com.badlogic.gdx.scenes.scene2d.ui.Cell padRight(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padRight
    com.badlogic.gdx.scenes.scene2d.ui.Cell pad(float) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.Cell pad(float,float,float,float) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.Cell padTop(float) -> padTop
    com.badlogic.gdx.scenes.scene2d.ui.Cell padLeft(float) -> padLeft
    com.badlogic.gdx.scenes.scene2d.ui.Cell padBottom(float) -> padBottom
    com.badlogic.gdx.scenes.scene2d.ui.Cell padRight(float) -> padRight
    com.badlogic.gdx.scenes.scene2d.ui.Cell fill() -> fill
    com.badlogic.gdx.scenes.scene2d.ui.Cell fillX() -> fillX
    com.badlogic.gdx.scenes.scene2d.ui.Cell fillY() -> fillY
    com.badlogic.gdx.scenes.scene2d.ui.Cell fill(float,float) -> fill
    com.badlogic.gdx.scenes.scene2d.ui.Cell fill(boolean,boolean) -> fill
    com.badlogic.gdx.scenes.scene2d.ui.Cell fill(boolean) -> fill
    com.badlogic.gdx.scenes.scene2d.ui.Cell align(int) -> align
    com.badlogic.gdx.scenes.scene2d.ui.Cell center() -> center
    com.badlogic.gdx.scenes.scene2d.ui.Cell top() -> top
    com.badlogic.gdx.scenes.scene2d.ui.Cell left() -> left
    com.badlogic.gdx.scenes.scene2d.ui.Cell bottom() -> bottom
    com.badlogic.gdx.scenes.scene2d.ui.Cell right() -> right
    com.badlogic.gdx.scenes.scene2d.ui.Cell expand() -> expand
    com.badlogic.gdx.scenes.scene2d.ui.Cell expandX() -> expandX
    com.badlogic.gdx.scenes.scene2d.ui.Cell expandY() -> expandY
    com.badlogic.gdx.scenes.scene2d.ui.Cell expand(int,int) -> expand
    com.badlogic.gdx.scenes.scene2d.ui.Cell expand(boolean,boolean) -> expand
    com.badlogic.gdx.scenes.scene2d.ui.Cell colspan(int) -> colspan
    com.badlogic.gdx.scenes.scene2d.ui.Cell uniform() -> uniform
    com.badlogic.gdx.scenes.scene2d.ui.Cell uniformX() -> uniformX
    com.badlogic.gdx.scenes.scene2d.ui.Cell uniformY() -> uniformY
    com.badlogic.gdx.scenes.scene2d.ui.Cell uniform(boolean,boolean) -> uniform
    void setActorBounds(float,float,float,float) -> setActorBounds
    float getActorX() -> getActorX
    void setActorX(float) -> setActorX
    float getActorY() -> getActorY
    void setActorY(float) -> setActorY
    float getActorWidth() -> getActorWidth
    void setActorWidth(float) -> setActorWidth
    float getActorHeight() -> getActorHeight
    void setActorHeight(float) -> setActorHeight
    int getColumn() -> getColumn
    int getRow() -> getRow
    com.badlogic.gdx.scenes.scene2d.ui.Value getMinWidthValue() -> getMinWidthValue
    float getMinWidth() -> getMinWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value getMinHeightValue() -> getMinHeightValue
    float getMinHeight() -> getMinHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value getPrefWidthValue() -> getPrefWidthValue
    float getPrefWidth() -> getPrefWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value getPrefHeightValue() -> getPrefHeightValue
    float getPrefHeight() -> getPrefHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value getMaxWidthValue() -> getMaxWidthValue
    float getMaxWidth() -> getMaxWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value getMaxHeightValue() -> getMaxHeightValue
    float getMaxHeight() -> getMaxHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value getSpaceTopValue() -> getSpaceTopValue
    float getSpaceTop() -> getSpaceTop
    com.badlogic.gdx.scenes.scene2d.ui.Value getSpaceLeftValue() -> getSpaceLeftValue
    float getSpaceLeft() -> getSpaceLeft
    com.badlogic.gdx.scenes.scene2d.ui.Value getSpaceBottomValue() -> getSpaceBottomValue
    float getSpaceBottom() -> getSpaceBottom
    com.badlogic.gdx.scenes.scene2d.ui.Value getSpaceRightValue() -> getSpaceRightValue
    float getSpaceRight() -> getSpaceRight
    com.badlogic.gdx.scenes.scene2d.ui.Value getPadTopValue() -> getPadTopValue
    float getPadTop() -> getPadTop
    com.badlogic.gdx.scenes.scene2d.ui.Value getPadLeftValue() -> getPadLeftValue
    float getPadLeft() -> getPadLeft
    com.badlogic.gdx.scenes.scene2d.ui.Value getPadBottomValue() -> getPadBottomValue
    float getPadBottom() -> getPadBottom
    com.badlogic.gdx.scenes.scene2d.ui.Value getPadRightValue() -> getPadRightValue
    float getPadRight() -> getPadRight
    float getPadX() -> getPadX
    float getPadY() -> getPadY
    float getFillX() -> getFillX
    float getFillY() -> getFillY
    int getAlign() -> getAlign
    int getExpandX() -> getExpandX
    int getExpandY() -> getExpandY
    int getColspan() -> getColspan
    boolean getUniformX() -> getUniformX
    boolean getUniformY() -> getUniformY
    boolean isEndRow() -> isEndRow
    float getComputedPadTop() -> getComputedPadTop
    float getComputedPadLeft() -> getComputedPadLeft
    float getComputedPadBottom() -> getComputedPadBottom
    float getComputedPadRight() -> getComputedPadRight
    void row() -> row
    com.badlogic.gdx.scenes.scene2d.ui.Table getTable() -> getTable
    void clear() -> clear
    void reset() -> reset
    void defaults() -> defaults
    void set(com.badlogic.gdx.scenes.scene2d.ui.Cell) -> set
    void merge(com.badlogic.gdx.scenes.scene2d.ui.Cell) -> merge
com.badlogic.gdx.scenes.scene2d.ui.CheckBox -> com.badlogic.gdx.scenes.scene2d.ui.CheckBox:
    com.badlogic.gdx.scenes.scene2d.ui.Image image -> image
    com.badlogic.gdx.scenes.scene2d.ui.Cell imageCell -> imageCell
    com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle style -> style
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle getStyle() -> getStyle
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    com.badlogic.gdx.scenes.scene2d.ui.Image getImage() -> getImage
    com.badlogic.gdx.scenes.scene2d.ui.Cell getImageCell() -> getImageCell
    com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle getStyle() -> getStyle
    com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> getStyle
com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle -> com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOn -> checkboxOn
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOff -> checkboxOff
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOver -> checkboxOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOnDisabled -> checkboxOnDisabled
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOffDisabled -> checkboxOffDisabled
com.badlogic.gdx.scenes.scene2d.ui.Container -> com.badlogic.gdx.scenes.scene2d.ui.Container:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> actor
    com.badlogic.gdx.scenes.scene2d.ui.Value minWidth -> minWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value minHeight -> minHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value prefWidth -> prefWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value prefHeight -> prefHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value maxWidth -> maxWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value maxHeight -> maxHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value padTop -> padTop
    com.badlogic.gdx.scenes.scene2d.ui.Value padLeft -> padLeft
    com.badlogic.gdx.scenes.scene2d.ui.Value padBottom -> padBottom
    com.badlogic.gdx.scenes.scene2d.ui.Value padRight -> padRight
    float fillX -> fillX
    float fillY -> fillY
    int align -> align
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    boolean clip -> clip
    boolean round -> round
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void drawBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float) -> drawBackground
    void setBackground(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> setBackground
    void setBackground(com.badlogic.gdx.scenes.scene2d.utils.Drawable,boolean) -> setBackground
    com.badlogic.gdx.scenes.scene2d.ui.Container background(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> background
    com.badlogic.gdx.scenes.scene2d.utils.Drawable getBackground() -> getBackground
    void layout() -> layout
    void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setActor
    com.badlogic.gdx.scenes.scene2d.Actor getActor() -> getActor
    void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> addActor
    void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAt
    void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorBefore
    void addActorAfter(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAfter
    boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
    com.badlogic.gdx.scenes.scene2d.ui.Container size(com.badlogic.gdx.scenes.scene2d.ui.Value) -> size
    com.badlogic.gdx.scenes.scene2d.ui.Container size(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> size
    com.badlogic.gdx.scenes.scene2d.ui.Container size(float) -> size
    com.badlogic.gdx.scenes.scene2d.ui.Container size(float,float) -> size
    com.badlogic.gdx.scenes.scene2d.ui.Container width(com.badlogic.gdx.scenes.scene2d.ui.Value) -> width
    com.badlogic.gdx.scenes.scene2d.ui.Container width(float) -> width
    com.badlogic.gdx.scenes.scene2d.ui.Container height(com.badlogic.gdx.scenes.scene2d.ui.Value) -> height
    com.badlogic.gdx.scenes.scene2d.ui.Container height(float) -> height
    com.badlogic.gdx.scenes.scene2d.ui.Container minSize(com.badlogic.gdx.scenes.scene2d.ui.Value) -> minSize
    com.badlogic.gdx.scenes.scene2d.ui.Container minSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> minSize
    com.badlogic.gdx.scenes.scene2d.ui.Container minWidth(com.badlogic.gdx.scenes.scene2d.ui.Value) -> minWidth
    com.badlogic.gdx.scenes.scene2d.ui.Container minHeight(com.badlogic.gdx.scenes.scene2d.ui.Value) -> minHeight
    com.badlogic.gdx.scenes.scene2d.ui.Container minSize(float) -> minSize
    com.badlogic.gdx.scenes.scene2d.ui.Container minSize(float,float) -> minSize
    com.badlogic.gdx.scenes.scene2d.ui.Container minWidth(float) -> minWidth
    com.badlogic.gdx.scenes.scene2d.ui.Container minHeight(float) -> minHeight
    com.badlogic.gdx.scenes.scene2d.ui.Container prefSize(com.badlogic.gdx.scenes.scene2d.ui.Value) -> prefSize
    com.badlogic.gdx.scenes.scene2d.ui.Container prefSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> prefSize
    com.badlogic.gdx.scenes.scene2d.ui.Container prefWidth(com.badlogic.gdx.scenes.scene2d.ui.Value) -> prefWidth
    com.badlogic.gdx.scenes.scene2d.ui.Container prefHeight(com.badlogic.gdx.scenes.scene2d.ui.Value) -> prefHeight
    com.badlogic.gdx.scenes.scene2d.ui.Container prefSize(float,float) -> prefSize
    com.badlogic.gdx.scenes.scene2d.ui.Container prefSize(float) -> prefSize
    com.badlogic.gdx.scenes.scene2d.ui.Container prefWidth(float) -> prefWidth
    com.badlogic.gdx.scenes.scene2d.ui.Container prefHeight(float) -> prefHeight
    com.badlogic.gdx.scenes.scene2d.ui.Container maxSize(com.badlogic.gdx.scenes.scene2d.ui.Value) -> maxSize
    com.badlogic.gdx.scenes.scene2d.ui.Container maxSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> maxSize
    com.badlogic.gdx.scenes.scene2d.ui.Container maxWidth(com.badlogic.gdx.scenes.scene2d.ui.Value) -> maxWidth
    com.badlogic.gdx.scenes.scene2d.ui.Container maxHeight(com.badlogic.gdx.scenes.scene2d.ui.Value) -> maxHeight
    com.badlogic.gdx.scenes.scene2d.ui.Container maxSize(float) -> maxSize
    com.badlogic.gdx.scenes.scene2d.ui.Container maxSize(float,float) -> maxSize
    com.badlogic.gdx.scenes.scene2d.ui.Container maxWidth(float) -> maxWidth
    com.badlogic.gdx.scenes.scene2d.ui.Container maxHeight(float) -> maxHeight
    com.badlogic.gdx.scenes.scene2d.ui.Container pad(com.badlogic.gdx.scenes.scene2d.ui.Value) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.Container pad(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.Container padTop(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padTop
    com.badlogic.gdx.scenes.scene2d.ui.Container padLeft(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padLeft
    com.badlogic.gdx.scenes.scene2d.ui.Container padBottom(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padBottom
    com.badlogic.gdx.scenes.scene2d.ui.Container padRight(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padRight
    com.badlogic.gdx.scenes.scene2d.ui.Container pad(float) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.Container pad(float,float,float,float) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.Container padTop(float) -> padTop
    com.badlogic.gdx.scenes.scene2d.ui.Container padLeft(float) -> padLeft
    com.badlogic.gdx.scenes.scene2d.ui.Container padBottom(float) -> padBottom
    com.badlogic.gdx.scenes.scene2d.ui.Container padRight(float) -> padRight
    com.badlogic.gdx.scenes.scene2d.ui.Container fill() -> fill
    com.badlogic.gdx.scenes.scene2d.ui.Container fillX() -> fillX
    com.badlogic.gdx.scenes.scene2d.ui.Container fillY() -> fillY
    com.badlogic.gdx.scenes.scene2d.ui.Container fill(float,float) -> fill
    com.badlogic.gdx.scenes.scene2d.ui.Container fill(boolean,boolean) -> fill
    com.badlogic.gdx.scenes.scene2d.ui.Container fill(boolean) -> fill
    com.badlogic.gdx.scenes.scene2d.ui.Container align(int) -> align
    com.badlogic.gdx.scenes.scene2d.ui.Container center() -> center
    com.badlogic.gdx.scenes.scene2d.ui.Container top() -> top
    com.badlogic.gdx.scenes.scene2d.ui.Container left() -> left
    com.badlogic.gdx.scenes.scene2d.ui.Container bottom() -> bottom
    com.badlogic.gdx.scenes.scene2d.ui.Container right() -> right
    float getMinWidth() -> getMinWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value getMinHeightValue() -> getMinHeightValue
    float getMinHeight() -> getMinHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value getPrefWidthValue() -> getPrefWidthValue
    float getPrefWidth() -> getPrefWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value getPrefHeightValue() -> getPrefHeightValue
    float getPrefHeight() -> getPrefHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value getMaxWidthValue() -> getMaxWidthValue
    float getMaxWidth() -> getMaxWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value getMaxHeightValue() -> getMaxHeightValue
    float getMaxHeight() -> getMaxHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value getPadTopValue() -> getPadTopValue
    float getPadTop() -> getPadTop
    com.badlogic.gdx.scenes.scene2d.ui.Value getPadLeftValue() -> getPadLeftValue
    float getPadLeft() -> getPadLeft
    com.badlogic.gdx.scenes.scene2d.ui.Value getPadBottomValue() -> getPadBottomValue
    float getPadBottom() -> getPadBottom
    com.badlogic.gdx.scenes.scene2d.ui.Value getPadRightValue() -> getPadRightValue
    float getPadRight() -> getPadRight
    float getPadX() -> getPadX
    float getPadY() -> getPadY
    float getFillX() -> getFillX
    float getFillY() -> getFillY
    int getAlign() -> getAlign
    void setRound(boolean) -> setRound
    void setClip(boolean) -> setClip
    boolean getClip() -> getClip
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    void drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer) -> drawDebug
com.badlogic.gdx.scenes.scene2d.ui.Dialog -> com.badlogic.gdx.scenes.scene2d.ui.Dialog:
    com.badlogic.gdx.scenes.scene2d.ui.Table contentTable -> contentTable
    com.badlogic.gdx.scenes.scene2d.ui.Table buttonTable -> buttonTable
    com.badlogic.gdx.scenes.scene2d.ui.Skin skin -> skin
    com.badlogic.gdx.utils.ObjectMap values -> values
    boolean cancelHide -> cancelHide
    com.badlogic.gdx.scenes.scene2d.Actor previousKeyboardFocus -> previousKeyboardFocus
    com.badlogic.gdx.scenes.scene2d.Actor previousScrollFocus -> previousScrollFocus
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener focusListener -> focusListener
    com.badlogic.gdx.scenes.scene2d.InputListener ignoreTouchDown -> ignoreTouchDown
    void initialize() -> initialize
    void setStage(com.badlogic.gdx.scenes.scene2d.Stage) -> setStage
    com.badlogic.gdx.scenes.scene2d.ui.Table getContentTable() -> getContentTable
    com.badlogic.gdx.scenes.scene2d.ui.Table getButtonTable() -> getButtonTable
    com.badlogic.gdx.scenes.scene2d.ui.Dialog text(java.lang.String) -> text
    com.badlogic.gdx.scenes.scene2d.ui.Dialog text(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle) -> text
    com.badlogic.gdx.scenes.scene2d.ui.Dialog text(com.badlogic.gdx.scenes.scene2d.ui.Label) -> text
    com.badlogic.gdx.scenes.scene2d.ui.Dialog button(java.lang.String) -> button
    com.badlogic.gdx.scenes.scene2d.ui.Dialog button(java.lang.String,java.lang.Object) -> button
    com.badlogic.gdx.scenes.scene2d.ui.Dialog button(java.lang.String,java.lang.Object,com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle) -> button
    com.badlogic.gdx.scenes.scene2d.ui.Dialog button(com.badlogic.gdx.scenes.scene2d.ui.Button) -> button
    com.badlogic.gdx.scenes.scene2d.ui.Dialog button(com.badlogic.gdx.scenes.scene2d.ui.Button,java.lang.Object) -> button
    com.badlogic.gdx.scenes.scene2d.ui.Dialog show(com.badlogic.gdx.scenes.scene2d.Stage,com.badlogic.gdx.scenes.scene2d.Action) -> show
    com.badlogic.gdx.scenes.scene2d.ui.Dialog show(com.badlogic.gdx.scenes.scene2d.Stage) -> show
    void hide(com.badlogic.gdx.scenes.scene2d.Action) -> hide
    void hide() -> hide
    void setObject(com.badlogic.gdx.scenes.scene2d.Actor,java.lang.Object) -> setObject
    com.badlogic.gdx.scenes.scene2d.ui.Dialog key(int,java.lang.Object) -> key
    void result(java.lang.Object) -> result
    void cancel() -> cancel
com.badlogic.gdx.scenes.scene2d.ui.Dialog$1 -> com.badlogic.gdx.scenes.scene2d.ui.Dialog$1:
    com.badlogic.gdx.scenes.scene2d.ui.Dialog this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.badlogic.gdx.scenes.scene2d.ui.Dialog$2 -> com.badlogic.gdx.scenes.scene2d.ui.Dialog$2:
    com.badlogic.gdx.scenes.scene2d.ui.Dialog this$0 -> this$0
    void changed(com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent,com.badlogic.gdx.scenes.scene2d.Actor) -> changed
com.badlogic.gdx.scenes.scene2d.ui.Dialog$3 -> com.badlogic.gdx.scenes.scene2d.ui.Dialog$3:
    com.badlogic.gdx.scenes.scene2d.ui.Dialog this$0 -> this$0
    void keyboardFocusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent,com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> keyboardFocusChanged
    void scrollFocusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent,com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> scrollFocusChanged
    void focusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent) -> focusChanged
com.badlogic.gdx.scenes.scene2d.ui.Dialog$4 -> com.badlogic.gdx.scenes.scene2d.ui.Dialog$4:
    int val$keycode -> val$keycode
    java.lang.Object val$object -> val$object
    com.badlogic.gdx.scenes.scene2d.ui.Dialog this$0 -> this$0
    boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyDown
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup -> com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup:
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    boolean sizeInvalid -> sizeInvalid
    int align -> align
    boolean reverse -> reverse
    boolean round -> round
    float spacing -> spacing
    float padTop -> padTop
    float padLeft -> padLeft
    float padBottom -> padBottom
    float padRight -> padRight
    float fill -> fill
    void invalidate() -> invalidate
    void computeSize() -> computeSize
    void layout() -> layout
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    void setRound(boolean) -> setRound
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup reverse() -> reverse
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup reverse(boolean) -> reverse
    boolean getReverse() -> getReverse
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup space(float) -> space
    float getSpace() -> getSpace
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup pad(float) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup pad(float,float,float,float) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup padTop(float) -> padTop
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup padLeft(float) -> padLeft
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup padBottom(float) -> padBottom
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup padRight(float) -> padRight
    float getPadTop() -> getPadTop
    float getPadLeft() -> getPadLeft
    float getPadBottom() -> getPadBottom
    float getPadRight() -> getPadRight
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup align(int) -> align
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup center() -> center
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup top() -> top
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup bottom() -> bottom
    int getAlign() -> getAlign
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup fill() -> fill
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup fill(float) -> fill
    float getFill() -> getFill
com.badlogic.gdx.scenes.scene2d.ui.Image -> com.badlogic.gdx.scenes.scene2d.ui.Image:
    com.badlogic.gdx.utils.Scaling scaling -> scaling
    int align -> align
    float imageX -> imageX
    float imageY -> imageY
    float imageWidth -> imageWidth
    float imageHeight -> imageHeight
    com.badlogic.gdx.scenes.scene2d.utils.Drawable drawable -> drawable
    void layout() -> layout
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void setDrawable(com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String) -> setDrawable
    void setDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> setDrawable
    com.badlogic.gdx.scenes.scene2d.utils.Drawable getDrawable() -> getDrawable
    void setScaling(com.badlogic.gdx.utils.Scaling) -> setScaling
    void setAlign(int) -> setAlign
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getImageX() -> getImageX
    float getImageY() -> getImageY
    float getImageWidth() -> getImageWidth
    float getImageHeight() -> getImageHeight
com.badlogic.gdx.scenes.scene2d.ui.ImageButton -> com.badlogic.gdx.scenes.scene2d.ui.ImageButton:
    com.badlogic.gdx.scenes.scene2d.ui.Image image -> image
    com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle style -> style
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle getStyle() -> getStyle
    void updateImage() -> updateImage
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    com.badlogic.gdx.scenes.scene2d.ui.Image getImage() -> getImage
    com.badlogic.gdx.scenes.scene2d.ui.Cell getImageCell() -> getImageCell
    com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> getStyle
com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle -> com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageUp -> imageUp
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDown -> imageDown
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageOver -> imageOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageChecked -> imageChecked
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageCheckedOver -> imageCheckedOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDisabled -> imageDisabled
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton -> com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton:
    com.badlogic.gdx.scenes.scene2d.ui.Image image -> image
    com.badlogic.gdx.scenes.scene2d.ui.Label label -> label
    com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle style -> style
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle getStyle() -> getStyle
    void updateImage() -> updateImage
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    com.badlogic.gdx.scenes.scene2d.ui.Image getImage() -> getImage
    com.badlogic.gdx.scenes.scene2d.ui.Cell getImageCell() -> getImageCell
    com.badlogic.gdx.scenes.scene2d.ui.Label getLabel() -> getLabel
    com.badlogic.gdx.scenes.scene2d.ui.Cell getLabelCell() -> getLabelCell
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getText() -> getText
    com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> getStyle
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle -> com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageUp -> imageUp
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDown -> imageDown
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageOver -> imageOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageChecked -> imageChecked
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageCheckedOver -> imageCheckedOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDisabled -> imageDisabled
com.badlogic.gdx.scenes.scene2d.ui.Label -> com.badlogic.gdx.scenes.scene2d.ui.Label:
    com.badlogic.gdx.graphics.Color tempColor -> tempColor
    com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle style -> style
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds bounds -> bounds
    com.badlogic.gdx.utils.StringBuilder text -> text
    com.badlogic.gdx.utils.StringBuilder tempText -> tempText
    com.badlogic.gdx.graphics.g2d.BitmapFontCache cache -> cache
    int labelAlign -> labelAlign
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment lineAlign -> lineAlign
    boolean wrap -> wrap
    float lastPrefHeight -> lastPrefHeight
    boolean sizeInvalid -> sizeInvalid
    float fontScaleX -> fontScaleX
    float fontScaleY -> fontScaleY
    boolean ellipsis -> ellipsis
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle getStyle() -> getStyle
    void setText(java.lang.CharSequence) -> setText
    boolean textEquals(java.lang.CharSequence) -> textEquals
    com.badlogic.gdx.utils.StringBuilder getText() -> getText
    void invalidate() -> invalidate
    void scaleAndComputeSize() -> scaleAndComputeSize
    void computeSize() -> computeSize
    void layout() -> layout
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getTextBounds() -> getTextBounds
    void setWrap(boolean) -> setWrap
    void setBreakChars(char[]) -> setBreakChars
    void setAlignment(int) -> setAlignment
    void setAlignment(int,int) -> setAlignment
    void setFontScale(float) -> setFontScale
    void setFontScale(float,float) -> setFontScale
    float getFontScaleX() -> getFontScaleX
    void setFontScaleX(float) -> setFontScaleX
    float getFontScaleY() -> getFontScaleY
    void setFontScaleY(float) -> setFontScaleY
    void setEllipsis(boolean) -> setEllipsis
    com.badlogic.gdx.graphics.g2d.BitmapFontCache getBitmapFontCache() -> getBitmapFontCache
com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle -> com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColor -> fontColor
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
com.badlogic.gdx.scenes.scene2d.ui.List -> com.badlogic.gdx.scenes.scene2d.ui.List:
    com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle style -> style
    com.badlogic.gdx.utils.Array items -> items
    com.badlogic.gdx.scenes.scene2d.utils.ArraySelection selection -> selection
    com.badlogic.gdx.math.Rectangle cullingArea -> cullingArea
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    float itemHeight -> itemHeight
    float textOffsetX -> textOffsetX
    float textOffsetY -> textOffsetY
    void touchDown(float) -> touchDown
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle getStyle() -> getStyle
    void layout() -> layout
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    com.badlogic.gdx.scenes.scene2d.utils.ArraySelection getSelection() -> getSelection
    java.lang.Object getSelected() -> getSelected
    void setSelected(java.lang.Object) -> setSelected
    int getSelectedIndex() -> getSelectedIndex
    void setSelectedIndex(int) -> setSelectedIndex
    void setItems(java.lang.Object[]) -> setItems
    void setItems(com.badlogic.gdx.utils.Array) -> setItems
    void clearItems() -> clearItems
    com.badlogic.gdx.utils.Array getItems() -> getItems
    float getItemHeight() -> getItemHeight
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    void setCullingArea(com.badlogic.gdx.math.Rectangle) -> setCullingArea
com.badlogic.gdx.scenes.scene2d.ui.List$1 -> com.badlogic.gdx.scenes.scene2d.ui.List$1:
    com.badlogic.gdx.scenes.scene2d.ui.List this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle -> com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColorSelected -> fontColorSelected
    com.badlogic.gdx.graphics.Color fontColorUnselected -> fontColorUnselected
    com.badlogic.gdx.scenes.scene2d.utils.Drawable selection -> selection
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar -> com.badlogic.gdx.scenes.scene2d.ui.ProgressBar:
    com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle style -> style
    float min -> min
    float max -> max
    float stepSize -> stepSize
    float value -> value
    float animateFromValue -> animateFromValue
    float position -> position
    boolean vertical -> vertical
    float animateDuration -> animateDuration
    float animateTime -> animateTime
    com.badlogic.gdx.math.Interpolation animateInterpolation -> animateInterpolation
    float[] snapValues -> snapValues
    float threshold -> threshold
    boolean disabled -> disabled
    boolean shiftIgnoresSnap -> shiftIgnoresSnap
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle getStyle() -> getStyle
    void act(float) -> act
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    float getValue() -> getValue
    float getVisualValue() -> getVisualValue
    float getKnobPosition() -> getKnobPosition
    boolean setValue(float) -> setValue
    float clamp(float) -> clamp
    void setRange(float,float) -> setRange
    void setStepSize(float) -> setStepSize
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMinValue() -> getMinValue
    float getMaxValue() -> getMaxValue
    float getStepSize() -> getStepSize
    void setAnimateDuration(float) -> setAnimateDuration
    void setAnimateInterpolation(com.badlogic.gdx.math.Interpolation) -> setAnimateInterpolation
    void setSnapToValues(float[],float) -> setSnapToValues
    float snap(float) -> snap
    void setDisabled(boolean) -> setDisabled
    boolean isDisabled() -> isDisabled
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle -> com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.scenes.scene2d.utils.Drawable disabledBackground -> disabledBackground
    com.badlogic.gdx.scenes.scene2d.utils.Drawable knob -> knob
    com.badlogic.gdx.scenes.scene2d.utils.Drawable disabledKnob -> disabledKnob
    com.badlogic.gdx.scenes.scene2d.utils.Drawable knobBefore -> knobBefore
    com.badlogic.gdx.scenes.scene2d.utils.Drawable knobAfter -> knobAfter
    com.badlogic.gdx.scenes.scene2d.utils.Drawable disabledKnobBefore -> disabledKnobBefore
    com.badlogic.gdx.scenes.scene2d.utils.Drawable disabledKnobAfter -> disabledKnobAfter
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane -> com.badlogic.gdx.scenes.scene2d.ui.ScrollPane:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle style -> style
    com.badlogic.gdx.scenes.scene2d.Actor widget -> widget
    com.badlogic.gdx.math.Rectangle hScrollBounds -> hScrollBounds
    com.badlogic.gdx.math.Rectangle vScrollBounds -> vScrollBounds
    com.badlogic.gdx.math.Rectangle hKnobBounds -> hKnobBounds
    com.badlogic.gdx.math.Rectangle vKnobBounds -> vKnobBounds
    com.badlogic.gdx.math.Rectangle widgetAreaBounds -> widgetAreaBounds
    com.badlogic.gdx.math.Rectangle widgetCullingArea -> widgetCullingArea
    com.badlogic.gdx.math.Rectangle scissorBounds -> scissorBounds
    com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener flickScrollListener -> flickScrollListener
    boolean scrollX -> scrollX
    boolean scrollY -> scrollY
    boolean vScrollOnRight -> vScrollOnRight
    boolean hScrollOnBottom -> hScrollOnBottom
    float amountX -> amountX
    float amountY -> amountY
    float visualAmountX -> visualAmountX
    float visualAmountY -> visualAmountY
    float maxX -> maxX
    float maxY -> maxY
    boolean touchScrollH -> touchScrollH
    boolean touchScrollV -> touchScrollV
    com.badlogic.gdx.math.Vector2 lastPoint -> lastPoint
    float areaWidth -> areaWidth
    float areaHeight -> areaHeight
    boolean fadeScrollBars -> fadeScrollBars
    boolean smoothScrolling -> smoothScrolling
    float fadeAlpha -> fadeAlpha
    float fadeAlphaSeconds -> fadeAlphaSeconds
    float fadeDelay -> fadeDelay
    float fadeDelaySeconds -> fadeDelaySeconds
    boolean cancelTouchFocus -> cancelTouchFocus
    boolean flickScroll -> flickScroll
    float velocityX -> velocityX
    float velocityY -> velocityY
    float flingTimer -> flingTimer
    boolean overscrollX -> overscrollX
    boolean overscrollY -> overscrollY
    float flingTime -> flingTime
    float overscrollDistance -> overscrollDistance
    float overscrollSpeedMin -> overscrollSpeedMin
    float overscrollSpeedMax -> overscrollSpeedMax
    boolean forceScrollX -> forceScrollX
    boolean forceScrollY -> forceScrollY
    boolean disableX -> disableX
    boolean disableY -> disableY
    boolean clamp -> clamp
    boolean scrollbarsOnTop -> scrollbarsOnTop
    boolean variableSizeKnobs -> variableSizeKnobs
    int draggingPointer -> draggingPointer
    void resetFade() -> resetFade
    void cancelTouchFocusedChild(com.badlogic.gdx.scenes.scene2d.InputEvent) -> cancelTouchFocusedChild
    void cancel() -> cancel
    void clamp() -> clamp
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle getStyle() -> getStyle
    void act(float) -> act
    void layout() -> layout
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void fling(float,float,float) -> fling
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    void setWidget(com.badlogic.gdx.scenes.scene2d.Actor) -> setWidget
    com.badlogic.gdx.scenes.scene2d.Actor getWidget() -> getWidget
    void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> addActor
    void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAt
    void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorBefore
    void addActorAfter(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAfter
    boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    void scrollX(float) -> scrollX
    void scrollY(float) -> scrollY
    void visualScrollX(float) -> visualScrollX
    void visualScrollY(float) -> visualScrollY
    float getMouseWheelX() -> getMouseWheelX
    float getMouseWheelY() -> getMouseWheelY
    void setScrollX(float) -> setScrollX
    float getScrollX() -> getScrollX
    void setScrollY(float) -> setScrollY
    float getScrollY() -> getScrollY
    void updateVisualScroll() -> updateVisualScroll
    float getVisualScrollX() -> getVisualScrollX
    float getVisualScrollY() -> getVisualScrollY
    float getVisualScrollPercentX() -> getVisualScrollPercentX
    float getVisualScrollPercentY() -> getVisualScrollPercentY
    float getScrollPercentX() -> getScrollPercentX
    void setScrollPercentX(float) -> setScrollPercentX
    float getScrollPercentY() -> getScrollPercentY
    void setScrollPercentY(float) -> setScrollPercentY
    void setFlickScroll(boolean) -> setFlickScroll
    void setFlickScrollTapSquareSize(float) -> setFlickScrollTapSquareSize
    void scrollTo(float,float,float,float) -> scrollTo
    void scrollTo(float,float,float,float,boolean,boolean) -> scrollTo
    float getMaxX() -> getMaxX
    float getMaxY() -> getMaxY
    float getScrollBarHeight() -> getScrollBarHeight
    float getScrollBarWidth() -> getScrollBarWidth
    float getScrollWidth() -> getScrollWidth
    float getScrollHeight() -> getScrollHeight
    boolean isScrollX() -> isScrollX
    boolean isScrollY() -> isScrollY
    void setScrollingDisabled(boolean,boolean) -> setScrollingDisabled
    boolean isLeftEdge() -> isLeftEdge
    boolean isRightEdge() -> isRightEdge
    boolean isTopEdge() -> isTopEdge
    boolean isBottomEdge() -> isBottomEdge
    boolean isDragging() -> isDragging
    boolean isPanning() -> isPanning
    boolean isFlinging() -> isFlinging
    void setVelocityX(float) -> setVelocityX
    float getVelocityX() -> getVelocityX
    void setVelocityY(float) -> setVelocityY
    float getVelocityY() -> getVelocityY
    void setOverscroll(boolean,boolean) -> setOverscroll
    void setupOverscroll(float,float,float) -> setupOverscroll
    void setForceScroll(boolean,boolean) -> setForceScroll
    boolean isForceScrollX() -> isForceScrollX
    boolean isForceScrollY() -> isForceScrollY
    void setFlingTime(float) -> setFlingTime
    void setClamp(boolean) -> setClamp
    void setScrollBarPositions(boolean,boolean) -> setScrollBarPositions
    void setFadeScrollBars(boolean) -> setFadeScrollBars
    void setupFadeScrollBars(float,float) -> setupFadeScrollBars
    void setSmoothScrolling(boolean) -> setSmoothScrolling
    void setScrollbarsOnTop(boolean) -> setScrollbarsOnTop
    boolean getVariableSizeKnobs() -> getVariableSizeKnobs
    void setVariableSizeKnobs(boolean) -> setVariableSizeKnobs
    void setCancelTouchFocus(boolean) -> setCancelTouchFocus
    void drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer) -> drawDebug
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$1 -> com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$1:
    float handlePosition -> handlePosition
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> mouseMoved
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$2 -> com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$2:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane this$0 -> this$0
    void pan(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,float,float) -> pan
    void fling(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> fling
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$3 -> com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$3:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane this$0 -> this$0
    boolean scrolled(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> scrolled
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle -> com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.scenes.scene2d.utils.Drawable corner -> corner
    com.badlogic.gdx.scenes.scene2d.utils.Drawable hScroll -> hScroll
    com.badlogic.gdx.scenes.scene2d.utils.Drawable hScrollKnob -> hScrollKnob
    com.badlogic.gdx.scenes.scene2d.utils.Drawable vScroll -> vScroll
    com.badlogic.gdx.scenes.scene2d.utils.Drawable vScrollKnob -> vScrollKnob
com.badlogic.gdx.scenes.scene2d.ui.SelectBox -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox:
    com.badlogic.gdx.math.Vector2 temp -> temp
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle style -> style
    com.badlogic.gdx.utils.Array items -> items
    com.badlogic.gdx.scenes.scene2d.utils.ArraySelection selection -> selection
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxList selectBoxList -> selectBoxList
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds bounds -> bounds
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    com.badlogic.gdx.scenes.scene2d.utils.ClickListener clickListener -> clickListener
    boolean disabled -> disabled
    void setMaxListCount(int) -> setMaxListCount
    int getMaxListCount() -> getMaxListCount
    void setStage(com.badlogic.gdx.scenes.scene2d.Stage) -> setStage
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle getStyle() -> getStyle
    void setItems(java.lang.Object[]) -> setItems
    void setItems(com.badlogic.gdx.utils.Array) -> setItems
    void clearItems() -> clearItems
    com.badlogic.gdx.utils.Array getItems() -> getItems
    void layout() -> layout
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    com.badlogic.gdx.scenes.scene2d.utils.ArraySelection getSelection() -> getSelection
    java.lang.Object getSelected() -> getSelected
    void setSelected(java.lang.Object) -> setSelected
    int getSelectedIndex() -> getSelectedIndex
    void setSelectedIndex(int) -> setSelectedIndex
    void setDisabled(boolean) -> setDisabled
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    void showList() -> showList
    void hideList() -> hideList
    com.badlogic.gdx.scenes.scene2d.ui.List getList() -> getList
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane getScrollPane() -> getScrollPane
    void onShow(com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> onShow
    void onHide(com.badlogic.gdx.scenes.scene2d.Actor) -> onHide
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$1 -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox$1:
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxList -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxList:
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox selectBox -> selectBox
    int maxListCount -> maxListCount
    com.badlogic.gdx.math.Vector2 screenPosition -> screenPosition
    com.badlogic.gdx.scenes.scene2d.ui.List list -> list
    com.badlogic.gdx.scenes.scene2d.InputListener hideListener -> hideListener
    com.badlogic.gdx.scenes.scene2d.Actor previousScrollFocus -> previousScrollFocus
    void show(com.badlogic.gdx.scenes.scene2d.Stage) -> show
    void hide() -> hide
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void act(float) -> act
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxList$1 -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxList$1:
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox val$selectBox -> val$selectBox
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxList this$0 -> this$0
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
    boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> mouseMoved
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxList$2 -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxList$2:
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox val$selectBox -> val$selectBox
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxList this$0 -> this$0
    void exit(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> exit
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxList$3 -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxList$3:
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox val$selectBox -> val$selectBox
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxList this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyDown
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColor -> fontColor
    com.badlogic.gdx.graphics.Color disabledFontColor -> disabledFontColor
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle scrollStyle -> scrollStyle
    com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle listStyle -> listStyle
    com.badlogic.gdx.scenes.scene2d.utils.Drawable backgroundOver -> backgroundOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable backgroundOpen -> backgroundOpen
    com.badlogic.gdx.scenes.scene2d.utils.Drawable backgroundDisabled -> backgroundDisabled
com.badlogic.gdx.scenes.scene2d.ui.Skin -> com.badlogic.gdx.scenes.scene2d.ui.Skin:
    com.badlogic.gdx.utils.ObjectMap resources -> resources
    com.badlogic.gdx.graphics.g2d.TextureAtlas atlas -> atlas
    void load(com.badlogic.gdx.files.FileHandle) -> load
    void addRegions(com.badlogic.gdx.graphics.g2d.TextureAtlas) -> addRegions
    void add(java.lang.String,java.lang.Object) -> add
    void add(java.lang.String,java.lang.Object,java.lang.Class) -> add
    void remove(java.lang.String,java.lang.Class) -> remove
    java.lang.Object get(java.lang.Class) -> get
    java.lang.Object get(java.lang.String,java.lang.Class) -> get
    java.lang.Object optional(java.lang.String,java.lang.Class) -> optional
    boolean has(java.lang.String,java.lang.Class) -> has
    com.badlogic.gdx.utils.ObjectMap getAll(java.lang.Class) -> getAll
    com.badlogic.gdx.graphics.Color getColor(java.lang.String) -> getColor
    com.badlogic.gdx.graphics.g2d.BitmapFont getFont(java.lang.String) -> getFont
    com.badlogic.gdx.graphics.g2d.TextureRegion getRegion(java.lang.String) -> getRegion
    com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable getTiledDrawable(java.lang.String) -> getTiledDrawable
    com.badlogic.gdx.graphics.g2d.NinePatch getPatch(java.lang.String) -> getPatch
    com.badlogic.gdx.graphics.g2d.Sprite getSprite(java.lang.String) -> getSprite
    com.badlogic.gdx.scenes.scene2d.utils.Drawable getDrawable(java.lang.String) -> getDrawable
    java.lang.String find(java.lang.Object) -> find
    com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(java.lang.String) -> newDrawable
    com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(java.lang.String,float,float,float,float) -> newDrawable
    com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(java.lang.String,com.badlogic.gdx.graphics.Color) -> newDrawable
    com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> newDrawable
    com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable,float,float,float,float) -> newDrawable
    com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.Color) -> newDrawable
    void setEnabled(com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> setEnabled
    com.badlogic.gdx.graphics.g2d.TextureAtlas getAtlas() -> getAtlas
    void dispose() -> dispose
    com.badlogic.gdx.utils.Json getJsonLoader(com.badlogic.gdx.files.FileHandle) -> getJsonLoader
    com.badlogic.gdx.utils.reflect.Method findMethod(java.lang.Class,java.lang.String) -> findMethod
com.badlogic.gdx.scenes.scene2d.ui.Skin$1 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$1:
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    java.lang.Object readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue) -> readValue
com.badlogic.gdx.scenes.scene2d.ui.Skin$2 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$2:
    com.badlogic.gdx.scenes.scene2d.ui.Skin val$skin -> val$skin
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    com.badlogic.gdx.scenes.scene2d.ui.Skin read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
    void readNamedObjects(com.badlogic.gdx.utils.Json,java.lang.Class,com.badlogic.gdx.utils.JsonValue) -> readNamedObjects
    java.lang.Object read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
com.badlogic.gdx.scenes.scene2d.ui.Skin$3 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$3:
    com.badlogic.gdx.files.FileHandle val$skinFile -> val$skinFile
    com.badlogic.gdx.scenes.scene2d.ui.Skin val$skin -> val$skin
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    com.badlogic.gdx.graphics.g2d.BitmapFont read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
    java.lang.Object read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
com.badlogic.gdx.scenes.scene2d.ui.Skin$4 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$4:
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    com.badlogic.gdx.graphics.Color read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
    java.lang.Object read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
com.badlogic.gdx.scenes.scene2d.ui.Skin$5 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$5:
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    java.lang.Object read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
com.badlogic.gdx.scenes.scene2d.ui.Skin$TintedDrawable -> com.badlogic.gdx.scenes.scene2d.ui.Skin$TintedDrawable:
    java.lang.String name -> name
    com.badlogic.gdx.graphics.Color color -> color
com.badlogic.gdx.scenes.scene2d.ui.Slider -> com.badlogic.gdx.scenes.scene2d.ui.Slider:
    int draggingPointer -> draggingPointer
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle getStyle() -> getStyle
    boolean calculatePositionAndValue(float,float) -> calculatePositionAndValue
    boolean isDragging() -> isDragging
    com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle getStyle() -> getStyle
com.badlogic.gdx.scenes.scene2d.ui.Slider$1 -> com.badlogic.gdx.scenes.scene2d.ui.Slider$1:
    com.badlogic.gdx.scenes.scene2d.ui.Slider this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle -> com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle:
com.badlogic.gdx.scenes.scene2d.ui.SplitPane -> com.badlogic.gdx.scenes.scene2d.ui.SplitPane:
    com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle style -> style
    com.badlogic.gdx.scenes.scene2d.Actor firstWidget -> firstWidget
    com.badlogic.gdx.scenes.scene2d.Actor secondWidget -> secondWidget
    boolean vertical -> vertical
    float splitAmount -> splitAmount
    float minAmount -> minAmount
    float maxAmount -> maxAmount
    float oldSplitAmount -> oldSplitAmount
    com.badlogic.gdx.math.Rectangle firstWidgetBounds -> firstWidgetBounds
    com.badlogic.gdx.math.Rectangle secondWidgetBounds -> secondWidgetBounds
    com.badlogic.gdx.math.Rectangle handleBounds -> handleBounds
    com.badlogic.gdx.math.Rectangle firstScissors -> firstScissors
    com.badlogic.gdx.math.Rectangle secondScissors -> secondScissors
    com.badlogic.gdx.math.Vector2 lastPoint -> lastPoint
    com.badlogic.gdx.math.Vector2 handlePosition -> handlePosition
    void initialize() -> initialize
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle getStyle() -> getStyle
    void layout() -> layout
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    void setVertical(boolean) -> setVertical
    void calculateHorizBoundsAndPositions() -> calculateHorizBoundsAndPositions
    void calculateVertBoundsAndPositions() -> calculateVertBoundsAndPositions
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void setSplitAmount(float) -> setSplitAmount
    float getSplit() -> getSplit
    void setMinSplitAmount(float) -> setMinSplitAmount
    void setMaxSplitAmount(float) -> setMaxSplitAmount
    void setFirstWidget(com.badlogic.gdx.scenes.scene2d.Actor) -> setFirstWidget
    void setSecondWidget(com.badlogic.gdx.scenes.scene2d.Actor) -> setSecondWidget
    void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> addActor
    void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAt
    void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorBefore
    boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$1 -> com.badlogic.gdx.scenes.scene2d.ui.SplitPane$1:
    int draggingPointer -> draggingPointer
    com.badlogic.gdx.scenes.scene2d.ui.SplitPane this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle -> com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable handle -> handle
com.badlogic.gdx.scenes.scene2d.ui.Stack -> com.badlogic.gdx.scenes.scene2d.ui.Stack:
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    float minWidth -> minWidth
    float minHeight -> minHeight
    float maxWidth -> maxWidth
    float maxHeight -> maxHeight
    boolean sizeInvalid -> sizeInvalid
    void invalidate() -> invalidate
    void computeSize() -> computeSize
    void add(com.badlogic.gdx.scenes.scene2d.Actor) -> add
    void layout() -> layout
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    float getMaxWidth() -> getMaxWidth
    float getMaxHeight() -> getMaxHeight
com.badlogic.gdx.scenes.scene2d.ui.Table -> com.badlogic.gdx.scenes.scene2d.ui.Table:
    com.badlogic.gdx.graphics.Color debugTableColor -> debugTableColor
    com.badlogic.gdx.graphics.Color debugCellColor -> debugCellColor
    com.badlogic.gdx.graphics.Color debugActorColor -> debugActorColor
    com.badlogic.gdx.utils.Pool cellPool -> cellPool
    float[] columnWeightedWidth -> columnWeightedWidth
    float[] rowWeightedHeight -> rowWeightedHeight
    int columns -> columns
    int rows -> rows
    com.badlogic.gdx.utils.Array cells -> cells
    com.badlogic.gdx.scenes.scene2d.ui.Cell cellDefaults -> cellDefaults
    com.badlogic.gdx.utils.Array columnDefaults -> columnDefaults
    com.badlogic.gdx.scenes.scene2d.ui.Cell rowDefaults -> rowDefaults
    boolean sizeInvalid -> sizeInvalid
    float[] columnMinWidth -> columnMinWidth
    float[] rowMinHeight -> rowMinHeight
    float[] columnPrefWidth -> columnPrefWidth
    float[] rowPrefHeight -> rowPrefHeight
    float tableMinWidth -> tableMinWidth
    float tableMinHeight -> tableMinHeight
    float tablePrefWidth -> tablePrefWidth
    float tablePrefHeight -> tablePrefHeight
    float[] columnWidth -> columnWidth
    float[] rowHeight -> rowHeight
    float[] expandWidth -> expandWidth
    float[] expandHeight -> expandHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value padTop -> padTop
    com.badlogic.gdx.scenes.scene2d.ui.Value padLeft -> padLeft
    com.badlogic.gdx.scenes.scene2d.ui.Value padBottom -> padBottom
    com.badlogic.gdx.scenes.scene2d.ui.Value padRight -> padRight
    int align -> align
    com.badlogic.gdx.scenes.scene2d.ui.Table$Debug debug -> debug
    com.badlogic.gdx.utils.Array debugRects -> debugRects
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    boolean clip -> clip
    com.badlogic.gdx.scenes.scene2d.ui.Skin skin -> skin
    boolean round -> round
    com.badlogic.gdx.scenes.scene2d.ui.Value backgroundTop -> backgroundTop
    com.badlogic.gdx.scenes.scene2d.ui.Value backgroundLeft -> backgroundLeft
    com.badlogic.gdx.scenes.scene2d.ui.Value backgroundBottom -> backgroundBottom
    com.badlogic.gdx.scenes.scene2d.ui.Value backgroundRight -> backgroundRight
    com.badlogic.gdx.scenes.scene2d.ui.Cell obtainCell() -> obtainCell
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void drawBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float) -> drawBackground
    void setBackground(java.lang.String) -> setBackground
    void setBackground(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> setBackground
    com.badlogic.gdx.scenes.scene2d.ui.Table background(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> background
    com.badlogic.gdx.scenes.scene2d.ui.Table background(java.lang.String) -> background
    com.badlogic.gdx.scenes.scene2d.utils.Drawable getBackground() -> getBackground
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    void setClip(boolean) -> setClip
    boolean getClip() -> getClip
    void invalidate() -> invalidate
    com.badlogic.gdx.scenes.scene2d.ui.Cell add(com.badlogic.gdx.scenes.scene2d.Actor) -> add
    void add(com.badlogic.gdx.scenes.scene2d.Actor[]) -> add
    com.badlogic.gdx.scenes.scene2d.ui.Cell add(java.lang.String) -> add
    com.badlogic.gdx.scenes.scene2d.ui.Cell add(java.lang.String,java.lang.String) -> add
    com.badlogic.gdx.scenes.scene2d.ui.Cell add(java.lang.String,java.lang.String,com.badlogic.gdx.graphics.Color) -> add
    com.badlogic.gdx.scenes.scene2d.ui.Cell add(java.lang.String,java.lang.String,java.lang.String) -> add
    com.badlogic.gdx.scenes.scene2d.ui.Cell add() -> add
    com.badlogic.gdx.scenes.scene2d.ui.Cell stack(com.badlogic.gdx.scenes.scene2d.Actor[]) -> stack
    boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
    void clearChildren() -> clearChildren
    void reset() -> reset
    com.badlogic.gdx.scenes.scene2d.ui.Cell row() -> row
    void endRow() -> endRow
    com.badlogic.gdx.scenes.scene2d.ui.Cell columnDefaults(int) -> columnDefaults
    com.badlogic.gdx.scenes.scene2d.ui.Cell getCell(com.badlogic.gdx.scenes.scene2d.Actor) -> getCell
    com.badlogic.gdx.utils.Array getCells() -> getCells
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    com.badlogic.gdx.scenes.scene2d.ui.Cell defaults() -> defaults
    com.badlogic.gdx.scenes.scene2d.ui.Table pad(com.badlogic.gdx.scenes.scene2d.ui.Value) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.Table pad(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.Table padTop(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padTop
    com.badlogic.gdx.scenes.scene2d.ui.Table padLeft(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padLeft
    com.badlogic.gdx.scenes.scene2d.ui.Table padBottom(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padBottom
    com.badlogic.gdx.scenes.scene2d.ui.Table padRight(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padRight
    com.badlogic.gdx.scenes.scene2d.ui.Table pad(float) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.Table pad(float,float,float,float) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.Table padTop(float) -> padTop
    com.badlogic.gdx.scenes.scene2d.ui.Table padLeft(float) -> padLeft
    com.badlogic.gdx.scenes.scene2d.ui.Table padBottom(float) -> padBottom
    com.badlogic.gdx.scenes.scene2d.ui.Table padRight(float) -> padRight
    com.badlogic.gdx.scenes.scene2d.ui.Table align(int) -> align
    com.badlogic.gdx.scenes.scene2d.ui.Table center() -> center
    com.badlogic.gdx.scenes.scene2d.ui.Table top() -> top
    com.badlogic.gdx.scenes.scene2d.ui.Table left() -> left
    com.badlogic.gdx.scenes.scene2d.ui.Table bottom() -> bottom
    com.badlogic.gdx.scenes.scene2d.ui.Table right() -> right
    void setDebug(boolean) -> setDebug
    com.badlogic.gdx.scenes.scene2d.ui.Table debug() -> debug
    com.badlogic.gdx.scenes.scene2d.ui.Table debugAll() -> debugAll
    com.badlogic.gdx.scenes.scene2d.ui.Table debugTable() -> debugTable
    com.badlogic.gdx.scenes.scene2d.ui.Table debugCell() -> debugCell
    com.badlogic.gdx.scenes.scene2d.ui.Table debugActor() -> debugActor
    com.badlogic.gdx.scenes.scene2d.ui.Table debug(com.badlogic.gdx.scenes.scene2d.ui.Table$Debug) -> debug
    com.badlogic.gdx.scenes.scene2d.ui.Table$Debug getTableDebug() -> getTableDebug
    com.badlogic.gdx.scenes.scene2d.ui.Value getPadTopValue() -> getPadTopValue
    float getPadTop() -> getPadTop
    com.badlogic.gdx.scenes.scene2d.ui.Value getPadLeftValue() -> getPadLeftValue
    float getPadLeft() -> getPadLeft
    com.badlogic.gdx.scenes.scene2d.ui.Value getPadBottomValue() -> getPadBottomValue
    float getPadBottom() -> getPadBottom
    com.badlogic.gdx.scenes.scene2d.ui.Value getPadRightValue() -> getPadRightValue
    float getPadRight() -> getPadRight
    float getPadX() -> getPadX
    float getPadY() -> getPadY
    int getAlign() -> getAlign
    int getRow(float) -> getRow
    void setSkin(com.badlogic.gdx.scenes.scene2d.ui.Skin) -> setSkin
    void setRound(boolean) -> setRound
    int getRows() -> getRows
    int getColumns() -> getColumns
    float[] ensureSize(float[],int) -> ensureSize
    void layout() -> layout
    void computeSize() -> computeSize
    void layout(float,float,float,float) -> layout
    void clearDebugRects() -> clearDebugRects
    void addDebugRect(float,float,float,float,com.badlogic.gdx.graphics.Color) -> addDebugRect
    void drawDebug(com.badlogic.gdx.graphics.glutils.ShapeRenderer) -> drawDebug
    void drawDebugBounds(com.badlogic.gdx.graphics.glutils.ShapeRenderer) -> drawDebugBounds
    void drawDebugRects(com.badlogic.gdx.graphics.glutils.ShapeRenderer) -> drawDebugRects
    com.badlogic.gdx.scenes.scene2d.Group debugAll() -> debugAll
    com.badlogic.gdx.scenes.scene2d.Actor debug() -> debug
com.badlogic.gdx.scenes.scene2d.ui.Table$1 -> com.badlogic.gdx.scenes.scene2d.ui.Table$1:
    com.badlogic.gdx.scenes.scene2d.ui.Cell newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.scenes.scene2d.ui.Table$2 -> com.badlogic.gdx.scenes.scene2d.ui.Table$2:
    float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Table$3 -> com.badlogic.gdx.scenes.scene2d.ui.Table$3:
    float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Table$4 -> com.badlogic.gdx.scenes.scene2d.ui.Table$4:
    float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Table$5 -> com.badlogic.gdx.scenes.scene2d.ui.Table$5:
    float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Table$Debug -> com.badlogic.gdx.scenes.scene2d.ui.Table$Debug:
    com.badlogic.gdx.scenes.scene2d.ui.Table$Debug none -> none
    com.badlogic.gdx.scenes.scene2d.ui.Table$Debug all -> all
    com.badlogic.gdx.scenes.scene2d.ui.Table$Debug table -> table
    com.badlogic.gdx.scenes.scene2d.ui.Table$Debug cell -> cell
    com.badlogic.gdx.scenes.scene2d.ui.Table$Debug actor -> actor
    com.badlogic.gdx.scenes.scene2d.ui.Table$Debug[] $VALUES -> $VALUES
    com.badlogic.gdx.scenes.scene2d.ui.Table$Debug[] values() -> values
    com.badlogic.gdx.scenes.scene2d.ui.Table$Debug valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.scenes.scene2d.ui.Table$DebugRect -> com.badlogic.gdx.scenes.scene2d.ui.Table$DebugRect:
    com.badlogic.gdx.utils.Pool pool -> pool
    com.badlogic.gdx.graphics.Color color -> color
com.badlogic.gdx.scenes.scene2d.ui.TextArea -> com.badlogic.gdx.scenes.scene2d.ui.TextArea:
    com.badlogic.gdx.utils.IntArray linesBreak -> linesBreak
    java.lang.String lastText -> lastText
    int cursorLine -> cursorLine
    int firstLineShowing -> firstLineShowing
    int linesShowing -> linesShowing
    float moveOffset -> moveOffset
    float prefRows -> prefRows
    void initialize() -> initialize
    int letterUnderCursor(float) -> letterUnderCursor
    void setPrefRows(float) -> setPrefRows
    float getPrefHeight() -> getPrefHeight
    int getLines() -> getLines
    boolean newLineAtEnd() -> newLineAtEnd
    void moveCursorLine(int) -> moveCursorLine
    void updateCurrentLine() -> updateCurrentLine
    void showCursor() -> showCursor
    int calculateCurrentLineIndex(int) -> calculateCurrentLineIndex
    void sizeChanged() -> sizeChanged
    float getTextY(com.badlogic.gdx.graphics.g2d.BitmapFont,com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> getTextY
    void drawSelection(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.graphics.g2d.BitmapFont,float,float) -> drawSelection
    void drawText(com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.graphics.g2d.BitmapFont,float,float) -> drawText
    void drawCursor(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.graphics.g2d.BitmapFont,float,float) -> drawCursor
    void calculateOffsets() -> calculateOffsets
    com.badlogic.gdx.scenes.scene2d.InputListener createInputListener() -> createInputListener
    void setSelection(int,int) -> setSelection
    void moveCursor(boolean,boolean) -> moveCursor
    boolean continueCursor(int,int) -> continueCursor
    int getCursorLine() -> getCursorLine
    int getFirstLineShowing() -> getFirstLineShowing
    int getLinesShowing() -> getLinesShowing
com.badlogic.gdx.scenes.scene2d.ui.TextArea$TextAreaListener -> com.badlogic.gdx.scenes.scene2d.ui.TextArea$TextAreaListener:
    com.badlogic.gdx.scenes.scene2d.ui.TextArea this$0 -> this$0
    void setCursorPosition(float,float) -> setCursorPosition
    boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyDown
    boolean keyTyped(com.badlogic.gdx.scenes.scene2d.InputEvent,char) -> keyTyped
    void goHome(boolean) -> goHome
    void goEnd(boolean) -> goEnd
com.badlogic.gdx.scenes.scene2d.ui.TextButton -> com.badlogic.gdx.scenes.scene2d.ui.TextButton:
    com.badlogic.gdx.scenes.scene2d.ui.Label label -> label
    com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle style -> style
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle getStyle() -> getStyle
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    com.badlogic.gdx.scenes.scene2d.ui.Label getLabel() -> getLabel
    com.badlogic.gdx.scenes.scene2d.ui.Cell getLabelCell() -> getLabelCell
    void setText(java.lang.String) -> setText
    java.lang.CharSequence getText() -> getText
    com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> getStyle
com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle -> com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColor -> fontColor
    com.badlogic.gdx.graphics.Color downFontColor -> downFontColor
    com.badlogic.gdx.graphics.Color overFontColor -> overFontColor
    com.badlogic.gdx.graphics.Color checkedFontColor -> checkedFontColor
    com.badlogic.gdx.graphics.Color checkedOverFontColor -> checkedOverFontColor
    com.badlogic.gdx.graphics.Color disabledFontColor -> disabledFontColor
com.badlogic.gdx.scenes.scene2d.ui.TextField -> com.badlogic.gdx.scenes.scene2d.ui.TextField:
    char BACKSPACE -> BACKSPACE
    char ENTER_DESKTOP -> ENTER_DESKTOP
    char ENTER_ANDROID -> ENTER_ANDROID
    char TAB -> TAB
    char DELETE -> DELETE
    char BULLET -> BULLET
    com.badlogic.gdx.math.Vector2 tmp1 -> tmp1
    com.badlogic.gdx.math.Vector2 tmp2 -> tmp2
    com.badlogic.gdx.math.Vector2 tmp3 -> tmp3
    float keyRepeatInitialTime -> keyRepeatInitialTime
    float keyRepeatTime -> keyRepeatTime
    java.lang.String text -> text
    int cursor -> cursor
    int selectionStart -> selectionStart
    boolean hasSelection -> hasSelection
    boolean writeEnters -> writeEnters
    com.badlogic.gdx.utils.FloatArray glyphAdvances -> glyphAdvances
    com.badlogic.gdx.utils.FloatArray glyphPositions -> glyphPositions
    com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle style -> style
    java.lang.String messageText -> messageText
    java.lang.CharSequence displayText -> displayText
    com.badlogic.gdx.utils.Clipboard clipboard -> clipboard
    com.badlogic.gdx.scenes.scene2d.InputListener inputListener -> inputListener
    com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener listener -> listener
    com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter filter -> filter
    com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard keyboard -> keyboard
    boolean focusTraversal -> focusTraversal
    boolean onlyFontChars -> onlyFontChars
    boolean disabled -> disabled
    boolean rightAligned -> rightAligned
    float selectionX -> selectionX
    float selectionWidth -> selectionWidth
    boolean passwordMode -> passwordMode
    java.lang.StringBuilder passwordBuffer -> passwordBuffer
    char passwordCharacter -> passwordCharacter
    float textHeight -> textHeight
    float textOffset -> textOffset
    float renderOffset -> renderOffset
    int visibleTextStart -> visibleTextStart
    int visibleTextEnd -> visibleTextEnd
    int maxLength -> maxLength
    float blinkTime -> blinkTime
    boolean cursorOn -> cursorOn
    long lastBlink -> lastBlink
    com.badlogic.gdx.scenes.scene2d.ui.TextField$KeyRepeatTask keyRepeatTask -> keyRepeatTask
    void initialize() -> initialize
    com.badlogic.gdx.scenes.scene2d.InputListener createInputListener() -> createInputListener
    int letterUnderCursor(float) -> letterUnderCursor
    boolean isWordCharacter(char) -> isWordCharacter
    int[] wordUnderCursor(int) -> wordUnderCursor
    int[] wordUnderCursor(float) -> wordUnderCursor
    boolean withinMaxLength(int) -> withinMaxLength
    void setMaxLength(int) -> setMaxLength
    int getMaxLength() -> getMaxLength
    void setOnlyFontChars(boolean) -> setOnlyFontChars
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle getStyle() -> getStyle
    void calculateOffsets() -> calculateOffsets
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    float getTextY(com.badlogic.gdx.graphics.g2d.BitmapFont,com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> getTextY
    void drawSelection(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.graphics.g2d.BitmapFont,float,float) -> drawSelection
    void drawText(com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.graphics.g2d.BitmapFont,float,float) -> drawText
    void drawCursor(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.graphics.g2d.BitmapFont,float,float) -> drawCursor
    void updateDisplayText() -> updateDisplayText
    void blink() -> blink
    void copy() -> copy
    void cut() -> cut
    void paste() -> paste
    void paste(java.lang.String,boolean) -> paste
    java.lang.String insert(int,java.lang.CharSequence,java.lang.String) -> insert
    int delete() -> delete
    int delete(boolean) -> delete
    int delete(int,int,boolean) -> delete
    void next(boolean) -> next
    com.badlogic.gdx.scenes.scene2d.ui.TextField findNextTextField(com.badlogic.gdx.utils.Array,com.badlogic.gdx.scenes.scene2d.ui.TextField,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,boolean) -> findNextTextField
    com.badlogic.gdx.scenes.scene2d.InputListener getDefaultInputListener() -> getDefaultInputListener
    void setTextFieldListener(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener) -> setTextFieldListener
    void setTextFieldFilter(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter) -> setTextFieldFilter
    com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter getTextFieldFilter() -> getTextFieldFilter
    void setFocusTraversal(boolean) -> setFocusTraversal
    java.lang.String getMessageText() -> getMessageText
    void setMessageText(java.lang.String) -> setMessageText
    void setText(java.lang.String) -> setText
    java.lang.String getText() -> getText
    int getSelectionStart() -> getSelectionStart
    java.lang.String getSelection() -> getSelection
    void setSelection(int,int) -> setSelection
    void selectAll() -> selectAll
    void clearSelection() -> clearSelection
    void setCursorPosition(int) -> setCursorPosition
    int getCursorPosition() -> getCursorPosition
    com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard getOnscreenKeyboard() -> getOnscreenKeyboard
    void setOnscreenKeyboard(com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard) -> setOnscreenKeyboard
    void setClipboard(com.badlogic.gdx.utils.Clipboard) -> setClipboard
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    void setRightAligned(boolean) -> setRightAligned
    void setPasswordMode(boolean) -> setPasswordMode
    boolean isPasswordMode() -> isPasswordMode
    void setPasswordCharacter(char) -> setPasswordCharacter
    void setBlinkTime(float) -> setBlinkTime
    void setDisabled(boolean) -> setDisabled
    boolean isDisabled() -> isDisabled
    void moveCursor(boolean,boolean) -> moveCursor
    boolean continueCursor(int,int) -> continueCursor
com.badlogic.gdx.scenes.scene2d.ui.TextField$DefaultOnscreenKeyboard -> com.badlogic.gdx.scenes.scene2d.ui.TextField$DefaultOnscreenKeyboard:
    void show(boolean) -> show
com.badlogic.gdx.scenes.scene2d.ui.TextField$KeyRepeatTask -> com.badlogic.gdx.scenes.scene2d.ui.TextField$KeyRepeatTask:
    int keycode -> keycode
    com.badlogic.gdx.scenes.scene2d.ui.TextField this$0 -> this$0
    void run() -> run
com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard -> com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard:
    void show(boolean) -> show
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldClickListener -> com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldClickListener:
    com.badlogic.gdx.scenes.scene2d.ui.TextField this$0 -> this$0
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    void setCursorPosition(float,float) -> setCursorPosition
    void goHome(boolean) -> goHome
    void goEnd(boolean) -> goEnd
    boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyDown
    void scheduleKeyRepeatTask(int) -> scheduleKeyRepeatTask
    boolean keyUp(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyUp
    boolean keyTyped(com.badlogic.gdx.scenes.scene2d.InputEvent,char) -> keyTyped
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter -> com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter:
    boolean acceptChar(com.badlogic.gdx.scenes.scene2d.ui.TextField,char) -> acceptChar
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter$DigitsOnlyFilter -> com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter$DigitsOnlyFilter:
    boolean acceptChar(com.badlogic.gdx.scenes.scene2d.ui.TextField,char) -> acceptChar
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener -> com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener:
    void keyTyped(com.badlogic.gdx.scenes.scene2d.ui.TextField,char) -> keyTyped
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle -> com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColor -> fontColor
    com.badlogic.gdx.graphics.Color focusedFontColor -> focusedFontColor
    com.badlogic.gdx.graphics.Color disabledFontColor -> disabledFontColor
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.scenes.scene2d.utils.Drawable focusedBackground -> focusedBackground
    com.badlogic.gdx.scenes.scene2d.utils.Drawable disabledBackground -> disabledBackground
    com.badlogic.gdx.scenes.scene2d.utils.Drawable cursor -> cursor
    com.badlogic.gdx.scenes.scene2d.utils.Drawable selection -> selection
    com.badlogic.gdx.graphics.g2d.BitmapFont messageFont -> messageFont
    com.badlogic.gdx.graphics.Color messageFontColor -> messageFontColor
com.badlogic.gdx.scenes.scene2d.ui.Touchpad -> com.badlogic.gdx.scenes.scene2d.ui.Touchpad:
    com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle style -> style
    boolean touched -> touched
    boolean resetOnTouchUp -> resetOnTouchUp
    float deadzoneRadius -> deadzoneRadius
    com.badlogic.gdx.math.Circle knobBounds -> knobBounds
    com.badlogic.gdx.math.Circle touchBounds -> touchBounds
    com.badlogic.gdx.math.Circle deadzoneBounds -> deadzoneBounds
    com.badlogic.gdx.math.Vector2 knobPosition -> knobPosition
    com.badlogic.gdx.math.Vector2 knobPercent -> knobPercent
    void calculatePositionAndValue(float,float,boolean) -> calculatePositionAndValue
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle getStyle() -> getStyle
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    void layout() -> layout
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    boolean isTouched() -> isTouched
    boolean getResetOnTouchUp() -> getResetOnTouchUp
    void setResetOnTouchUp(boolean) -> setResetOnTouchUp
    void setDeadzone(float) -> setDeadzone
    float getKnobX() -> getKnobX
    float getKnobY() -> getKnobY
    float getKnobPercentX() -> getKnobPercentX
    float getKnobPercentY() -> getKnobPercentY
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$1 -> com.badlogic.gdx.scenes.scene2d.ui.Touchpad$1:
    com.badlogic.gdx.scenes.scene2d.ui.Touchpad this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle -> com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.scenes.scene2d.utils.Drawable knob -> knob
com.badlogic.gdx.scenes.scene2d.ui.Tree -> com.badlogic.gdx.scenes.scene2d.ui.Tree:
    com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle style -> style
    com.badlogic.gdx.utils.Array rootNodes -> rootNodes
    com.badlogic.gdx.scenes.scene2d.utils.Selection selection -> selection
    float ySpacing -> ySpacing
    float iconSpacingLeft -> iconSpacingLeft
    float iconSpacingRight -> iconSpacingRight
    float padding -> padding
    float indentSpacing -> indentSpacing
    float leftColumnWidth -> leftColumnWidth
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    boolean sizeInvalid -> sizeInvalid
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node foundNode -> foundNode
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node overNode -> overNode
    com.badlogic.gdx.scenes.scene2d.utils.ClickListener clickListener -> clickListener
    void initialize() -> initialize
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle) -> setStyle
    void add(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> add
    void insert(int,com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> insert
    void remove(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> remove
    void clearChildren() -> clearChildren
    com.badlogic.gdx.utils.Array getNodes() -> getNodes
    void invalidate() -> invalidate
    void computeSize() -> computeSize
    void computeSize(com.badlogic.gdx.utils.Array,float) -> computeSize
    void layout() -> layout
    float layout(com.badlogic.gdx.utils.Array,float,float) -> layout
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.utils.Array,float) -> draw
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node getNodeAt(float) -> getNodeAt
    float getNodeAt(com.badlogic.gdx.utils.Array,float,float) -> getNodeAt
    void selectNodes(com.badlogic.gdx.utils.Array,float,float) -> selectNodes
    com.badlogic.gdx.scenes.scene2d.utils.Selection getSelection() -> getSelection
    com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle getStyle() -> getStyle
    com.badlogic.gdx.utils.Array getRootNodes() -> getRootNodes
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node getOverNode() -> getOverNode
    void setOverNode(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> setOverNode
    void setPadding(float) -> setPadding
    float getIndentSpacing() -> getIndentSpacing
    void setYSpacing(float) -> setYSpacing
    void setIconSpacing(float,float) -> setIconSpacing
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    void findExpandedObjects(com.badlogic.gdx.utils.Array) -> findExpandedObjects
    void restoreExpandedObjects(com.badlogic.gdx.utils.Array) -> restoreExpandedObjects
    boolean findExpandedObjects(com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Array) -> findExpandedObjects
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node findNode(java.lang.Object) -> findNode
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node findNode(com.badlogic.gdx.utils.Array,java.lang.Object) -> findNode
    void collapseAll() -> collapseAll
    void collapseAll(com.badlogic.gdx.utils.Array) -> collapseAll
    void expandAll() -> expandAll
    void expandAll(com.badlogic.gdx.utils.Array) -> expandAll
    com.badlogic.gdx.scenes.scene2d.utils.ClickListener getClickListener() -> getClickListener
com.badlogic.gdx.scenes.scene2d.ui.Tree$1 -> com.badlogic.gdx.scenes.scene2d.ui.Tree$1:
    com.badlogic.gdx.scenes.scene2d.ui.Tree this$0 -> this$0
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
    boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> mouseMoved
    void exit(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> exit
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node -> com.badlogic.gdx.scenes.scene2d.ui.Tree$Node:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> actor
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node parent -> parent
    com.badlogic.gdx.utils.Array children -> children
    boolean selectable -> selectable
    boolean expanded -> expanded
    com.badlogic.gdx.scenes.scene2d.utils.Drawable icon -> icon
    float height -> height
    java.lang.Object object -> object
    void setExpanded(boolean) -> setExpanded
    void addToTree(com.badlogic.gdx.scenes.scene2d.ui.Tree) -> addToTree
    void removeFromTree(com.badlogic.gdx.scenes.scene2d.ui.Tree) -> removeFromTree
    void add(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> add
    void addAll(com.badlogic.gdx.utils.Array) -> addAll
    void insert(int,com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> insert
    void remove() -> remove
    void remove(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> remove
    void removeAll() -> removeAll
    com.badlogic.gdx.scenes.scene2d.ui.Tree getTree() -> getTree
    com.badlogic.gdx.scenes.scene2d.Actor getActor() -> getActor
    boolean isExpanded() -> isExpanded
    com.badlogic.gdx.utils.Array getChildren() -> getChildren
    void updateChildren() -> updateChildren
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node getParent() -> getParent
    void setIcon(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> setIcon
    java.lang.Object getObject() -> getObject
    void setObject(java.lang.Object) -> setObject
    com.badlogic.gdx.scenes.scene2d.utils.Drawable getIcon() -> getIcon
    int getLevel() -> getLevel
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node findNode(java.lang.Object) -> findNode
    void collapseAll() -> collapseAll
    void expandAll() -> expandAll
    void expandTo() -> expandTo
    boolean isSelectable() -> isSelectable
    void setSelectable(boolean) -> setSelectable
    void findExpandedObjects(com.badlogic.gdx.utils.Array) -> findExpandedObjects
    void restoreExpandedObjects(com.badlogic.gdx.utils.Array) -> restoreExpandedObjects
com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle -> com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable plus -> plus
    com.badlogic.gdx.scenes.scene2d.utils.Drawable minus -> minus
    com.badlogic.gdx.scenes.scene2d.utils.Drawable over -> over
    com.badlogic.gdx.scenes.scene2d.utils.Drawable selection -> selection
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
com.badlogic.gdx.scenes.scene2d.ui.Value -> com.badlogic.gdx.scenes.scene2d.ui.Value:
    com.badlogic.gdx.scenes.scene2d.ui.Value$Fixed zero -> zero
    com.badlogic.gdx.scenes.scene2d.ui.Value minWidth -> minWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value minHeight -> minHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value prefWidth -> prefWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value prefHeight -> prefHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value maxWidth -> maxWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value maxHeight -> maxHeight
    float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
    com.badlogic.gdx.scenes.scene2d.ui.Value percentWidth(float) -> percentWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value percentHeight(float) -> percentHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value percentWidth(float,com.badlogic.gdx.scenes.scene2d.Actor) -> percentWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value percentHeight(float,com.badlogic.gdx.scenes.scene2d.Actor) -> percentHeight
com.badlogic.gdx.scenes.scene2d.ui.Value$1 -> com.badlogic.gdx.scenes.scene2d.ui.Value$1:
    float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Value$10 -> com.badlogic.gdx.scenes.scene2d.ui.Value$10:
    com.badlogic.gdx.scenes.scene2d.Actor val$actor -> val$actor
    float val$percent -> val$percent
    float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Value$2 -> com.badlogic.gdx.scenes.scene2d.ui.Value$2:
    float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Value$3 -> com.badlogic.gdx.scenes.scene2d.ui.Value$3:
    float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Value$4 -> com.badlogic.gdx.scenes.scene2d.ui.Value$4:
    float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Value$5 -> com.badlogic.gdx.scenes.scene2d.ui.Value$5:
    float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Value$6 -> com.badlogic.gdx.scenes.scene2d.ui.Value$6:
    float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Value$7 -> com.badlogic.gdx.scenes.scene2d.ui.Value$7:
    float val$percent -> val$percent
    float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Value$8 -> com.badlogic.gdx.scenes.scene2d.ui.Value$8:
    float val$percent -> val$percent
    float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Value$9 -> com.badlogic.gdx.scenes.scene2d.ui.Value$9:
    com.badlogic.gdx.scenes.scene2d.Actor val$actor -> val$actor
    float val$percent -> val$percent
    float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Value$Fixed -> com.badlogic.gdx.scenes.scene2d.ui.Value$Fixed:
    float value -> value
    float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup -> com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup:
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    boolean sizeInvalid -> sizeInvalid
    int align -> align
    boolean reverse -> reverse
    boolean round -> round
    float spacing -> spacing
    float padTop -> padTop
    float padLeft -> padLeft
    float padBottom -> padBottom
    float padRight -> padRight
    float fill -> fill
    void invalidate() -> invalidate
    void computeSize() -> computeSize
    void layout() -> layout
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    void setRound(boolean) -> setRound
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup reverse() -> reverse
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup reverse(boolean) -> reverse
    boolean getReverse() -> getReverse
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup space(float) -> space
    float getSpace() -> getSpace
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup pad(float) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup pad(float,float,float,float) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup padTop(float) -> padTop
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup padLeft(float) -> padLeft
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup padBottom(float) -> padBottom
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup padRight(float) -> padRight
    float getPadTop() -> getPadTop
    float getPadLeft() -> getPadLeft
    float getPadBottom() -> getPadBottom
    float getPadRight() -> getPadRight
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup align(int) -> align
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup center() -> center
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup left() -> left
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup right() -> right
    int getAlign() -> getAlign
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup fill() -> fill
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup fill(float) -> fill
    float getFill() -> getFill
com.badlogic.gdx.scenes.scene2d.ui.Widget -> com.badlogic.gdx.scenes.scene2d.ui.Widget:
    boolean needsLayout -> needsLayout
    boolean fillParent -> fillParent
    boolean layoutEnabled -> layoutEnabled
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMaxWidth() -> getMaxWidth
    float getMaxHeight() -> getMaxHeight
    void setLayoutEnabled(boolean) -> setLayoutEnabled
    void validate() -> validate
    boolean needsLayout() -> needsLayout
    void invalidate() -> invalidate
    void invalidateHierarchy() -> invalidateHierarchy
    void sizeChanged() -> sizeChanged
    void pack() -> pack
    void setFillParent(boolean) -> setFillParent
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void layout() -> layout
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup -> com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup:
    boolean needsLayout -> needsLayout
    boolean fillParent -> fillParent
    boolean layoutEnabled -> layoutEnabled
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMaxWidth() -> getMaxWidth
    float getMaxHeight() -> getMaxHeight
    void setLayoutEnabled(boolean) -> setLayoutEnabled
    void setLayoutEnabled(com.badlogic.gdx.scenes.scene2d.Group,boolean) -> setLayoutEnabled
    void validate() -> validate
    boolean needsLayout() -> needsLayout
    void invalidate() -> invalidate
    void invalidateHierarchy() -> invalidateHierarchy
    void childrenChanged() -> childrenChanged
    void sizeChanged() -> sizeChanged
    void pack() -> pack
    void setFillParent(boolean) -> setFillParent
    void layout() -> layout
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
com.badlogic.gdx.scenes.scene2d.ui.Window -> com.badlogic.gdx.scenes.scene2d.ui.Window:
    com.badlogic.gdx.math.Vector2 tmpPosition -> tmpPosition
    com.badlogic.gdx.math.Vector2 tmpSize -> tmpSize
    int MOVE -> MOVE
    com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle style -> style
    java.lang.String title -> title
    com.badlogic.gdx.graphics.g2d.BitmapFontCache titleCache -> titleCache
    boolean isMovable -> isMovable
    boolean isModal -> isModal
    boolean isResizable -> isResizable
    int resizeBorder -> resizeBorder
    boolean dragging -> dragging
    int titleAlignment -> titleAlignment
    boolean keepWithinStage -> keepWithinStage
    com.badlogic.gdx.scenes.scene2d.ui.Table buttonTable -> buttonTable
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle getStyle() -> getStyle
    void keepWithinStage() -> keepWithinStage
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void drawStageBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float,float) -> drawStageBackground
    void drawBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float) -> drawBackground
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    void setTitleAlignment(int) -> setTitleAlignment
    boolean isMovable() -> isMovable
    void setMovable(boolean) -> setMovable
    boolean isModal() -> isModal
    void setModal(boolean) -> setModal
    void setKeepWithinStage(boolean) -> setKeepWithinStage
    boolean isResizable() -> isResizable
    void setResizable(boolean) -> setResizable
    void setResizeBorder(int) -> setResizeBorder
    boolean isDragging() -> isDragging
    float getTitleWidth() -> getTitleWidth
    float getPrefWidth() -> getPrefWidth
    com.badlogic.gdx.scenes.scene2d.ui.Table getButtonTable() -> getButtonTable
com.badlogic.gdx.scenes.scene2d.ui.Window$1 -> com.badlogic.gdx.scenes.scene2d.ui.Window$1:
    com.badlogic.gdx.scenes.scene2d.ui.Window this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.badlogic.gdx.scenes.scene2d.ui.Window$2 -> com.badlogic.gdx.scenes.scene2d.ui.Window$2:
    int edge -> edge
    float startX -> startX
    float startY -> startY
    float lastX -> lastX
    float lastY -> lastY
    com.badlogic.gdx.scenes.scene2d.ui.Window this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> mouseMoved
    boolean scrolled(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> scrolled
    boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyDown
    boolean keyUp(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyUp
    boolean keyTyped(com.badlogic.gdx.scenes.scene2d.InputEvent,char) -> keyTyped
com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle -> com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.graphics.g2d.BitmapFont titleFont -> titleFont
    com.badlogic.gdx.graphics.Color titleFontColor -> titleFontColor
    com.badlogic.gdx.scenes.scene2d.utils.Drawable stageBackground -> stageBackground
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener -> com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener:
    com.badlogic.gdx.math.Vector2 tmpCoords -> tmpCoords
    com.badlogic.gdx.input.GestureDetector detector -> detector
    com.badlogic.gdx.scenes.scene2d.InputEvent event -> event
    com.badlogic.gdx.scenes.scene2d.Actor actor -> actor
    com.badlogic.gdx.scenes.scene2d.Actor touchDownTarget -> touchDownTarget
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
    void touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    void tap(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> tap
    boolean longPress(com.badlogic.gdx.scenes.scene2d.Actor,float,float) -> longPress
    void fling(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> fling
    void pan(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,float,float) -> pan
    void zoom(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> zoom
    void pinch(com.badlogic.gdx.scenes.scene2d.InputEvent,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> pinch
    com.badlogic.gdx.input.GestureDetector getGestureDetector() -> getGestureDetector
    com.badlogic.gdx.scenes.scene2d.Actor getTouchDownTarget() -> getTouchDownTarget
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$1 -> com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$1:
    com.badlogic.gdx.math.Vector2 initialPointer1 -> initialPointer1
    com.badlogic.gdx.math.Vector2 initialPointer2 -> initialPointer2
    com.badlogic.gdx.math.Vector2 pointer1 -> pointer1
    com.badlogic.gdx.math.Vector2 pointer2 -> pointer2
    com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener this$0 -> this$0
    boolean tap(float,float,int,int) -> tap
    boolean longPress(float,float) -> longPress
    boolean fling(float,float,int) -> fling
    boolean pan(float,float,float,float) -> pan
    boolean zoom(float,float) -> zoom
    boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> pinch
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$2 -> com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$2:
    int[] $SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type -> $SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type
com.badlogic.gdx.scenes.scene2d.utils.Align -> com.badlogic.gdx.scenes.scene2d.utils.Align:
    int center -> center
    int top -> top
    int bottom -> bottom
    int left -> left
    int right -> right
    int topLeft -> topLeft
    int topRight -> topRight
    int bottomLeft -> bottomLeft
    int bottomRight -> bottomRight
com.badlogic.gdx.scenes.scene2d.utils.ArraySelection -> com.badlogic.gdx.scenes.scene2d.utils.ArraySelection:
    com.badlogic.gdx.utils.Array array -> array
    boolean rangeSelect -> rangeSelect
    void choose(java.lang.Object) -> choose
    boolean getRangeSelect() -> getRangeSelect
    void setRangeSelect(boolean) -> setRangeSelect
    void validate() -> validate
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable -> com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable:
    java.lang.String name -> name
    float leftWidth -> leftWidth
    float rightWidth -> rightWidth
    float topHeight -> topHeight
    float bottomHeight -> bottomHeight
    float minWidth -> minWidth
    float minHeight -> minHeight
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float) -> draw
    float getLeftWidth() -> getLeftWidth
    void setLeftWidth(float) -> setLeftWidth
    float getRightWidth() -> getRightWidth
    void setRightWidth(float) -> setRightWidth
    float getTopHeight() -> getTopHeight
    void setTopHeight(float) -> setTopHeight
    float getBottomHeight() -> getBottomHeight
    void setBottomHeight(float) -> setBottomHeight
    float getMinWidth() -> getMinWidth
    void setMinWidth(float) -> setMinWidth
    float getMinHeight() -> getMinHeight
    void setMinHeight(float) -> setMinHeight
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.utils.ChangeListener -> com.badlogic.gdx.scenes.scene2d.utils.ChangeListener:
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
    void changed(com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent,com.badlogic.gdx.scenes.scene2d.Actor) -> changed
com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent -> com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent:
com.badlogic.gdx.scenes.scene2d.utils.ClickListener -> com.badlogic.gdx.scenes.scene2d.utils.ClickListener:
    float visualPressedDuration -> visualPressedDuration
    float tapSquareSize -> tapSquareSize
    float touchDownX -> touchDownX
    float touchDownY -> touchDownY
    int pressedPointer -> pressedPointer
    int pressedButton -> pressedButton
    int button -> button
    boolean pressed -> pressed
    boolean over -> over
    boolean cancelled -> cancelled
    long visualPressedTime -> visualPressedTime
    long tapCountInterval -> tapCountInterval
    int tapCount -> tapCount
    long lastTapTime -> lastTapTime
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    void enter(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> enter
    void exit(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> exit
    void cancel() -> cancel
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
    boolean isOver(com.badlogic.gdx.scenes.scene2d.Actor,float,float) -> isOver
    boolean inTapSquare(float,float) -> inTapSquare
    boolean inTapSquare() -> inTapSquare
    void invalidateTapSquare() -> invalidateTapSquare
    boolean isPressed() -> isPressed
    boolean isVisualPressed() -> isVisualPressed
    boolean isOver() -> isOver
    void setTapSquareSize(float) -> setTapSquareSize
    float getTapSquareSize() -> getTapSquareSize
    void setTapCountInterval(float) -> setTapCountInterval
    int getTapCount() -> getTapCount
    float getTouchDownX() -> getTouchDownX
    float getTouchDownY() -> getTouchDownY
    int getPressedButton() -> getPressedButton
    int getPressedPointer() -> getPressedPointer
    int getButton() -> getButton
    void setButton(int) -> setButton
com.badlogic.gdx.scenes.scene2d.utils.Cullable -> com.badlogic.gdx.scenes.scene2d.utils.Cullable:
    void setCullingArea(com.badlogic.gdx.math.Rectangle) -> setCullingArea
com.badlogic.gdx.scenes.scene2d.utils.Disableable -> com.badlogic.gdx.scenes.scene2d.utils.Disableable:
    void setDisabled(boolean) -> setDisabled
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop -> com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop:
    com.badlogic.gdx.math.Vector2 tmpVector -> tmpVector
    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload payload -> payload
    com.badlogic.gdx.scenes.scene2d.Actor dragActor -> dragActor
    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target target -> target
    boolean isValidTarget -> isValidTarget
    com.badlogic.gdx.utils.Array targets -> targets
    com.badlogic.gdx.utils.ObjectMap sourceListeners -> sourceListeners
    float tapSquareSize -> tapSquareSize
    int button -> button
    float dragActorX -> dragActorX
    float dragActorY -> dragActorY
    float touchOffsetX -> touchOffsetX
    float touchOffsetY -> touchOffsetY
    long dragStartTime -> dragStartTime
    int dragTime -> dragTime
    int activePointer -> activePointer
    boolean cancelTouchFocus -> cancelTouchFocus
    boolean keepWithinStage -> keepWithinStage
    void addSource(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source) -> addSource
    void removeSource(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source) -> removeSource
    void addTarget(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target) -> addTarget
    void removeTarget(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target) -> removeTarget
    void clear() -> clear
    void setTapSquareSize(float) -> setTapSquareSize
    void setButton(int) -> setButton
    void setDragActorPosition(float,float) -> setDragActorPosition
    void setTouchOffset(float,float) -> setTouchOffset
    boolean isDragging() -> isDragging
    com.badlogic.gdx.scenes.scene2d.Actor getDragActor() -> getDragActor
    void setDragTime(int) -> setDragTime
    void setCancelTouchFocus(boolean) -> setCancelTouchFocus
    void setKeepWithinStage(boolean) -> setKeepWithinStage
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$1 -> com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$1:
    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source val$source -> val$source
    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop this$0 -> this$0
    void dragStart(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> dragStart
    void drag(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> drag
    void dragStop(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> dragStop
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload -> com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload:
    com.badlogic.gdx.scenes.scene2d.Actor dragActor -> dragActor
    com.badlogic.gdx.scenes.scene2d.Actor validDragActor -> validDragActor
    com.badlogic.gdx.scenes.scene2d.Actor invalidDragActor -> invalidDragActor
    java.lang.Object object -> object
    void setDragActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setDragActor
    com.badlogic.gdx.scenes.scene2d.Actor getDragActor() -> getDragActor
    void setValidDragActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setValidDragActor
    com.badlogic.gdx.scenes.scene2d.Actor getValidDragActor() -> getValidDragActor
    void setInvalidDragActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setInvalidDragActor
    com.badlogic.gdx.scenes.scene2d.Actor getInvalidDragActor() -> getInvalidDragActor
    java.lang.Object getObject() -> getObject
    void setObject(java.lang.Object) -> setObject
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source -> com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> actor
    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload dragStart(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> dragStart
    void dragStop(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target) -> dragStop
    com.badlogic.gdx.scenes.scene2d.Actor getActor() -> getActor
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target -> com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> actor
    boolean drag(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload,float,float,int) -> drag
    void reset(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload) -> reset
    void drop(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload,float,float,int) -> drop
    com.badlogic.gdx.scenes.scene2d.Actor getActor() -> getActor
com.badlogic.gdx.scenes.scene2d.utils.DragListener -> com.badlogic.gdx.scenes.scene2d.utils.DragListener:
    float tapSquareSize -> tapSquareSize
    float touchDownX -> touchDownX
    float touchDownY -> touchDownY
    float stageTouchDownX -> stageTouchDownX
    float stageTouchDownY -> stageTouchDownY
    int pressedPointer -> pressedPointer
    int button -> button
    boolean dragging -> dragging
    float deltaX -> deltaX
    float deltaY -> deltaY
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    void dragStart(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> dragStart
    void drag(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> drag
    void dragStop(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> dragStop
    void cancel() -> cancel
    boolean isDragging() -> isDragging
    void setTapSquareSize(float) -> setTapSquareSize
    float getTapSquareSize() -> getTapSquareSize
    float getTouchDownX() -> getTouchDownX
    float getTouchDownY() -> getTouchDownY
    float getStageTouchDownX() -> getStageTouchDownX
    float getStageTouchDownY() -> getStageTouchDownY
    float getDeltaX() -> getDeltaX
    float getDeltaY() -> getDeltaY
    int getButton() -> getButton
    void setButton(int) -> setButton
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener -> com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane scroll -> scroll
    com.badlogic.gdx.utils.Timer$Task scrollUp -> scrollUp
    com.badlogic.gdx.utils.Timer$Task scrollDown -> scrollDown
    com.badlogic.gdx.math.Interpolation interpolation -> interpolation
    float minSpeed -> minSpeed
    float maxSpeed -> maxSpeed
    float tickSecs -> tickSecs
    long startTime -> startTime
    long rampTime -> rampTime
    void setup(float,float,float,float) -> setup
    float getScrollPixels() -> getScrollPixels
    void drag(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> drag
    void dragStop(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> dragStop
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$1 -> com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$1:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane val$scroll -> val$scroll
    com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener this$0 -> this$0
    void run() -> run
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$2 -> com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$2:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane val$scroll -> val$scroll
    com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener this$0 -> this$0
    void run() -> run
com.badlogic.gdx.scenes.scene2d.utils.Drawable -> com.badlogic.gdx.scenes.scene2d.utils.Drawable:
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float) -> draw
    float getLeftWidth() -> getLeftWidth
    void setLeftWidth(float) -> setLeftWidth
    float getRightWidth() -> getRightWidth
    void setRightWidth(float) -> setRightWidth
    float getTopHeight() -> getTopHeight
    void setTopHeight(float) -> setTopHeight
    float getBottomHeight() -> getBottomHeight
    void setBottomHeight(float) -> setBottomHeight
    float getMinWidth() -> getMinWidth
    void setMinWidth(float) -> setMinWidth
    float getMinHeight() -> getMinHeight
    void setMinHeight(float) -> setMinHeight
com.badlogic.gdx.scenes.scene2d.utils.FocusListener -> com.badlogic.gdx.scenes.scene2d.utils.FocusListener:
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
    void keyboardFocusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent,com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> keyboardFocusChanged
    void scrollFocusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent,com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> scrollFocusChanged
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$1 -> com.badlogic.gdx.scenes.scene2d.utils.FocusListener$1:
    int[] $SwitchMap$com$badlogic$gdx$scenes$scene2d$utils$FocusListener$FocusEvent$Type -> $SwitchMap$com$badlogic$gdx$scenes$scene2d$utils$FocusListener$FocusEvent$Type
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent -> com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent:
    boolean focused -> focused
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type type -> type
    com.badlogic.gdx.scenes.scene2d.Actor relatedActor -> relatedActor
    void reset() -> reset
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type getType() -> getType
    void setType(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type) -> setType
    com.badlogic.gdx.scenes.scene2d.Actor getRelatedActor() -> getRelatedActor
    void setRelatedActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setRelatedActor
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type -> com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type:
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type keyboard -> keyboard
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type scroll -> scroll
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type[] $VALUES -> $VALUES
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type[] values() -> values
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.scenes.scene2d.utils.Layout -> com.badlogic.gdx.scenes.scene2d.utils.Layout:
    void layout() -> layout
    void invalidate() -> invalidate
    void invalidateHierarchy() -> invalidateHierarchy
    void validate() -> validate
    void pack() -> pack
    void setFillParent(boolean) -> setFillParent
    void setLayoutEnabled(boolean) -> setLayoutEnabled
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMaxWidth() -> getMaxWidth
    float getMaxHeight() -> getMaxHeight
com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable -> com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable:
    com.badlogic.gdx.graphics.g2d.NinePatch patch -> patch
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float) -> draw
    void setPatch(com.badlogic.gdx.graphics.g2d.NinePatch) -> setPatch
    com.badlogic.gdx.graphics.g2d.NinePatch getPatch() -> getPatch
com.badlogic.gdx.scenes.scene2d.utils.ScissorStack -> com.badlogic.gdx.scenes.scene2d.utils.ScissorStack:
    com.badlogic.gdx.utils.Array scissors -> scissors
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    com.badlogic.gdx.math.Rectangle viewport -> viewport
    boolean pushScissors(com.badlogic.gdx.math.Rectangle) -> pushScissors
    com.badlogic.gdx.math.Rectangle popScissors() -> popScissors
    com.badlogic.gdx.math.Rectangle peekScissors() -> peekScissors
    void fix(com.badlogic.gdx.math.Rectangle) -> fix
    void calculateScissors(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle) -> calculateScissors
    void calculateScissors(com.badlogic.gdx.graphics.Camera,float,float,float,float,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle) -> calculateScissors
    com.badlogic.gdx.math.Rectangle getViewport() -> getViewport
com.badlogic.gdx.scenes.scene2d.utils.Selection -> com.badlogic.gdx.scenes.scene2d.utils.Selection:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> actor
    com.badlogic.gdx.utils.OrderedSet selected -> selected
    com.badlogic.gdx.utils.OrderedSet old -> old
    boolean isDisabled -> isDisabled
    boolean toggle -> toggle
    boolean multiple -> multiple
    boolean required -> required
    boolean programmaticChangeEvents -> programmaticChangeEvents
    java.lang.Object lastSelected -> lastSelected
    void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setActor
    void choose(java.lang.Object) -> choose
    boolean hasItems() -> hasItems
    boolean isEmpty() -> isEmpty
    int size() -> size
    com.badlogic.gdx.utils.OrderedSet items() -> items
    java.lang.Object first() -> first
    void snapshot() -> snapshot
    void revert() -> revert
    void cleanup() -> cleanup
    void set(java.lang.Object) -> set
    void setAll(com.badlogic.gdx.utils.Array) -> setAll
    void add(java.lang.Object) -> add
    void addAll(com.badlogic.gdx.utils.Array) -> addAll
    void remove(java.lang.Object) -> remove
    void removeAll(com.badlogic.gdx.utils.Array) -> removeAll
    void clear() -> clear
    boolean fireChangeEvent() -> fireChangeEvent
    boolean contains(java.lang.Object) -> contains
    java.lang.Object getLastSelected() -> getLastSelected
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    com.badlogic.gdx.utils.Array toArray(com.badlogic.gdx.utils.Array) -> toArray
    void setDisabled(boolean) -> setDisabled
    boolean isDisabled() -> isDisabled
    boolean getToggle() -> getToggle
    void setToggle(boolean) -> setToggle
    boolean getMultiple() -> getMultiple
    void setMultiple(boolean) -> setMultiple
    boolean getRequired() -> getRequired
    void setRequired(boolean) -> setRequired
    void setProgrammaticChangeEvents(boolean) -> setProgrammaticChangeEvents
    java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.utils.SpriteDrawable -> com.badlogic.gdx.scenes.scene2d.utils.SpriteDrawable:
    com.badlogic.gdx.graphics.g2d.Sprite sprite -> sprite
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float,float,float,float,float,float) -> draw
    void setSprite(com.badlogic.gdx.graphics.g2d.Sprite) -> setSprite
    com.badlogic.gdx.graphics.g2d.Sprite getSprite() -> getSprite
com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable -> com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable:
    com.badlogic.gdx.graphics.g2d.TextureRegion region -> region
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float,float,float,float,float,float) -> draw
    void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion) -> setRegion
    com.badlogic.gdx.graphics.g2d.TextureRegion getRegion() -> getRegion
com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable -> com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable:
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float) -> draw
com.badlogic.gdx.scenes.scene2d.utils.TransformDrawable -> com.badlogic.gdx.scenes.scene2d.utils.TransformDrawable:
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float,float,float,float,float,float) -> draw
com.badlogic.gdx.scenes.scene2d.utils.UIUtils -> com.badlogic.gdx.scenes.scene2d.utils.UIUtils:
    boolean isMac -> isMac
    boolean isWindows -> isWindows
    boolean isLinux -> isLinux
    boolean left() -> left
    boolean left(int) -> left
    boolean right() -> right
    boolean right(int) -> right
    boolean middle() -> middle
    boolean middle(int) -> middle
    boolean shift() -> shift
    boolean shift(int) -> shift
    boolean ctrl() -> ctrl
    boolean ctrl(int) -> ctrl
    boolean alt() -> alt
    boolean alt(int) -> alt
com.badlogic.gdx.utils.Array -> com.badlogic.gdx.utils.Array:
    java.lang.Object[] items -> items
    int size -> size
    boolean ordered -> ordered
    com.badlogic.gdx.utils.Array$ArrayIterable iterable -> iterable
    com.badlogic.gdx.utils.Predicate$PredicateIterable predicateIterable -> predicateIterable
    void add(java.lang.Object) -> add
    void addAll(com.badlogic.gdx.utils.Array) -> addAll
    void addAll(com.badlogic.gdx.utils.Array,int,int) -> addAll
    void addAll(java.lang.Object[]) -> addAll
    void addAll(java.lang.Object[],int,int) -> addAll
    java.lang.Object get(int) -> get
    void set(int,java.lang.Object) -> set
    void insert(int,java.lang.Object) -> insert
    void swap(int,int) -> swap
    boolean contains(java.lang.Object,boolean) -> contains
    int indexOf(java.lang.Object,boolean) -> indexOf
    int lastIndexOf(java.lang.Object,boolean) -> lastIndexOf
    boolean removeValue(java.lang.Object,boolean) -> removeValue
    java.lang.Object removeIndex(int) -> removeIndex
    void removeRange(int,int) -> removeRange
    boolean removeAll(com.badlogic.gdx.utils.Array,boolean) -> removeAll
    java.lang.Object pop() -> pop
    java.lang.Object peek() -> peek
    java.lang.Object first() -> first
    void clear() -> clear
    java.lang.Object[] shrink() -> shrink
    java.lang.Object[] ensureCapacity(int) -> ensureCapacity
    java.lang.Object[] resize(int) -> resize
    void sort() -> sort
    void sort(java.util.Comparator) -> sort
    java.lang.Object selectRanked(java.util.Comparator,int) -> selectRanked
    int selectRankedIndex(java.util.Comparator,int) -> selectRankedIndex
    void reverse() -> reverse
    void shuffle() -> shuffle
    java.util.Iterator iterator() -> iterator
    java.lang.Iterable select(com.badlogic.gdx.utils.Predicate) -> select
    void truncate(int) -> truncate
    java.lang.Object random() -> random
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Class) -> toArray
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    com.badlogic.gdx.utils.Array of(java.lang.Class) -> of
    com.badlogic.gdx.utils.Array of(boolean,int,java.lang.Class) -> of
    com.badlogic.gdx.utils.Array with(java.lang.Object[]) -> with
com.badlogic.gdx.utils.Array$ArrayIterable -> com.badlogic.gdx.utils.Array$ArrayIterable:
    com.badlogic.gdx.utils.Array array -> array
    boolean allowRemove -> allowRemove
    com.badlogic.gdx.utils.Array$ArrayIterator iterator1 -> iterator1
    com.badlogic.gdx.utils.Array$ArrayIterator iterator2 -> iterator2
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.Array$ArrayIterator -> com.badlogic.gdx.utils.Array$ArrayIterator:
    com.badlogic.gdx.utils.Array array -> array
    boolean allowRemove -> allowRemove
    int index -> index
    boolean valid -> valid
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    void reset() -> reset
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.ArrayMap -> com.badlogic.gdx.utils.ArrayMap:
    java.lang.Object[] keys -> keys
    java.lang.Object[] values -> values
    int size -> size
    boolean ordered -> ordered
    com.badlogic.gdx.utils.ArrayMap$Entries entries1 -> entries1
    com.badlogic.gdx.utils.ArrayMap$Entries entries2 -> entries2
    com.badlogic.gdx.utils.ArrayMap$Values valuesIter1 -> valuesIter1
    com.badlogic.gdx.utils.ArrayMap$Values valuesIter2 -> valuesIter2
    com.badlogic.gdx.utils.ArrayMap$Keys keysIter1 -> keysIter1
    com.badlogic.gdx.utils.ArrayMap$Keys keysIter2 -> keysIter2
    void put(java.lang.Object,java.lang.Object) -> put
    void put(java.lang.Object,java.lang.Object,int) -> put
    void putAll(com.badlogic.gdx.utils.ArrayMap) -> putAll
    void putAll(com.badlogic.gdx.utils.ArrayMap,int,int) -> putAll
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object getKey(java.lang.Object,boolean) -> getKey
    java.lang.Object getKeyAt(int) -> getKeyAt
    java.lang.Object getValueAt(int) -> getValueAt
    java.lang.Object firstKey() -> firstKey
    java.lang.Object firstValue() -> firstValue
    void setKey(int,java.lang.Object) -> setKey
    void setValue(int,java.lang.Object) -> setValue
    void insert(int,java.lang.Object,java.lang.Object) -> insert
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object,boolean) -> containsValue
    int indexOfKey(java.lang.Object) -> indexOfKey
    int indexOfValue(java.lang.Object,boolean) -> indexOfValue
    java.lang.Object removeKey(java.lang.Object) -> removeKey
    boolean removeValue(java.lang.Object,boolean) -> removeValue
    void removeIndex(int) -> removeIndex
    java.lang.Object peekKey() -> peekKey
    java.lang.Object peekValue() -> peekValue
    void clear(int) -> clear
    void clear() -> clear
    void shrink() -> shrink
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.ArrayMap$Entries entries() -> entries
    com.badlogic.gdx.utils.ArrayMap$Values values() -> values
    com.badlogic.gdx.utils.ArrayMap$Keys keys() -> keys
com.badlogic.gdx.utils.ArrayMap$Entries -> com.badlogic.gdx.utils.ArrayMap$Entries:
    com.badlogic.gdx.utils.ArrayMap map -> map
    com.badlogic.gdx.utils.ObjectMap$Entry entry -> entry
    int index -> index
    boolean valid -> valid
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.ObjectMap$Entry next() -> next
    void remove() -> remove
    void reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.ArrayMap$Keys -> com.badlogic.gdx.utils.ArrayMap$Keys:
    com.badlogic.gdx.utils.ArrayMap map -> map
    int index -> index
    boolean valid -> valid
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    java.lang.Object next() -> next
    void remove() -> remove
    void reset() -> reset
    com.badlogic.gdx.utils.Array toArray() -> toArray
    com.badlogic.gdx.utils.Array toArray(com.badlogic.gdx.utils.Array) -> toArray
com.badlogic.gdx.utils.ArrayMap$Values -> com.badlogic.gdx.utils.ArrayMap$Values:
    com.badlogic.gdx.utils.ArrayMap map -> map
    int index -> index
    boolean valid -> valid
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    java.lang.Object next() -> next
    void remove() -> remove
    void reset() -> reset
    com.badlogic.gdx.utils.Array toArray() -> toArray
    com.badlogic.gdx.utils.Array toArray(com.badlogic.gdx.utils.Array) -> toArray
com.badlogic.gdx.utils.AtomicQueue -> com.badlogic.gdx.utils.AtomicQueue:
    java.util.concurrent.atomic.AtomicInteger writeIndex -> writeIndex
    java.util.concurrent.atomic.AtomicInteger readIndex -> readIndex
    java.util.concurrent.atomic.AtomicReferenceArray queue -> queue
    int next(int) -> next
    boolean put(java.lang.Object) -> put
    java.lang.Object poll() -> poll
com.badlogic.gdx.utils.Base64Coder -> com.badlogic.gdx.utils.Base64Coder:
    java.lang.String systemLineSeparator -> systemLineSeparator
    char[] map1 -> map1
    byte[] map2 -> map2
    java.lang.String encodeString(java.lang.String) -> encodeString
    java.lang.String encodeLines(byte[]) -> encodeLines
    java.lang.String encodeLines(byte[],int,int,int,java.lang.String) -> encodeLines
    char[] encode(byte[]) -> encode
    char[] encode(byte[],int) -> encode
    char[] encode(byte[],int,int) -> encode
    java.lang.String decodeString(java.lang.String) -> decodeString
    byte[] decodeLines(java.lang.String) -> decodeLines
    byte[] decode(java.lang.String) -> decode
    byte[] decode(char[]) -> decode
    byte[] decode(char[],int,int) -> decode
com.badlogic.gdx.utils.BaseJsonReader -> com.badlogic.gdx.utils.BaseJsonReader:
    com.badlogic.gdx.utils.JsonValue parse(java.io.InputStream) -> parse
    com.badlogic.gdx.utils.JsonValue parse(com.badlogic.gdx.files.FileHandle) -> parse
com.badlogic.gdx.utils.BinaryHeap -> com.badlogic.gdx.utils.BinaryHeap:
    int size -> size
    com.badlogic.gdx.utils.BinaryHeap$Node[] nodes -> nodes
    boolean isMaxHeap -> isMaxHeap
    com.badlogic.gdx.utils.BinaryHeap$Node add(com.badlogic.gdx.utils.BinaryHeap$Node) -> add
    com.badlogic.gdx.utils.BinaryHeap$Node add(com.badlogic.gdx.utils.BinaryHeap$Node,float) -> add
    com.badlogic.gdx.utils.BinaryHeap$Node peek() -> peek
    com.badlogic.gdx.utils.BinaryHeap$Node pop() -> pop
    com.badlogic.gdx.utils.BinaryHeap$Node remove(com.badlogic.gdx.utils.BinaryHeap$Node) -> remove
    com.badlogic.gdx.utils.BinaryHeap$Node remove(int) -> remove
    void clear() -> clear
    void setValue(com.badlogic.gdx.utils.BinaryHeap$Node,float) -> setValue
    void up(int) -> up
    void down(int) -> down
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.BinaryHeap$Node -> com.badlogic.gdx.utils.BinaryHeap$Node:
    float value -> value
    int index -> index
    float getValue() -> getValue
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.Bits -> com.badlogic.gdx.utils.Bits:
    long[] bits -> bits
    boolean get(int) -> get
    boolean getAndClear(int) -> getAndClear
    boolean getAndSet(int) -> getAndSet
    void set(int) -> set
    void flip(int) -> flip
    void checkCapacity(int) -> checkCapacity
    void clear(int) -> clear
    void clear() -> clear
    int numBits() -> numBits
    int length() -> length
    boolean isEmpty() -> isEmpty
    int nextSetBit(int) -> nextSetBit
    int nextClearBit(int) -> nextClearBit
    void and(com.badlogic.gdx.utils.Bits) -> and
    void andNot(com.badlogic.gdx.utils.Bits) -> andNot
    void or(com.badlogic.gdx.utils.Bits) -> or
    void xor(com.badlogic.gdx.utils.Bits) -> xor
    boolean intersects(com.badlogic.gdx.utils.Bits) -> intersects
    boolean containsAll(com.badlogic.gdx.utils.Bits) -> containsAll
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.utils.BooleanArray -> com.badlogic.gdx.utils.BooleanArray:
    boolean[] items -> items
    int size -> size
    boolean ordered -> ordered
    void add(boolean) -> add
    void addAll(com.badlogic.gdx.utils.BooleanArray) -> addAll
    void addAll(com.badlogic.gdx.utils.BooleanArray,int,int) -> addAll
    void addAll(boolean[]) -> addAll
    void addAll(boolean[],int,int) -> addAll
    boolean get(int) -> get
    void set(int,boolean) -> set
    void insert(int,boolean) -> insert
    void swap(int,int) -> swap
    boolean removeIndex(int) -> removeIndex
    void removeRange(int,int) -> removeRange
    boolean removeAll(com.badlogic.gdx.utils.BooleanArray) -> removeAll
    boolean pop() -> pop
    boolean peek() -> peek
    boolean first() -> first
    void clear() -> clear
    boolean[] shrink() -> shrink
    boolean[] ensureCapacity(int) -> ensureCapacity
    boolean[] resize(int) -> resize
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    boolean random() -> random
    boolean[] toArray() -> toArray
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    com.badlogic.gdx.utils.BooleanArray with(boolean[]) -> with
com.badlogic.gdx.utils.BufferUtils -> com.badlogic.gdx.utils.BufferUtils:
    com.badlogic.gdx.utils.Array unsafeBuffers -> unsafeBuffers
    int allocatedUnsafe -> allocatedUnsafe
    void copy(float[],java.nio.Buffer,int,int) -> copy
    void copy(byte[],int,java.nio.Buffer,int) -> copy
    void copy(short[],int,java.nio.Buffer,int) -> copy
    void copy(char[],int,int,java.nio.Buffer) -> copy
    void copy(int[],int,int,java.nio.Buffer) -> copy
    void copy(long[],int,int,java.nio.Buffer) -> copy
    void copy(float[],int,int,java.nio.Buffer) -> copy
    void copy(double[],int,int,java.nio.Buffer) -> copy
    void copy(char[],int,java.nio.Buffer,int) -> copy
    void copy(int[],int,java.nio.Buffer,int) -> copy
    void copy(long[],int,java.nio.Buffer,int) -> copy
    void copy(float[],int,java.nio.Buffer,int) -> copy
    void copy(double[],int,java.nio.Buffer,int) -> copy
    void copy(java.nio.Buffer,java.nio.Buffer,int) -> copy
    void transform(java.nio.Buffer,int,int,int,com.badlogic.gdx.math.Matrix4) -> transform
    void transform(float[],int,int,int,com.badlogic.gdx.math.Matrix4) -> transform
    void transform(java.nio.Buffer,int,int,int,com.badlogic.gdx.math.Matrix4,int) -> transform
    void transform(float[],int,int,int,com.badlogic.gdx.math.Matrix4,int) -> transform
    void transform(java.nio.Buffer,int,int,int,com.badlogic.gdx.math.Matrix3) -> transform
    void transform(float[],int,int,int,com.badlogic.gdx.math.Matrix3) -> transform
    void transform(java.nio.Buffer,int,int,int,com.badlogic.gdx.math.Matrix3,int) -> transform
    void transform(float[],int,int,int,com.badlogic.gdx.math.Matrix3,int) -> transform
    long findFloats(java.nio.Buffer,int,java.nio.Buffer,int) -> findFloats
    long findFloats(float[],int,java.nio.Buffer,int) -> findFloats
    long findFloats(java.nio.Buffer,int,float[],int) -> findFloats
    long findFloats(float[],int,float[],int) -> findFloats
    long findFloats(java.nio.Buffer,int,java.nio.Buffer,int,float) -> findFloats
    long findFloats(float[],int,java.nio.Buffer,int,float) -> findFloats
    long findFloats(java.nio.Buffer,int,float[],int,float) -> findFloats
    long findFloats(float[],int,float[],int,float) -> findFloats
    int positionInBytes(java.nio.Buffer) -> positionInBytes
    int bytesToElements(java.nio.Buffer,int) -> bytesToElements
    int elementsToBytes(java.nio.Buffer,int) -> elementsToBytes
    java.nio.FloatBuffer newFloatBuffer(int) -> newFloatBuffer
    java.nio.DoubleBuffer newDoubleBuffer(int) -> newDoubleBuffer
    java.nio.ByteBuffer newByteBuffer(int) -> newByteBuffer
    java.nio.ShortBuffer newShortBuffer(int) -> newShortBuffer
    java.nio.CharBuffer newCharBuffer(int) -> newCharBuffer
    java.nio.IntBuffer newIntBuffer(int) -> newIntBuffer
    java.nio.LongBuffer newLongBuffer(int) -> newLongBuffer
    void disposeUnsafeByteBuffer(java.nio.ByteBuffer) -> disposeUnsafeByteBuffer
    java.nio.ByteBuffer newUnsafeByteBuffer(int) -> newUnsafeByteBuffer
    long getUnsafeBufferAddress(java.nio.Buffer) -> getUnsafeBufferAddress
    java.nio.ByteBuffer newUnsafeByteBuffer(java.nio.ByteBuffer) -> newUnsafeByteBuffer
    int getAllocatedBytesUnsafe() -> getAllocatedBytesUnsafe
    void freeMemory(java.nio.ByteBuffer) -> freeMemory
    java.nio.ByteBuffer newDisposableByteBuffer(int) -> newDisposableByteBuffer
    long getBufferAddress(java.nio.Buffer) -> getBufferAddress
    void clear(java.nio.ByteBuffer,int) -> clear
    void copyJni(float[],java.nio.Buffer,int,int) -> copyJni
    void copyJni(byte[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(char[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(short[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(int[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(long[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(float[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(double[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(java.nio.Buffer,int,java.nio.Buffer,int,int) -> copyJni
    void transformV4M4Jni(java.nio.Buffer,int,int,float[],int) -> transformV4M4Jni
    void transformV4M4Jni(float[],int,int,float[],int) -> transformV4M4Jni
    void transformV3M4Jni(java.nio.Buffer,int,int,float[],int) -> transformV3M4Jni
    void transformV3M4Jni(float[],int,int,float[],int) -> transformV3M4Jni
    void transformV2M4Jni(java.nio.Buffer,int,int,float[],int) -> transformV2M4Jni
    void transformV2M4Jni(float[],int,int,float[],int) -> transformV2M4Jni
    void transformV3M3Jni(java.nio.Buffer,int,int,float[],int) -> transformV3M3Jni
    void transformV3M3Jni(float[],int,int,float[],int) -> transformV3M3Jni
    void transformV2M3Jni(java.nio.Buffer,int,int,float[],int) -> transformV2M3Jni
    void transformV2M3Jni(float[],int,int,float[],int) -> transformV2M3Jni
    long find(java.nio.Buffer,int,int,java.nio.Buffer,int,int) -> find
    long find(float[],int,int,java.nio.Buffer,int,int) -> find
    long find(java.nio.Buffer,int,int,float[],int,int) -> find
    long find(float[],int,int,float[],int,int) -> find
    long find(java.nio.Buffer,int,int,java.nio.Buffer,int,int,float) -> find
    long find(float[],int,int,java.nio.Buffer,int,int,float) -> find
    long find(java.nio.Buffer,int,int,float[],int,int,float) -> find
    long find(float[],int,int,float[],int,int,float) -> find
com.badlogic.gdx.utils.ByteArray -> com.badlogic.gdx.utils.ByteArray:
    byte[] items -> items
    int size -> size
    boolean ordered -> ordered
    void add(byte) -> add
    void addAll(com.badlogic.gdx.utils.ByteArray) -> addAll
    void addAll(com.badlogic.gdx.utils.ByteArray,int,int) -> addAll
    void addAll(byte[]) -> addAll
    void addAll(byte[],int,int) -> addAll
    byte get(int) -> get
    void set(int,byte) -> set
    void incr(int,byte) -> incr
    void mul(int,byte) -> mul
    void insert(int,byte) -> insert
    void swap(int,int) -> swap
    boolean contains(byte) -> contains
    int indexOf(byte) -> indexOf
    int lastIndexOf(byte) -> lastIndexOf
    boolean removeValue(byte) -> removeValue
    int removeIndex(int) -> removeIndex
    void removeRange(int,int) -> removeRange
    boolean removeAll(com.badlogic.gdx.utils.ByteArray) -> removeAll
    byte pop() -> pop
    byte peek() -> peek
    byte first() -> first
    void clear() -> clear
    byte[] shrink() -> shrink
    byte[] ensureCapacity(int) -> ensureCapacity
    byte[] resize(int) -> resize
    void sort() -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    byte random() -> random
    byte[] toArray() -> toArray
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    com.badlogic.gdx.utils.ByteArray with(byte[]) -> with
com.badlogic.gdx.utils.CharArray -> com.badlogic.gdx.utils.CharArray:
    char[] items -> items
    int size -> size
    boolean ordered -> ordered
    void add(char) -> add
    void addAll(com.badlogic.gdx.utils.CharArray) -> addAll
    void addAll(com.badlogic.gdx.utils.CharArray,int,int) -> addAll
    void addAll(char[]) -> addAll
    void addAll(char[],int,int) -> addAll
    char get(int) -> get
    void set(int,char) -> set
    void incr(int,char) -> incr
    void mul(int,char) -> mul
    void insert(int,char) -> insert
    void swap(int,int) -> swap
    boolean contains(char) -> contains
    int indexOf(char) -> indexOf
    int lastIndexOf(char) -> lastIndexOf
    boolean removeValue(char) -> removeValue
    char removeIndex(int) -> removeIndex
    void removeRange(int,int) -> removeRange
    boolean removeAll(com.badlogic.gdx.utils.CharArray) -> removeAll
    char pop() -> pop
    char peek() -> peek
    char first() -> first
    void clear() -> clear
    char[] shrink() -> shrink
    char[] ensureCapacity(int) -> ensureCapacity
    char[] resize(int) -> resize
    void sort() -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    char random() -> random
    char[] toArray() -> toArray
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    com.badlogic.gdx.utils.CharArray with(char[]) -> with
com.badlogic.gdx.utils.Clipboard -> com.badlogic.gdx.utils.Clipboard:
    java.lang.String getContents() -> getContents
    void setContents(java.lang.String) -> setContents
com.badlogic.gdx.utils.ComparableTimSort -> com.badlogic.gdx.utils.ComparableTimSort:
    int MIN_MERGE -> MIN_MERGE
    java.lang.Object[] a -> a
    int MIN_GALLOP -> MIN_GALLOP
    int minGallop -> minGallop
    int INITIAL_TMP_STORAGE_LENGTH -> INITIAL_TMP_STORAGE_LENGTH
    java.lang.Object[] tmp -> tmp
    int stackSize -> stackSize
    int[] runBase -> runBase
    int[] runLen -> runLen
    boolean DEBUG -> DEBUG
    void doSort(java.lang.Object[],int,int) -> doSort
    void sort(java.lang.Object[]) -> sort
    void sort(java.lang.Object[],int,int) -> sort
    void binarySort(java.lang.Object[],int,int,int) -> binarySort
    int countRunAndMakeAscending(java.lang.Object[],int,int) -> countRunAndMakeAscending
    void reverseRange(java.lang.Object[],int,int) -> reverseRange
    int minRunLength(int) -> minRunLength
    void pushRun(int,int) -> pushRun
    void mergeCollapse() -> mergeCollapse
    void mergeForceCollapse() -> mergeForceCollapse
    void mergeAt(int) -> mergeAt
    int gallopLeft(java.lang.Comparable,java.lang.Object[],int,int,int) -> gallopLeft
    int gallopRight(java.lang.Comparable,java.lang.Object[],int,int,int) -> gallopRight
    void mergeLo(int,int,int,int) -> mergeLo
    void mergeHi(int,int,int,int) -> mergeHi
    java.lang.Object[] ensureCapacity(int) -> ensureCapacity
    void rangeCheck(int,int,int) -> rangeCheck
com.badlogic.gdx.utils.DataBuffer -> com.badlogic.gdx.utils.DataBuffer:
    com.badlogic.gdx.utils.StreamUtils$OptimizedByteArrayOutputStream outStream -> outStream
    byte[] getBuffer() -> getBuffer
    byte[] toArray() -> toArray
com.badlogic.gdx.utils.DataInput -> com.badlogic.gdx.utils.DataInput:
    char[] chars -> chars
    int readInt(boolean) -> readInt
    java.lang.String readString() -> readString
    void readUtf8_slow(int,int,int) -> readUtf8_slow
com.badlogic.gdx.utils.DataOutput -> com.badlogic.gdx.utils.DataOutput:
    int writeInt(int,boolean) -> writeInt
    void writeString(java.lang.String) -> writeString
    void writeString_slow(java.lang.String,int,int) -> writeString_slow
com.badlogic.gdx.utils.DelayedRemovalArray -> com.badlogic.gdx.utils.DelayedRemovalArray:
    int iterating -> iterating
    com.badlogic.gdx.utils.IntArray remove -> remove
    void begin() -> begin
    void end() -> end
    void remove(int) -> remove
    boolean removeValue(java.lang.Object,boolean) -> removeValue
    java.lang.Object removeIndex(int) -> removeIndex
    void removeRange(int,int) -> removeRange
    void set(int,java.lang.Object) -> set
    void insert(int,java.lang.Object) -> insert
    void swap(int,int) -> swap
    java.lang.Object pop() -> pop
    void clear() -> clear
    void sort() -> sort
    void sort(java.util.Comparator) -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    com.badlogic.gdx.utils.DelayedRemovalArray with(java.lang.Object[]) -> with
com.badlogic.gdx.utils.Disposable -> com.badlogic.gdx.utils.Disposable:
    void dispose() -> dispose
com.badlogic.gdx.utils.FloatArray -> com.badlogic.gdx.utils.FloatArray:
    float[] items -> items
    int size -> size
    boolean ordered -> ordered
    void add(float) -> add
    void addAll(com.badlogic.gdx.utils.FloatArray) -> addAll
    void addAll(com.badlogic.gdx.utils.FloatArray,int,int) -> addAll
    void addAll(float[]) -> addAll
    void addAll(float[],int,int) -> addAll
    float get(int) -> get
    void set(int,float) -> set
    void incr(int,float) -> incr
    void mul(int,float) -> mul
    void insert(int,float) -> insert
    void swap(int,int) -> swap
    boolean contains(float) -> contains
    int indexOf(float) -> indexOf
    int lastIndexOf(char) -> lastIndexOf
    boolean removeValue(float) -> removeValue
    float removeIndex(int) -> removeIndex
    void removeRange(int,int) -> removeRange
    boolean removeAll(com.badlogic.gdx.utils.FloatArray) -> removeAll
    float pop() -> pop
    float peek() -> peek
    float first() -> first
    void clear() -> clear
    float[] shrink() -> shrink
    float[] ensureCapacity(int) -> ensureCapacity
    float[] resize(int) -> resize
    void sort() -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    float random() -> random
    float[] toArray() -> toArray
    boolean equals(java.lang.Object) -> equals
    boolean equals(java.lang.Object,float) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    com.badlogic.gdx.utils.FloatArray with(float[]) -> with
com.badlogic.gdx.utils.GdxBuild -> com.badlogic.gdx.utils.GdxBuild:
    void main(java.lang.String[]) -> main
com.badlogic.gdx.utils.GdxNativesLoader -> com.badlogic.gdx.utils.GdxNativesLoader:
    boolean disableNativesLoading -> disableNativesLoading
    boolean nativesLoaded -> nativesLoaded
    void load() -> load
com.badlogic.gdx.utils.GdxRuntimeException -> com.badlogic.gdx.utils.GdxRuntimeException:
    long serialVersionUID -> serialVersionUID
com.badlogic.gdx.utils.I18NBundle -> com.badlogic.gdx.utils.I18NBundle:
    java.lang.String DEFAULT_ENCODING -> DEFAULT_ENCODING
    boolean simpleFormatter -> simpleFormatter
    boolean exceptionOnMissingKey -> exceptionOnMissingKey
    com.badlogic.gdx.utils.I18NBundle parent -> parent
    java.util.Locale locale -> locale
    com.badlogic.gdx.utils.ObjectMap properties -> properties
    com.badlogic.gdx.utils.TextFormatter formatter -> formatter
    boolean getSimpleFormatter() -> getSimpleFormatter
    void setSimpleFormatter(boolean) -> setSimpleFormatter
    boolean getExceptionOnMissingKey() -> getExceptionOnMissingKey
    void setExceptionOnMissingKey(boolean) -> setExceptionOnMissingKey
    com.badlogic.gdx.utils.I18NBundle createBundle(com.badlogic.gdx.files.FileHandle) -> createBundle
    com.badlogic.gdx.utils.I18NBundle createBundle(com.badlogic.gdx.files.FileHandle,java.util.Locale) -> createBundle
    com.badlogic.gdx.utils.I18NBundle createBundle(com.badlogic.gdx.files.FileHandle,java.lang.String) -> createBundle
    com.badlogic.gdx.utils.I18NBundle createBundle(com.badlogic.gdx.files.FileHandle,java.util.Locale,java.lang.String) -> createBundle
    com.badlogic.gdx.utils.I18NBundle createBundleImpl(com.badlogic.gdx.files.FileHandle,java.util.Locale,java.lang.String) -> createBundleImpl
    java.util.List getCandidateLocales(java.util.Locale) -> getCandidateLocales
    java.util.Locale getFallbackLocale(java.util.Locale) -> getFallbackLocale
    com.badlogic.gdx.utils.I18NBundle loadBundleChain(com.badlogic.gdx.files.FileHandle,java.lang.String,java.util.List,int,com.badlogic.gdx.utils.I18NBundle) -> loadBundleChain
    com.badlogic.gdx.utils.I18NBundle loadBundle(com.badlogic.gdx.files.FileHandle,java.lang.String,java.util.Locale) -> loadBundle
    boolean checkFileExistence(com.badlogic.gdx.files.FileHandle) -> checkFileExistence
    void load(java.io.Reader) -> load
    com.badlogic.gdx.files.FileHandle toFileHandle(com.badlogic.gdx.files.FileHandle,java.util.Locale) -> toFileHandle
    java.util.Locale getLocale() -> getLocale
    void setLocale(java.util.Locale) -> setLocale
    java.lang.String get(java.lang.String) -> get
    java.lang.String format(java.lang.String,java.lang.Object[]) -> format
com.badlogic.gdx.utils.IdentityMap -> com.badlogic.gdx.utils.IdentityMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int size -> size
    java.lang.Object[] keyTable -> keyTable
    java.lang.Object[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.IdentityMap$Entries entries1 -> entries1
    com.badlogic.gdx.utils.IdentityMap$Entries entries2 -> entries2
    com.badlogic.gdx.utils.IdentityMap$Values values1 -> values1
    com.badlogic.gdx.utils.IdentityMap$Values values2 -> values2
    com.badlogic.gdx.utils.IdentityMap$Keys keys1 -> keys1
    com.badlogic.gdx.utils.IdentityMap$Keys keys2 -> keys2
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putResize(java.lang.Object,java.lang.Object) -> putResize
    void push(java.lang.Object,java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> push
    void putStash(java.lang.Object,java.lang.Object) -> putStash
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    java.lang.Object getStash(java.lang.Object,java.lang.Object) -> getStash
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeStash(java.lang.Object) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void shrink(int) -> shrink
    void clear(int) -> clear
    void clear() -> clear
    boolean containsValue(java.lang.Object,boolean) -> containsValue
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsKeyStash(java.lang.Object) -> containsKeyStash
    java.lang.Object findKey(java.lang.Object,boolean) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(int) -> hash2
    int hash3(int) -> hash3
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.IdentityMap$Entries entries() -> entries
    com.badlogic.gdx.utils.IdentityMap$Values values() -> values
    com.badlogic.gdx.utils.IdentityMap$Keys keys() -> keys
com.badlogic.gdx.utils.IdentityMap$Entries -> com.badlogic.gdx.utils.IdentityMap$Entries:
    com.badlogic.gdx.utils.IdentityMap$Entry entry -> entry
    com.badlogic.gdx.utils.IdentityMap$Entry next() -> next
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    void remove() -> remove
    void reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.IdentityMap$Entry -> com.badlogic.gdx.utils.IdentityMap$Entry:
    java.lang.Object key -> key
    java.lang.Object value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.IdentityMap$Keys -> com.badlogic.gdx.utils.IdentityMap$Keys:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.IdentityMap$MapIterator -> com.badlogic.gdx.utils.IdentityMap$MapIterator:
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.IdentityMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    boolean valid -> valid
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
com.badlogic.gdx.utils.IdentityMap$Values -> com.badlogic.gdx.utils.IdentityMap$Values:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    void toArray(com.badlogic.gdx.utils.Array) -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.IntArray -> com.badlogic.gdx.utils.IntArray:
    int[] items -> items
    int size -> size
    boolean ordered -> ordered
    void add(int) -> add
    void addAll(com.badlogic.gdx.utils.IntArray) -> addAll
    void addAll(com.badlogic.gdx.utils.IntArray,int,int) -> addAll
    void addAll(int[]) -> addAll
    void addAll(int[],int,int) -> addAll
    int get(int) -> get
    void set(int,int) -> set
    void incr(int,int) -> incr
    void mul(int,int) -> mul
    void insert(int,int) -> insert
    void swap(int,int) -> swap
    boolean contains(int) -> contains
    int indexOf(int) -> indexOf
    int lastIndexOf(int) -> lastIndexOf
    boolean removeValue(int) -> removeValue
    int removeIndex(int) -> removeIndex
    void removeRange(int,int) -> removeRange
    boolean removeAll(com.badlogic.gdx.utils.IntArray) -> removeAll
    int pop() -> pop
    int peek() -> peek
    int first() -> first
    void clear() -> clear
    int[] shrink() -> shrink
    int[] ensureCapacity(int) -> ensureCapacity
    int[] resize(int) -> resize
    void sort() -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    int random() -> random
    int[] toArray() -> toArray
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    com.badlogic.gdx.utils.IntArray with(int[]) -> with
com.badlogic.gdx.utils.IntFloatMap -> com.badlogic.gdx.utils.IntFloatMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int EMPTY -> EMPTY
    int size -> size
    int[] keyTable -> keyTable
    float[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    float zeroValue -> zeroValue
    boolean hasZeroValue -> hasZeroValue
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.IntFloatMap$Entries entries1 -> entries1
    com.badlogic.gdx.utils.IntFloatMap$Entries entries2 -> entries2
    com.badlogic.gdx.utils.IntFloatMap$Values values1 -> values1
    com.badlogic.gdx.utils.IntFloatMap$Values values2 -> values2
    com.badlogic.gdx.utils.IntFloatMap$Keys keys1 -> keys1
    com.badlogic.gdx.utils.IntFloatMap$Keys keys2 -> keys2
    void put(int,float) -> put
    void putAll(com.badlogic.gdx.utils.IntFloatMap) -> putAll
    void putResize(int,float) -> putResize
    void push(int,float,int,int,int,int,int,int) -> push
    void putStash(int,float) -> putStash
    float get(int,float) -> get
    float getStash(int,float) -> getStash
    float getAndIncrement(int,float,float) -> getAndIncrement
    float getAndIncrementStash(int,float,float) -> getAndIncrementStash
    float remove(int,float) -> remove
    float removeStash(int,float) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void shrink(int) -> shrink
    void clear(int) -> clear
    void clear() -> clear
    boolean containsValue(float) -> containsValue
    boolean containsValue(float,float) -> containsValue
    boolean containsKey(int) -> containsKey
    boolean containsKeyStash(int) -> containsKeyStash
    int findKey(float,int) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(int) -> hash2
    int hash3(int) -> hash3
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.IntFloatMap$Entries entries() -> entries
    com.badlogic.gdx.utils.IntFloatMap$Values values() -> values
    com.badlogic.gdx.utils.IntFloatMap$Keys keys() -> keys
com.badlogic.gdx.utils.IntFloatMap$Entries -> com.badlogic.gdx.utils.IntFloatMap$Entries:
    com.badlogic.gdx.utils.IntFloatMap$Entry entry -> entry
    com.badlogic.gdx.utils.IntFloatMap$Entry next() -> next
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    void remove() -> remove
    void reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.IntFloatMap$Entry -> com.badlogic.gdx.utils.IntFloatMap$Entry:
    int key -> key
    float value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.IntFloatMap$Keys -> com.badlogic.gdx.utils.IntFloatMap$Keys:
    boolean hasNext() -> hasNext
    int next() -> next
    com.badlogic.gdx.utils.IntArray toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.IntFloatMap$MapIterator -> com.badlogic.gdx.utils.IntFloatMap$MapIterator:
    int INDEX_ILLEGAL -> INDEX_ILLEGAL
    int INDEX_ZERO -> INDEX_ZERO
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.IntFloatMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    boolean valid -> valid
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
com.badlogic.gdx.utils.IntFloatMap$Values -> com.badlogic.gdx.utils.IntFloatMap$Values:
    boolean hasNext() -> hasNext
    float next() -> next
    com.badlogic.gdx.utils.FloatArray toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.IntIntMap -> com.badlogic.gdx.utils.IntIntMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int EMPTY -> EMPTY
    int size -> size
    int[] keyTable -> keyTable
    int[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    int zeroValue -> zeroValue
    boolean hasZeroValue -> hasZeroValue
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.IntIntMap$Entries entries1 -> entries1
    com.badlogic.gdx.utils.IntIntMap$Entries entries2 -> entries2
    com.badlogic.gdx.utils.IntIntMap$Values values1 -> values1
    com.badlogic.gdx.utils.IntIntMap$Values values2 -> values2
    com.badlogic.gdx.utils.IntIntMap$Keys keys1 -> keys1
    com.badlogic.gdx.utils.IntIntMap$Keys keys2 -> keys2
    void put(int,int) -> put
    void putAll(com.badlogic.gdx.utils.IntIntMap) -> putAll
    void putResize(int,int) -> putResize
    void push(int,int,int,int,int,int,int,int) -> push
    void putStash(int,int) -> putStash
    int get(int,int) -> get
    int getStash(int,int) -> getStash
    int getAndIncrement(int,int,int) -> getAndIncrement
    int getAndIncrementStash(int,int,int) -> getAndIncrementStash
    int remove(int,int) -> remove
    int removeStash(int,int) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void shrink(int) -> shrink
    void clear(int) -> clear
    void clear() -> clear
    boolean containsValue(int) -> containsValue
    boolean containsKey(int) -> containsKey
    boolean containsKeyStash(int) -> containsKeyStash
    int findKey(int,int) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(int) -> hash2
    int hash3(int) -> hash3
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.IntIntMap$Entries entries() -> entries
    com.badlogic.gdx.utils.IntIntMap$Values values() -> values
    com.badlogic.gdx.utils.IntIntMap$Keys keys() -> keys
com.badlogic.gdx.utils.IntIntMap$Entries -> com.badlogic.gdx.utils.IntIntMap$Entries:
    com.badlogic.gdx.utils.IntIntMap$Entry entry -> entry
    com.badlogic.gdx.utils.IntIntMap$Entry next() -> next
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    void remove() -> remove
    void reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.IntIntMap$Entry -> com.badlogic.gdx.utils.IntIntMap$Entry:
    int key -> key
    int value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.IntIntMap$Keys -> com.badlogic.gdx.utils.IntIntMap$Keys:
    boolean hasNext() -> hasNext
    int next() -> next
    com.badlogic.gdx.utils.IntArray toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.IntIntMap$MapIterator -> com.badlogic.gdx.utils.IntIntMap$MapIterator:
    int INDEX_ILLEGAL -> INDEX_ILLEGAL
    int INDEX_ZERO -> INDEX_ZERO
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.IntIntMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    boolean valid -> valid
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
com.badlogic.gdx.utils.IntIntMap$Values -> com.badlogic.gdx.utils.IntIntMap$Values:
    boolean hasNext() -> hasNext
    int next() -> next
    com.badlogic.gdx.utils.IntArray toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.IntMap -> com.badlogic.gdx.utils.IntMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int EMPTY -> EMPTY
    int size -> size
    int[] keyTable -> keyTable
    java.lang.Object[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    java.lang.Object zeroValue -> zeroValue
    boolean hasZeroValue -> hasZeroValue
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.IntMap$Entries entries1 -> entries1
    com.badlogic.gdx.utils.IntMap$Entries entries2 -> entries2
    com.badlogic.gdx.utils.IntMap$Values values1 -> values1
    com.badlogic.gdx.utils.IntMap$Values values2 -> values2
    com.badlogic.gdx.utils.IntMap$Keys keys1 -> keys1
    com.badlogic.gdx.utils.IntMap$Keys keys2 -> keys2
    java.lang.Object put(int,java.lang.Object) -> put
    void putAll(com.badlogic.gdx.utils.IntMap) -> putAll
    void putResize(int,java.lang.Object) -> putResize
    void push(int,java.lang.Object,int,int,int,int,int,int) -> push
    void putStash(int,java.lang.Object) -> putStash
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    java.lang.Object getStash(int,java.lang.Object) -> getStash
    java.lang.Object remove(int) -> remove
    java.lang.Object removeStash(int) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void shrink(int) -> shrink
    void clear(int) -> clear
    void clear() -> clear
    boolean containsValue(java.lang.Object,boolean) -> containsValue
    boolean containsKey(int) -> containsKey
    boolean containsKeyStash(int) -> containsKeyStash
    int findKey(java.lang.Object,boolean,int) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(int) -> hash2
    int hash3(int) -> hash3
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.IntMap$Entries entries() -> entries
    com.badlogic.gdx.utils.IntMap$Values values() -> values
    com.badlogic.gdx.utils.IntMap$Keys keys() -> keys
com.badlogic.gdx.utils.IntMap$Entries -> com.badlogic.gdx.utils.IntMap$Entries:
    com.badlogic.gdx.utils.IntMap$Entry entry -> entry
    com.badlogic.gdx.utils.IntMap$Entry next() -> next
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    void remove() -> remove
    void reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.IntMap$Entry -> com.badlogic.gdx.utils.IntMap$Entry:
    int key -> key
    java.lang.Object value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.IntMap$Keys -> com.badlogic.gdx.utils.IntMap$Keys:
    int next() -> next
    com.badlogic.gdx.utils.IntArray toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.IntMap$MapIterator -> com.badlogic.gdx.utils.IntMap$MapIterator:
    int INDEX_ILLEGAL -> INDEX_ILLEGAL
    int INDEX_ZERO -> INDEX_ZERO
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.IntMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    boolean valid -> valid
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
com.badlogic.gdx.utils.IntMap$Values -> com.badlogic.gdx.utils.IntMap$Values:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.IntSet -> com.badlogic.gdx.utils.IntSet:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int EMPTY -> EMPTY
    int size -> size
    int[] keyTable -> keyTable
    int capacity -> capacity
    int stashSize -> stashSize
    boolean hasZeroValue -> hasZeroValue
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.IntSet$IntSetIterator iterator1 -> iterator1
    com.badlogic.gdx.utils.IntSet$IntSetIterator iterator2 -> iterator2
    boolean add(int) -> add
    void addAll(com.badlogic.gdx.utils.IntArray) -> addAll
    void addAll(com.badlogic.gdx.utils.IntArray,int,int) -> addAll
    void addAll(int[]) -> addAll
    void addAll(int[],int,int) -> addAll
    void addAll(com.badlogic.gdx.utils.IntSet) -> addAll
    void addResize(int) -> addResize
    void push(int,int,int,int,int,int,int) -> push
    void addStash(int) -> addStash
    boolean remove(int) -> remove
    boolean removeStash(int) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void shrink(int) -> shrink
    void clear(int) -> clear
    void clear() -> clear
    boolean contains(int) -> contains
    boolean containsKeyStash(int) -> containsKeyStash
    int first() -> first
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(int) -> hash2
    int hash3(int) -> hash3
    java.lang.String toString() -> toString
    com.badlogic.gdx.utils.IntSet$IntSetIterator iterator() -> iterator
    com.badlogic.gdx.utils.IntSet with(int[]) -> with
com.badlogic.gdx.utils.IntSet$IntSetIterator -> com.badlogic.gdx.utils.IntSet$IntSetIterator:
    int INDEX_ILLEGAL -> INDEX_ILLEGAL
    int INDEX_ZERO -> INDEX_ZERO
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.IntSet set -> set
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    boolean valid -> valid
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
    int next() -> next
    com.badlogic.gdx.utils.IntArray toArray() -> toArray
com.badlogic.gdx.utils.Json -> com.badlogic.gdx.utils.Json:
    boolean debug -> debug
    com.badlogic.gdx.utils.JsonWriter writer -> writer
    java.lang.String typeName -> typeName
    boolean usePrototypes -> usePrototypes
    com.badlogic.gdx.utils.JsonWriter$OutputType outputType -> outputType
    boolean quoteLongValues -> quoteLongValues
    boolean ignoreUnknownFields -> ignoreUnknownFields
    boolean enumNames -> enumNames
    com.badlogic.gdx.utils.Json$Serializer defaultSerializer -> defaultSerializer
    com.badlogic.gdx.utils.ObjectMap typeToFields -> typeToFields
    com.badlogic.gdx.utils.ObjectMap tagToClass -> tagToClass
    com.badlogic.gdx.utils.ObjectMap classToTag -> classToTag
    com.badlogic.gdx.utils.ObjectMap classToSerializer -> classToSerializer
    com.badlogic.gdx.utils.ObjectMap classToDefaultValues -> classToDefaultValues
    java.lang.Object[] equals1 -> equals1
    java.lang.Object[] equals2 -> equals2
    void setIgnoreUnknownFields(boolean) -> setIgnoreUnknownFields
    void setOutputType(com.badlogic.gdx.utils.JsonWriter$OutputType) -> setOutputType
    void setQuoteLongValues(boolean) -> setQuoteLongValues
    void setEnumNames(boolean) -> setEnumNames
    void addClassTag(java.lang.String,java.lang.Class) -> addClassTag
    java.lang.Class getClass(java.lang.String) -> getClass
    java.lang.String getTag(java.lang.Class) -> getTag
    void setTypeName(java.lang.String) -> setTypeName
    void setDefaultSerializer(com.badlogic.gdx.utils.Json$Serializer) -> setDefaultSerializer
    void setSerializer(java.lang.Class,com.badlogic.gdx.utils.Json$Serializer) -> setSerializer
    com.badlogic.gdx.utils.Json$Serializer getSerializer(java.lang.Class) -> getSerializer
    void setUsePrototypes(boolean) -> setUsePrototypes
    void setElementType(java.lang.Class,java.lang.String,java.lang.Class) -> setElementType
    com.badlogic.gdx.utils.OrderedMap getFields(java.lang.Class) -> getFields
    java.lang.String toJson(java.lang.Object) -> toJson
    java.lang.String toJson(java.lang.Object,java.lang.Class) -> toJson
    java.lang.String toJson(java.lang.Object,java.lang.Class,java.lang.Class) -> toJson
    void toJson(java.lang.Object,com.badlogic.gdx.files.FileHandle) -> toJson
    void toJson(java.lang.Object,java.lang.Class,com.badlogic.gdx.files.FileHandle) -> toJson
    void toJson(java.lang.Object,java.lang.Class,java.lang.Class,com.badlogic.gdx.files.FileHandle) -> toJson
    void toJson(java.lang.Object,java.io.Writer) -> toJson
    void toJson(java.lang.Object,java.lang.Class,java.io.Writer) -> toJson
    void toJson(java.lang.Object,java.lang.Class,java.lang.Class,java.io.Writer) -> toJson
    void setWriter(java.io.Writer) -> setWriter
    com.badlogic.gdx.utils.JsonWriter getWriter() -> getWriter
    void writeFields(java.lang.Object) -> writeFields
    java.lang.Object[] getDefaultValues(java.lang.Class) -> getDefaultValues
    void writeField(java.lang.Object,java.lang.String) -> writeField
    void writeField(java.lang.Object,java.lang.String,java.lang.Class) -> writeField
    void writeField(java.lang.Object,java.lang.String,java.lang.String) -> writeField
    void writeField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class) -> writeField
    void writeValue(java.lang.String,java.lang.Object) -> writeValue
    void writeValue(java.lang.String,java.lang.Object,java.lang.Class) -> writeValue
    void writeValue(java.lang.String,java.lang.Object,java.lang.Class,java.lang.Class) -> writeValue
    void writeValue(java.lang.Object) -> writeValue
    void writeValue(java.lang.Object,java.lang.Class) -> writeValue
    void writeValue(java.lang.Object,java.lang.Class,java.lang.Class) -> writeValue
    void writeObjectStart(java.lang.String) -> writeObjectStart
    void writeObjectStart(java.lang.String,java.lang.Class,java.lang.Class) -> writeObjectStart
    void writeObjectStart() -> writeObjectStart
    void writeObjectStart(java.lang.Class,java.lang.Class) -> writeObjectStart
    void writeObjectEnd() -> writeObjectEnd
    void writeArrayStart(java.lang.String) -> writeArrayStart
    void writeArrayStart() -> writeArrayStart
    void writeArrayEnd() -> writeArrayEnd
    void writeType(java.lang.Class) -> writeType
    java.lang.Object fromJson(java.lang.Class,java.io.Reader) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.io.Reader) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.io.InputStream) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.io.InputStream) -> fromJson
    java.lang.Object fromJson(java.lang.Class,com.badlogic.gdx.files.FileHandle) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.lang.Class,com.badlogic.gdx.files.FileHandle) -> fromJson
    java.lang.Object fromJson(java.lang.Class,char[],int,int) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.lang.Class,char[],int,int) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.lang.String) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.lang.String) -> fromJson
    void readField(java.lang.Object,java.lang.String,com.badlogic.gdx.utils.JsonValue) -> readField
    void readField(java.lang.Object,java.lang.String,java.lang.Class,com.badlogic.gdx.utils.JsonValue) -> readField
    void readField(java.lang.Object,java.lang.String,java.lang.String,com.badlogic.gdx.utils.JsonValue) -> readField
    void readField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class,com.badlogic.gdx.utils.JsonValue) -> readField
    void readField(java.lang.Object,com.badlogic.gdx.utils.reflect.Field,java.lang.String,java.lang.Class,com.badlogic.gdx.utils.JsonValue) -> readField
    void readFields(java.lang.Object,com.badlogic.gdx.utils.JsonValue) -> readFields
    java.lang.Object readValue(java.lang.String,java.lang.Class,com.badlogic.gdx.utils.JsonValue) -> readValue
    java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Object,com.badlogic.gdx.utils.JsonValue) -> readValue
    java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue) -> readValue
    java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object,com.badlogic.gdx.utils.JsonValue) -> readValue
    java.lang.Object readValue(java.lang.Class,java.lang.Class,java.lang.Object,com.badlogic.gdx.utils.JsonValue) -> readValue
    java.lang.Object readValue(java.lang.Class,com.badlogic.gdx.utils.JsonValue) -> readValue
    java.lang.Object readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue) -> readValue
    java.lang.String convertToString(java.lang.Enum) -> convertToString
    java.lang.String convertToString(java.lang.Object) -> convertToString
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    java.lang.String prettyPrint(java.lang.Object) -> prettyPrint
    java.lang.String prettyPrint(java.lang.String) -> prettyPrint
    java.lang.String prettyPrint(java.lang.Object,int) -> prettyPrint
    java.lang.String prettyPrint(java.lang.String,int) -> prettyPrint
    java.lang.String prettyPrint(java.lang.Object,com.badlogic.gdx.utils.JsonValue$PrettyPrintSettings) -> prettyPrint
    java.lang.String prettyPrint(java.lang.String,com.badlogic.gdx.utils.JsonValue$PrettyPrintSettings) -> prettyPrint
com.badlogic.gdx.utils.Json$FieldMetadata -> com.badlogic.gdx.utils.Json$FieldMetadata:
    com.badlogic.gdx.utils.reflect.Field field -> field
    java.lang.Class elementType -> elementType
com.badlogic.gdx.utils.Json$ReadOnlySerializer -> com.badlogic.gdx.utils.Json$ReadOnlySerializer:
    void write(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> write
    java.lang.Object read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
com.badlogic.gdx.utils.Json$Serializable -> com.badlogic.gdx.utils.Json$Serializable:
    void write(com.badlogic.gdx.utils.Json) -> write
    void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue) -> read
com.badlogic.gdx.utils.Json$Serializer -> com.badlogic.gdx.utils.Json$Serializer:
    void write(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> write
    java.lang.Object read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
com.badlogic.gdx.utils.JsonReader -> com.badlogic.gdx.utils.JsonReader:
    byte[] _json_actions -> _json_actions
    short[] _json_key_offsets -> _json_key_offsets
    char[] _json_trans_keys -> _json_trans_keys
    byte[] _json_single_lengths -> _json_single_lengths
    byte[] _json_range_lengths -> _json_range_lengths
    short[] _json_index_offsets -> _json_index_offsets
    byte[] _json_indicies -> _json_indicies
    byte[] _json_trans_targs -> _json_trans_targs
    byte[] _json_trans_actions -> _json_trans_actions
    byte[] _json_eof_actions -> _json_eof_actions
    int json_start -> json_start
    int json_first_final -> json_first_final
    int json_error -> json_error
    int json_en_object -> json_en_object
    int json_en_array -> json_en_array
    int json_en_main -> json_en_main
    com.badlogic.gdx.utils.Array elements -> elements
    com.badlogic.gdx.utils.Array lastChild -> lastChild
    com.badlogic.gdx.utils.JsonValue root -> root
    com.badlogic.gdx.utils.JsonValue current -> current
    com.badlogic.gdx.utils.JsonValue parse(java.lang.String) -> parse
    com.badlogic.gdx.utils.JsonValue parse(java.io.Reader) -> parse
    com.badlogic.gdx.utils.JsonValue parse(java.io.InputStream) -> parse
    com.badlogic.gdx.utils.JsonValue parse(com.badlogic.gdx.files.FileHandle) -> parse
    com.badlogic.gdx.utils.JsonValue parse(char[],int,int) -> parse
    byte[] init__json_actions_0() -> init__json_actions_0
    short[] init__json_key_offsets_0() -> init__json_key_offsets_0
    char[] init__json_trans_keys_0() -> init__json_trans_keys_0
    byte[] init__json_single_lengths_0() -> init__json_single_lengths_0
    byte[] init__json_range_lengths_0() -> init__json_range_lengths_0
    short[] init__json_index_offsets_0() -> init__json_index_offsets_0
    byte[] init__json_indicies_0() -> init__json_indicies_0
    byte[] init__json_trans_targs_0() -> init__json_trans_targs_0
    byte[] init__json_trans_actions_0() -> init__json_trans_actions_0
    byte[] init__json_eof_actions_0() -> init__json_eof_actions_0
    void addChild(java.lang.String,com.badlogic.gdx.utils.JsonValue) -> addChild
    void startObject(java.lang.String) -> startObject
    void startArray(java.lang.String) -> startArray
    void pop() -> pop
    void string(java.lang.String,java.lang.String) -> string
    void number(java.lang.String,double) -> number
    void number(java.lang.String,long) -> number
    void bool(java.lang.String,boolean) -> bool
    java.lang.String unescape(java.lang.String) -> unescape
com.badlogic.gdx.utils.JsonValue -> com.badlogic.gdx.utils.JsonValue:
    com.badlogic.gdx.utils.JsonValue$ValueType type -> type
    java.lang.String stringValue -> stringValue
    double doubleValue -> doubleValue
    long longValue -> longValue
    java.lang.String name -> name
    com.badlogic.gdx.utils.JsonValue child -> child
    com.badlogic.gdx.utils.JsonValue next -> next
    com.badlogic.gdx.utils.JsonValue prev -> prev
    int size -> size
    com.badlogic.gdx.utils.JsonValue get(int) -> get
    com.badlogic.gdx.utils.JsonValue get(java.lang.String) -> get
    boolean has(java.lang.String) -> has
    com.badlogic.gdx.utils.JsonValue require(int) -> require
    com.badlogic.gdx.utils.JsonValue require(java.lang.String) -> require
    com.badlogic.gdx.utils.JsonValue remove(int) -> remove
    com.badlogic.gdx.utils.JsonValue remove(java.lang.String) -> remove
    int size() -> size
    java.lang.String asString() -> asString
    float asFloat() -> asFloat
    double asDouble() -> asDouble
    long asLong() -> asLong
    int asInt() -> asInt
    boolean asBoolean() -> asBoolean
    byte asByte() -> asByte
    short asShort() -> asShort
    char asChar() -> asChar
    java.lang.String[] asStringArray() -> asStringArray
    float[] asFloatArray() -> asFloatArray
    double[] asDoubleArray() -> asDoubleArray
    long[] asLongArray() -> asLongArray
    int[] asIntArray() -> asIntArray
    boolean[] asBooleanArray() -> asBooleanArray
    byte[] asByteArray() -> asByteArray
    short[] asShortArray() -> asShortArray
    char[] asCharArray() -> asCharArray
    boolean hasChild(java.lang.String) -> hasChild
    com.badlogic.gdx.utils.JsonValue getChild(java.lang.String) -> getChild
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    float getFloat(java.lang.String,float) -> getFloat
    double getDouble(java.lang.String,double) -> getDouble
    long getLong(java.lang.String,long) -> getLong
    int getInt(java.lang.String,int) -> getInt
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    byte getByte(java.lang.String,byte) -> getByte
    short getShort(java.lang.String,short) -> getShort
    char getChar(java.lang.String,char) -> getChar
    java.lang.String getString(java.lang.String) -> getString
    float getFloat(java.lang.String) -> getFloat
    double getDouble(java.lang.String) -> getDouble
    long getLong(java.lang.String) -> getLong
    int getInt(java.lang.String) -> getInt
    boolean getBoolean(java.lang.String) -> getBoolean
    byte getByte(java.lang.String) -> getByte
    short getShort(java.lang.String) -> getShort
    char getChar(java.lang.String) -> getChar
    java.lang.String getString(int) -> getString
    float getFloat(int) -> getFloat
    double getDouble(int) -> getDouble
    long getLong(int) -> getLong
    int getInt(int) -> getInt
    boolean getBoolean(int) -> getBoolean
    byte getByte(int) -> getByte
    short getShort(int) -> getShort
    char getChar(int) -> getChar
    com.badlogic.gdx.utils.JsonValue$ValueType type() -> type
    void setType(com.badlogic.gdx.utils.JsonValue$ValueType) -> setType
    boolean isArray() -> isArray
    boolean isObject() -> isObject
    boolean isString() -> isString
    boolean isNumber() -> isNumber
    boolean isDouble() -> isDouble
    boolean isLong() -> isLong
    boolean isBoolean() -> isBoolean
    boolean isNull() -> isNull
    boolean isValue() -> isValue
    java.lang.String name() -> name
    void setName(java.lang.String) -> setName
    com.badlogic.gdx.utils.JsonValue child() -> child
    com.badlogic.gdx.utils.JsonValue next() -> next
    void setNext(com.badlogic.gdx.utils.JsonValue) -> setNext
    com.badlogic.gdx.utils.JsonValue prev() -> prev
    void setPrev(com.badlogic.gdx.utils.JsonValue) -> setPrev
    void set(java.lang.String) -> set
    void set(double) -> set
    void set(long) -> set
    void set(boolean) -> set
    java.lang.String toString() -> toString
    java.lang.String prettyPrint(com.badlogic.gdx.utils.JsonWriter$OutputType,int) -> prettyPrint
    java.lang.String prettyPrint(com.badlogic.gdx.utils.JsonValue$PrettyPrintSettings) -> prettyPrint
    void prettyPrint(com.badlogic.gdx.utils.JsonValue,com.badlogic.gdx.utils.StringBuilder,int,com.badlogic.gdx.utils.JsonValue$PrettyPrintSettings) -> prettyPrint
    boolean isFlat(com.badlogic.gdx.utils.JsonValue) -> isFlat
    boolean isNumeric(com.badlogic.gdx.utils.JsonValue) -> isNumeric
    void indent(int,com.badlogic.gdx.utils.StringBuilder) -> indent
    com.badlogic.gdx.utils.JsonValue$JsonIterator iterator() -> iterator
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.JsonValue$1 -> com.badlogic.gdx.utils.JsonValue$1:
    int[] $SwitchMap$com$badlogic$gdx$utils$JsonValue$ValueType -> $SwitchMap$com$badlogic$gdx$utils$JsonValue$ValueType
com.badlogic.gdx.utils.JsonValue$JsonIterator -> com.badlogic.gdx.utils.JsonValue$JsonIterator:
    com.badlogic.gdx.utils.JsonValue entry -> entry
    com.badlogic.gdx.utils.JsonValue current -> current
    com.badlogic.gdx.utils.JsonValue this$0 -> this$0
    boolean hasNext() -> hasNext
    com.badlogic.gdx.utils.JsonValue next() -> next
    void remove() -> remove
    java.util.Iterator iterator() -> iterator
    java.lang.Object next() -> next
com.badlogic.gdx.utils.JsonValue$PrettyPrintSettings -> com.badlogic.gdx.utils.JsonValue$PrettyPrintSettings:
    com.badlogic.gdx.utils.JsonWriter$OutputType outputType -> outputType
    int singleLineColumns -> singleLineColumns
    boolean wrapNumericArrays -> wrapNumericArrays
com.badlogic.gdx.utils.JsonValue$ValueType -> com.badlogic.gdx.utils.JsonValue$ValueType:
    com.badlogic.gdx.utils.JsonValue$ValueType object -> object
    com.badlogic.gdx.utils.JsonValue$ValueType array -> array
    com.badlogic.gdx.utils.JsonValue$ValueType stringValue -> stringValue
    com.badlogic.gdx.utils.JsonValue$ValueType doubleValue -> doubleValue
    com.badlogic.gdx.utils.JsonValue$ValueType longValue -> longValue
    com.badlogic.gdx.utils.JsonValue$ValueType booleanValue -> booleanValue
    com.badlogic.gdx.utils.JsonValue$ValueType nullValue -> nullValue
    com.badlogic.gdx.utils.JsonValue$ValueType[] $VALUES -> $VALUES
    com.badlogic.gdx.utils.JsonValue$ValueType[] values() -> values
    com.badlogic.gdx.utils.JsonValue$ValueType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.utils.JsonWriter -> com.badlogic.gdx.utils.JsonWriter:
    java.io.Writer writer -> writer
    com.badlogic.gdx.utils.Array stack -> stack
    com.badlogic.gdx.utils.JsonWriter$JsonObject current -> current
    boolean named -> named
    com.badlogic.gdx.utils.JsonWriter$OutputType outputType -> outputType
    boolean quoteLongValues -> quoteLongValues
    java.io.Writer getWriter() -> getWriter
    void setOutputType(com.badlogic.gdx.utils.JsonWriter$OutputType) -> setOutputType
    void setQuoteLongValues(boolean) -> setQuoteLongValues
    com.badlogic.gdx.utils.JsonWriter name(java.lang.String) -> name
    com.badlogic.gdx.utils.JsonWriter object() -> object
    com.badlogic.gdx.utils.JsonWriter array() -> array
    com.badlogic.gdx.utils.JsonWriter value(java.lang.Object) -> value
    com.badlogic.gdx.utils.JsonWriter object(java.lang.String) -> object
    com.badlogic.gdx.utils.JsonWriter array(java.lang.String) -> array
    com.badlogic.gdx.utils.JsonWriter set(java.lang.String,java.lang.Object) -> set
    com.badlogic.gdx.utils.JsonWriter pop() -> pop
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
com.badlogic.gdx.utils.JsonWriter$1 -> com.badlogic.gdx.utils.JsonWriter$1:
    int[] $SwitchMap$com$badlogic$gdx$utils$JsonWriter$OutputType -> $SwitchMap$com$badlogic$gdx$utils$JsonWriter$OutputType
com.badlogic.gdx.utils.JsonWriter$JsonObject -> com.badlogic.gdx.utils.JsonWriter$JsonObject:
    boolean array -> array
    boolean needsComma -> needsComma
    com.badlogic.gdx.utils.JsonWriter this$0 -> this$0
    void close() -> close
com.badlogic.gdx.utils.JsonWriter$OutputType -> com.badlogic.gdx.utils.JsonWriter$OutputType:
    com.badlogic.gdx.utils.JsonWriter$OutputType json -> json
    com.badlogic.gdx.utils.JsonWriter$OutputType javascript -> javascript
    com.badlogic.gdx.utils.JsonWriter$OutputType minimal -> minimal
    java.util.regex.Pattern javascriptPattern -> javascriptPattern
    java.util.regex.Pattern minimalNamePattern -> minimalNamePattern
    java.util.regex.Pattern minimalValuePattern -> minimalValuePattern
    com.badlogic.gdx.utils.JsonWriter$OutputType[] $VALUES -> $VALUES
    com.badlogic.gdx.utils.JsonWriter$OutputType[] values() -> values
    com.badlogic.gdx.utils.JsonWriter$OutputType valueOf(java.lang.String) -> valueOf
    java.lang.String quoteValue(java.lang.Object) -> quoteValue
    java.lang.String quoteName(java.lang.String) -> quoteName
com.badlogic.gdx.utils.LittleEndianInputStream -> com.badlogic.gdx.utils.LittleEndianInputStream:
    java.io.DataInputStream din -> din
    void readFully(byte[]) -> readFully
    void readFully(byte[],int,int) -> readFully
    int skipBytes(int) -> skipBytes
    boolean readBoolean() -> readBoolean
    byte readByte() -> readByte
    int readUnsignedByte() -> readUnsignedByte
    short readShort() -> readShort
    int readUnsignedShort() -> readUnsignedShort
    char readChar() -> readChar
    int readInt() -> readInt
    long readLong() -> readLong
    float readFloat() -> readFloat
    double readDouble() -> readDouble
    java.lang.String readLine() -> readLine
    java.lang.String readUTF() -> readUTF
com.badlogic.gdx.utils.Logger -> com.badlogic.gdx.utils.Logger:
    int NONE -> NONE
    int ERROR -> ERROR
    int INFO -> INFO
    int DEBUG -> DEBUG
    java.lang.String tag -> tag
    int level -> level
    void debug(java.lang.String) -> debug
    void debug(java.lang.String,java.lang.Exception) -> debug
    void info(java.lang.String) -> info
    void info(java.lang.String,java.lang.Exception) -> info
    void error(java.lang.String) -> error
    void error(java.lang.String,java.lang.Throwable) -> error
    void setLevel(int) -> setLevel
    int getLevel() -> getLevel
com.badlogic.gdx.utils.LongArray -> com.badlogic.gdx.utils.LongArray:
    long[] items -> items
    int size -> size
    boolean ordered -> ordered
    void add(long) -> add
    void addAll(com.badlogic.gdx.utils.LongArray) -> addAll
    void addAll(com.badlogic.gdx.utils.LongArray,int,int) -> addAll
    void addAll(long[]) -> addAll
    void addAll(long[],int,int) -> addAll
    long get(int) -> get
    void set(int,long) -> set
    void incr(int,long) -> incr
    void mul(int,long) -> mul
    void insert(int,long) -> insert
    void swap(int,int) -> swap
    boolean contains(long) -> contains
    int indexOf(long) -> indexOf
    int lastIndexOf(char) -> lastIndexOf
    boolean removeValue(long) -> removeValue
    long removeIndex(int) -> removeIndex
    void removeRange(int,int) -> removeRange
    boolean removeAll(com.badlogic.gdx.utils.LongArray) -> removeAll
    long pop() -> pop
    long peek() -> peek
    long first() -> first
    void clear() -> clear
    long[] shrink() -> shrink
    long[] ensureCapacity(int) -> ensureCapacity
    long[] resize(int) -> resize
    void sort() -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    long random() -> random
    long[] toArray() -> toArray
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    com.badlogic.gdx.utils.LongArray with(long[]) -> with
com.badlogic.gdx.utils.LongMap -> com.badlogic.gdx.utils.LongMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int EMPTY -> EMPTY
    int size -> size
    long[] keyTable -> keyTable
    java.lang.Object[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    java.lang.Object zeroValue -> zeroValue
    boolean hasZeroValue -> hasZeroValue
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.LongMap$Entries entries1 -> entries1
    com.badlogic.gdx.utils.LongMap$Entries entries2 -> entries2
    com.badlogic.gdx.utils.LongMap$Values values1 -> values1
    com.badlogic.gdx.utils.LongMap$Values values2 -> values2
    com.badlogic.gdx.utils.LongMap$Keys keys1 -> keys1
    com.badlogic.gdx.utils.LongMap$Keys keys2 -> keys2
    java.lang.Object put(long,java.lang.Object) -> put
    void putAll(com.badlogic.gdx.utils.LongMap) -> putAll
    void putResize(long,java.lang.Object) -> putResize
    void push(long,java.lang.Object,int,long,int,long,int,long) -> push
    void putStash(long,java.lang.Object) -> putStash
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    java.lang.Object getStash(long,java.lang.Object) -> getStash
    java.lang.Object remove(long) -> remove
    java.lang.Object removeStash(long) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void shrink(int) -> shrink
    void clear(int) -> clear
    void clear() -> clear
    boolean containsValue(java.lang.Object,boolean) -> containsValue
    boolean containsKey(long) -> containsKey
    boolean containsKeyStash(long) -> containsKeyStash
    long findKey(java.lang.Object,boolean,long) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(long) -> hash2
    int hash3(long) -> hash3
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.LongMap$Entries entries() -> entries
    com.badlogic.gdx.utils.LongMap$Values values() -> values
    com.badlogic.gdx.utils.LongMap$Keys keys() -> keys
com.badlogic.gdx.utils.LongMap$Entries -> com.badlogic.gdx.utils.LongMap$Entries:
    com.badlogic.gdx.utils.LongMap$Entry entry -> entry
    com.badlogic.gdx.utils.LongMap$Entry next() -> next
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    void remove() -> remove
    void reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.LongMap$Entry -> com.badlogic.gdx.utils.LongMap$Entry:
    long key -> key
    java.lang.Object value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.LongMap$Keys -> com.badlogic.gdx.utils.LongMap$Keys:
    long next() -> next
    com.badlogic.gdx.utils.LongArray toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.LongMap$MapIterator -> com.badlogic.gdx.utils.LongMap$MapIterator:
    int INDEX_ILLEGAL -> INDEX_ILLEGAL
    int INDEX_ZERO -> INDEX_ZERO
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.LongMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    boolean valid -> valid
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
com.badlogic.gdx.utils.LongMap$Values -> com.badlogic.gdx.utils.LongMap$Values:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.NumberUtils -> com.badlogic.gdx.utils.NumberUtils:
    int floatToIntBits(float) -> floatToIntBits
    int floatToRawIntBits(float) -> floatToRawIntBits
    int floatToIntColor(float) -> floatToIntColor
    float intToFloatColor(int) -> intToFloatColor
    float intBitsToFloat(int) -> intBitsToFloat
    long doubleToLongBits(double) -> doubleToLongBits
    double longBitsToDouble(long) -> longBitsToDouble
com.badlogic.gdx.utils.ObjectFloatMap -> com.badlogic.gdx.utils.ObjectFloatMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int size -> size
    java.lang.Object[] keyTable -> keyTable
    float[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.ObjectFloatMap$Entries entries1 -> entries1
    com.badlogic.gdx.utils.ObjectFloatMap$Entries entries2 -> entries2
    com.badlogic.gdx.utils.ObjectFloatMap$Values values1 -> values1
    com.badlogic.gdx.utils.ObjectFloatMap$Values values2 -> values2
    com.badlogic.gdx.utils.ObjectFloatMap$Keys keys1 -> keys1
    com.badlogic.gdx.utils.ObjectFloatMap$Keys keys2 -> keys2
    void put(java.lang.Object,float) -> put
    void putAll(com.badlogic.gdx.utils.ObjectFloatMap) -> putAll
    void putResize(java.lang.Object,float) -> putResize
    void push(java.lang.Object,float,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> push
    void putStash(java.lang.Object,float) -> putStash
    float get(java.lang.Object,float) -> get
    float getStash(java.lang.Object,float) -> getStash
    float getAndIncrement(java.lang.Object,float,float) -> getAndIncrement
    float getAndIncrementStash(java.lang.Object,float,float) -> getAndIncrementStash
    float remove(java.lang.Object,float) -> remove
    float removeStash(java.lang.Object,float) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void shrink(int) -> shrink
    void clear(int) -> clear
    void clear() -> clear
    boolean containsValue(float) -> containsValue
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsKeyStash(java.lang.Object) -> containsKeyStash
    java.lang.Object findKey(float) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(int) -> hash2
    int hash3(int) -> hash3
    java.lang.String toString() -> toString
    com.badlogic.gdx.utils.ObjectFloatMap$Entries iterator() -> iterator
    com.badlogic.gdx.utils.ObjectFloatMap$Entries entries() -> entries
    com.badlogic.gdx.utils.ObjectFloatMap$Values values() -> values
    com.badlogic.gdx.utils.ObjectFloatMap$Keys keys() -> keys
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.ObjectFloatMap$Entries -> com.badlogic.gdx.utils.ObjectFloatMap$Entries:
    com.badlogic.gdx.utils.ObjectFloatMap$Entry entry -> entry
    com.badlogic.gdx.utils.ObjectFloatMap$Entry next() -> next
    boolean hasNext() -> hasNext
    com.badlogic.gdx.utils.ObjectFloatMap$Entries iterator() -> iterator
    void remove() -> remove
    void reset() -> reset
    java.util.Iterator iterator() -> iterator
    java.lang.Object next() -> next
com.badlogic.gdx.utils.ObjectFloatMap$Entry -> com.badlogic.gdx.utils.ObjectFloatMap$Entry:
    java.lang.Object key -> key
    float value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.ObjectFloatMap$Keys -> com.badlogic.gdx.utils.ObjectFloatMap$Keys:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    com.badlogic.gdx.utils.ObjectFloatMap$Keys iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    com.badlogic.gdx.utils.Array toArray(com.badlogic.gdx.utils.Array) -> toArray
    void remove() -> remove
    void reset() -> reset
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.ObjectFloatMap$MapIterator -> com.badlogic.gdx.utils.ObjectFloatMap$MapIterator:
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.ObjectFloatMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    boolean valid -> valid
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
com.badlogic.gdx.utils.ObjectFloatMap$Values -> com.badlogic.gdx.utils.ObjectFloatMap$Values:
    boolean hasNext() -> hasNext
    float next() -> next
    com.badlogic.gdx.utils.FloatArray toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.ObjectIntMap -> com.badlogic.gdx.utils.ObjectIntMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int size -> size
    java.lang.Object[] keyTable -> keyTable
    int[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.ObjectIntMap$Entries entries1 -> entries1
    com.badlogic.gdx.utils.ObjectIntMap$Entries entries2 -> entries2
    com.badlogic.gdx.utils.ObjectIntMap$Values values1 -> values1
    com.badlogic.gdx.utils.ObjectIntMap$Values values2 -> values2
    com.badlogic.gdx.utils.ObjectIntMap$Keys keys1 -> keys1
    com.badlogic.gdx.utils.ObjectIntMap$Keys keys2 -> keys2
    void put(java.lang.Object,int) -> put
    void putAll(com.badlogic.gdx.utils.ObjectIntMap) -> putAll
    void putResize(java.lang.Object,int) -> putResize
    void push(java.lang.Object,int,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> push
    void putStash(java.lang.Object,int) -> putStash
    int get(java.lang.Object,int) -> get
    int getStash(java.lang.Object,int) -> getStash
    int getAndIncrement(java.lang.Object,int,int) -> getAndIncrement
    int getAndIncrementStash(java.lang.Object,int,int) -> getAndIncrementStash
    int remove(java.lang.Object,int) -> remove
    int removeStash(java.lang.Object,int) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void shrink(int) -> shrink
    void clear(int) -> clear
    void clear() -> clear
    boolean containsValue(int) -> containsValue
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsKeyStash(java.lang.Object) -> containsKeyStash
    java.lang.Object findKey(int) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(int) -> hash2
    int hash3(int) -> hash3
    java.lang.String toString() -> toString
    com.badlogic.gdx.utils.ObjectIntMap$Entries iterator() -> iterator
    com.badlogic.gdx.utils.ObjectIntMap$Entries entries() -> entries
    com.badlogic.gdx.utils.ObjectIntMap$Values values() -> values
    com.badlogic.gdx.utils.ObjectIntMap$Keys keys() -> keys
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.ObjectIntMap$Entries -> com.badlogic.gdx.utils.ObjectIntMap$Entries:
    com.badlogic.gdx.utils.ObjectIntMap$Entry entry -> entry
    com.badlogic.gdx.utils.ObjectIntMap$Entry next() -> next
    boolean hasNext() -> hasNext
    com.badlogic.gdx.utils.ObjectIntMap$Entries iterator() -> iterator
    void remove() -> remove
    void reset() -> reset
    java.util.Iterator iterator() -> iterator
    java.lang.Object next() -> next
com.badlogic.gdx.utils.ObjectIntMap$Entry -> com.badlogic.gdx.utils.ObjectIntMap$Entry:
    java.lang.Object key -> key
    int value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.ObjectIntMap$Keys -> com.badlogic.gdx.utils.ObjectIntMap$Keys:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    com.badlogic.gdx.utils.ObjectIntMap$Keys iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    com.badlogic.gdx.utils.Array toArray(com.badlogic.gdx.utils.Array) -> toArray
    void remove() -> remove
    void reset() -> reset
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.ObjectIntMap$MapIterator -> com.badlogic.gdx.utils.ObjectIntMap$MapIterator:
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.ObjectIntMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    boolean valid -> valid
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
com.badlogic.gdx.utils.ObjectIntMap$Values -> com.badlogic.gdx.utils.ObjectIntMap$Values:
    boolean hasNext() -> hasNext
    int next() -> next
    com.badlogic.gdx.utils.IntArray toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.ObjectMap -> com.badlogic.gdx.utils.ObjectMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int size -> size
    java.lang.Object[] keyTable -> keyTable
    java.lang.Object[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.ObjectMap$Entries entries1 -> entries1
    com.badlogic.gdx.utils.ObjectMap$Entries entries2 -> entries2
    com.badlogic.gdx.utils.ObjectMap$Values values1 -> values1
    com.badlogic.gdx.utils.ObjectMap$Values values2 -> values2
    com.badlogic.gdx.utils.ObjectMap$Keys keys1 -> keys1
    com.badlogic.gdx.utils.ObjectMap$Keys keys2 -> keys2
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object put_internal(java.lang.Object,java.lang.Object) -> put_internal
    void putAll(com.badlogic.gdx.utils.ObjectMap) -> putAll
    void putResize(java.lang.Object,java.lang.Object) -> putResize
    void push(java.lang.Object,java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> push
    void putStash(java.lang.Object,java.lang.Object) -> putStash
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object getStash(java.lang.Object) -> getStash
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    java.lang.Object getStash(java.lang.Object,java.lang.Object) -> getStash
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeStash(java.lang.Object) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void shrink(int) -> shrink
    void clear(int) -> clear
    void clear() -> clear
    boolean containsValue(java.lang.Object,boolean) -> containsValue
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsKeyStash(java.lang.Object) -> containsKeyStash
    java.lang.Object findKey(java.lang.Object,boolean) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(int) -> hash2
    int hash3(int) -> hash3
    java.lang.String toString(java.lang.String) -> toString
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String,boolean) -> toString
    com.badlogic.gdx.utils.ObjectMap$Entries iterator() -> iterator
    com.badlogic.gdx.utils.ObjectMap$Entries entries() -> entries
    com.badlogic.gdx.utils.ObjectMap$Values values() -> values
    com.badlogic.gdx.utils.ObjectMap$Keys keys() -> keys
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.ObjectMap$Entries -> com.badlogic.gdx.utils.ObjectMap$Entries:
    com.badlogic.gdx.utils.ObjectMap$Entry entry -> entry
    com.badlogic.gdx.utils.ObjectMap$Entry next() -> next
    boolean hasNext() -> hasNext
    com.badlogic.gdx.utils.ObjectMap$Entries iterator() -> iterator
    void remove() -> remove
    void reset() -> reset
    java.util.Iterator iterator() -> iterator
    java.lang.Object next() -> next
com.badlogic.gdx.utils.ObjectMap$Entry -> com.badlogic.gdx.utils.ObjectMap$Entry:
    java.lang.Object key -> key
    java.lang.Object value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.ObjectMap$Keys -> com.badlogic.gdx.utils.ObjectMap$Keys:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    com.badlogic.gdx.utils.ObjectMap$Keys iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    com.badlogic.gdx.utils.Array toArray(com.badlogic.gdx.utils.Array) -> toArray
    void remove() -> remove
    void reset() -> reset
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.ObjectMap$MapIterator -> com.badlogic.gdx.utils.ObjectMap$MapIterator:
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.ObjectMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    boolean valid -> valid
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
com.badlogic.gdx.utils.ObjectMap$Values -> com.badlogic.gdx.utils.ObjectMap$Values:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    com.badlogic.gdx.utils.ObjectMap$Values iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    com.badlogic.gdx.utils.Array toArray(com.badlogic.gdx.utils.Array) -> toArray
    void remove() -> remove
    void reset() -> reset
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.ObjectSet -> com.badlogic.gdx.utils.ObjectSet:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int size -> size
    java.lang.Object[] keyTable -> keyTable
    int capacity -> capacity
    int stashSize -> stashSize
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.ObjectSet$ObjectSetIterator iterator1 -> iterator1
    com.badlogic.gdx.utils.ObjectSet$ObjectSetIterator iterator2 -> iterator2
    boolean add(java.lang.Object) -> add
    void addAll(com.badlogic.gdx.utils.Array) -> addAll
    void addAll(com.badlogic.gdx.utils.Array,int,int) -> addAll
    void addAll(java.lang.Object[]) -> addAll
    void addAll(java.lang.Object[],int,int) -> addAll
    void addAll(com.badlogic.gdx.utils.ObjectSet) -> addAll
    void addResize(java.lang.Object) -> addResize
    void push(java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> push
    void addStash(java.lang.Object) -> addStash
    boolean remove(java.lang.Object) -> remove
    boolean removeStash(java.lang.Object) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void shrink(int) -> shrink
    void clear(int) -> clear
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsKeyStash(java.lang.Object) -> containsKeyStash
    java.lang.Object first() -> first
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(int) -> hash2
    int hash3(int) -> hash3
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    com.badlogic.gdx.utils.ObjectSet$ObjectSetIterator iterator() -> iterator
    com.badlogic.gdx.utils.ObjectSet with(java.lang.Object[]) -> with
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.ObjectSet$ObjectSetIterator -> com.badlogic.gdx.utils.ObjectSet$ObjectSetIterator:
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.ObjectSet set -> set
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    boolean valid -> valid
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    com.badlogic.gdx.utils.ObjectSet$ObjectSetIterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray(com.badlogic.gdx.utils.Array) -> toArray
    com.badlogic.gdx.utils.Array toArray() -> toArray
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.OrderedMap -> com.badlogic.gdx.utils.OrderedMap:
    com.badlogic.gdx.utils.Array keys -> keys
    com.badlogic.gdx.utils.ObjectMap$Entries entries1 -> entries1
    com.badlogic.gdx.utils.ObjectMap$Entries entries2 -> entries2
    com.badlogic.gdx.utils.ObjectMap$Values values1 -> values1
    com.badlogic.gdx.utils.ObjectMap$Values values2 -> values2
    com.badlogic.gdx.utils.ObjectMap$Keys keys1 -> keys1
    com.badlogic.gdx.utils.ObjectMap$Keys keys2 -> keys2
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    void clear(int) -> clear
    void clear() -> clear
    com.badlogic.gdx.utils.Array orderedKeys() -> orderedKeys
    com.badlogic.gdx.utils.ObjectMap$Entries iterator() -> iterator
    com.badlogic.gdx.utils.ObjectMap$Entries entries() -> entries
    com.badlogic.gdx.utils.ObjectMap$Values values() -> values
    com.badlogic.gdx.utils.ObjectMap$Keys keys() -> keys
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.OrderedMap$OrderedMapEntries -> com.badlogic.gdx.utils.OrderedMap$OrderedMapEntries:
    com.badlogic.gdx.utils.Array keys -> keys
    void reset() -> reset
    com.badlogic.gdx.utils.ObjectMap$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
com.badlogic.gdx.utils.OrderedMap$OrderedMapKeys -> com.badlogic.gdx.utils.OrderedMap$OrderedMapKeys:
    com.badlogic.gdx.utils.Array keys -> keys
    void reset() -> reset
    java.lang.Object next() -> next
    void remove() -> remove
com.badlogic.gdx.utils.OrderedMap$OrderedMapValues -> com.badlogic.gdx.utils.OrderedMap$OrderedMapValues:
    com.badlogic.gdx.utils.Array keys -> keys
    void reset() -> reset
    java.lang.Object next() -> next
    void remove() -> remove
com.badlogic.gdx.utils.OrderedSet -> com.badlogic.gdx.utils.OrderedSet:
    com.badlogic.gdx.utils.Array items -> items
    com.badlogic.gdx.utils.OrderedSet$OrderedSetIterator iterator1 -> iterator1
    com.badlogic.gdx.utils.OrderedSet$OrderedSetIterator iterator2 -> iterator2
    boolean add(java.lang.Object) -> add
    boolean remove(java.lang.Object) -> remove
    void clear(int) -> clear
    void clear() -> clear
    com.badlogic.gdx.utils.Array orderedItems() -> orderedItems
    com.badlogic.gdx.utils.OrderedSet$OrderedSetIterator iterator() -> iterator
    java.lang.String toString() -> toString
    com.badlogic.gdx.utils.ObjectSet$ObjectSetIterator iterator() -> iterator
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.OrderedSet$OrderedSetIterator -> com.badlogic.gdx.utils.OrderedSet$OrderedSetIterator:
    com.badlogic.gdx.utils.Array items -> items
    void reset() -> reset
    java.lang.Object next() -> next
    void remove() -> remove
com.badlogic.gdx.utils.PauseableThread -> com.badlogic.gdx.utils.PauseableThread:
    java.lang.Runnable runnable -> runnable
    boolean paused -> paused
    boolean exit -> exit
    void run() -> run
    void onPause() -> onPause
    void onResume() -> onResume
    boolean isPaused() -> isPaused
    void stopThread() -> stopThread
com.badlogic.gdx.utils.PerformanceCounter -> com.badlogic.gdx.utils.PerformanceCounter:
    float nano2seconds -> nano2seconds
    long startTime -> startTime
    long lastTick -> lastTick
    com.badlogic.gdx.math.FloatCounter time -> time
    com.badlogic.gdx.math.FloatCounter load -> load
    java.lang.String name -> name
    float current -> current
    boolean valid -> valid
    void tick() -> tick
    void tick(float) -> tick
    void start() -> start
    void stop() -> stop
    void reset() -> reset
    java.lang.String toString() -> toString
    com.badlogic.gdx.utils.StringBuilder toString(com.badlogic.gdx.utils.StringBuilder) -> toString
com.badlogic.gdx.utils.PerformanceCounters -> com.badlogic.gdx.utils.PerformanceCounters:
    float nano2seconds -> nano2seconds
    long lastTick -> lastTick
    com.badlogic.gdx.utils.Array counters -> counters
    com.badlogic.gdx.utils.PerformanceCounter add(java.lang.String,int) -> add
    com.badlogic.gdx.utils.PerformanceCounter add(java.lang.String) -> add
    void tick() -> tick
    void tick(float) -> tick
    com.badlogic.gdx.utils.StringBuilder toString(com.badlogic.gdx.utils.StringBuilder) -> toString
com.badlogic.gdx.utils.Pool -> com.badlogic.gdx.utils.Pool:
    int max -> max
    int peak -> peak
    com.badlogic.gdx.utils.Array freeObjects -> freeObjects
    java.lang.Object newObject() -> newObject
    java.lang.Object obtain() -> obtain
    void free(java.lang.Object) -> free
    void freeAll(com.badlogic.gdx.utils.Array) -> freeAll
    void clear() -> clear
    int getFree() -> getFree
com.badlogic.gdx.utils.Pool$Poolable -> com.badlogic.gdx.utils.Pool$Poolable:
    void reset() -> reset
com.badlogic.gdx.utils.PooledLinkedList -> com.badlogic.gdx.utils.PooledLinkedList:
    com.badlogic.gdx.utils.PooledLinkedList$Item head -> head
    com.badlogic.gdx.utils.PooledLinkedList$Item tail -> tail
    com.badlogic.gdx.utils.PooledLinkedList$Item iter -> iter
    com.badlogic.gdx.utils.PooledLinkedList$Item curr -> curr
    int size -> size
    com.badlogic.gdx.utils.Pool pool -> pool
    void add(java.lang.Object) -> add
    void iter() -> iter
    java.lang.Object next() -> next
    void remove() -> remove
    void clear() -> clear
com.badlogic.gdx.utils.PooledLinkedList$1 -> com.badlogic.gdx.utils.PooledLinkedList$1:
    com.badlogic.gdx.utils.PooledLinkedList this$0 -> this$0
    com.badlogic.gdx.utils.PooledLinkedList$Item newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.utils.PooledLinkedList$Item -> com.badlogic.gdx.utils.PooledLinkedList$Item:
    java.lang.Object payload -> payload
    com.badlogic.gdx.utils.PooledLinkedList$Item next -> next
    com.badlogic.gdx.utils.PooledLinkedList$Item prev -> prev
com.badlogic.gdx.utils.Pools -> com.badlogic.gdx.utils.Pools:
    com.badlogic.gdx.utils.ObjectMap typePools -> typePools
    com.badlogic.gdx.utils.Pool get(java.lang.Class,int) -> get
    com.badlogic.gdx.utils.Pool get(java.lang.Class) -> get
    java.lang.Object obtain(java.lang.Class) -> obtain
    void free(java.lang.Object) -> free
    void freeAll(com.badlogic.gdx.utils.Array) -> freeAll
    void freeAll(com.badlogic.gdx.utils.Array,boolean) -> freeAll
com.badlogic.gdx.utils.Predicate -> com.badlogic.gdx.utils.Predicate:
    boolean evaluate(java.lang.Object) -> evaluate
com.badlogic.gdx.utils.Predicate$PredicateIterable -> com.badlogic.gdx.utils.Predicate$PredicateIterable:
    java.lang.Iterable iterable -> iterable
    com.badlogic.gdx.utils.Predicate predicate -> predicate
    com.badlogic.gdx.utils.Predicate$PredicateIterator iterator -> iterator
    void set(java.lang.Iterable,com.badlogic.gdx.utils.Predicate) -> set
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.Predicate$PredicateIterator -> com.badlogic.gdx.utils.Predicate$PredicateIterator:
    java.util.Iterator iterator -> iterator
    com.badlogic.gdx.utils.Predicate predicate -> predicate
    boolean end -> end
    boolean peeked -> peeked
    java.lang.Object next -> next
    void set(java.lang.Iterable,com.badlogic.gdx.utils.Predicate) -> set
    void set(java.util.Iterator,com.badlogic.gdx.utils.Predicate) -> set
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.badlogic.gdx.utils.PropertiesUtils -> com.badlogic.gdx.utils.PropertiesUtils:
    int NONE -> NONE
    int SLASH -> SLASH
    int UNICODE -> UNICODE
    int CONTINUE -> CONTINUE
    int KEY_DONE -> KEY_DONE
    int IGNORE -> IGNORE
    java.lang.String LINE_SEPARATOR -> LINE_SEPARATOR
    void load(com.badlogic.gdx.utils.ObjectMap,java.io.Reader) -> load
    void store(com.badlogic.gdx.utils.ObjectMap,java.io.Writer,java.lang.String) -> store
    void storeImpl(com.badlogic.gdx.utils.ObjectMap,java.io.Writer,java.lang.String,boolean) -> storeImpl
    void dumpString(com.badlogic.gdx.utils.StringBuilder,java.lang.String,boolean,boolean) -> dumpString
    void writeComment(java.io.Writer,java.lang.String) -> writeComment
com.badlogic.gdx.utils.QuickSelect -> com.badlogic.gdx.utils.QuickSelect:
    java.lang.Object[] array -> array
    java.util.Comparator comp -> comp
    int select(java.lang.Object[],java.util.Comparator,int,int) -> select
    int partition(int,int,int) -> partition
    int recursiveSelect(int,int,int) -> recursiveSelect
    int medianOfThreePivot(int,int) -> medianOfThreePivot
    void swap(int,int) -> swap
com.badlogic.gdx.utils.ReflectionPool -> com.badlogic.gdx.utils.ReflectionPool:
    com.badlogic.gdx.utils.reflect.Constructor constructor -> constructor
    com.badlogic.gdx.utils.reflect.Constructor findConstructor(java.lang.Class) -> findConstructor
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.utils.Scaling -> com.badlogic.gdx.utils.Scaling:
    com.badlogic.gdx.utils.Scaling fit -> fit
    com.badlogic.gdx.utils.Scaling fill -> fill
    com.badlogic.gdx.utils.Scaling fillX -> fillX
    com.badlogic.gdx.utils.Scaling fillY -> fillY
    com.badlogic.gdx.utils.Scaling stretch -> stretch
    com.badlogic.gdx.utils.Scaling stretchX -> stretchX
    com.badlogic.gdx.utils.Scaling stretchY -> stretchY
    com.badlogic.gdx.utils.Scaling none -> none
    com.badlogic.gdx.math.Vector2 temp -> temp
    com.badlogic.gdx.utils.Scaling[] $VALUES -> $VALUES
    com.badlogic.gdx.utils.Scaling[] values() -> values
    com.badlogic.gdx.utils.Scaling valueOf(java.lang.String) -> valueOf
    com.badlogic.gdx.math.Vector2 apply(float,float,float,float) -> apply
com.badlogic.gdx.utils.Scaling$1 -> com.badlogic.gdx.utils.Scaling$1:
    int[] $SwitchMap$com$badlogic$gdx$utils$Scaling -> $SwitchMap$com$badlogic$gdx$utils$Scaling
com.badlogic.gdx.utils.ScreenUtils -> com.badlogic.gdx.utils.ScreenUtils:
    com.badlogic.gdx.graphics.g2d.TextureRegion getFrameBufferTexture() -> getFrameBufferTexture
    com.badlogic.gdx.graphics.g2d.TextureRegion getFrameBufferTexture(int,int,int,int) -> getFrameBufferTexture
    com.badlogic.gdx.graphics.Pixmap getFrameBufferPixmap(int,int,int,int) -> getFrameBufferPixmap
    byte[] getFrameBufferPixels(boolean) -> getFrameBufferPixels
    byte[] getFrameBufferPixels(int,int,int,int,boolean) -> getFrameBufferPixels
com.badlogic.gdx.utils.Select -> com.badlogic.gdx.utils.Select:
    com.badlogic.gdx.utils.Select instance -> instance
    com.badlogic.gdx.utils.QuickSelect quickSelect -> quickSelect
    com.badlogic.gdx.utils.Select instance() -> instance
    java.lang.Object select(java.lang.Object[],java.util.Comparator,int,int) -> select
    int selectIndex(java.lang.Object[],java.util.Comparator,int,int) -> selectIndex
    int fastMin(java.lang.Object[],java.util.Comparator,int) -> fastMin
    int fastMax(java.lang.Object[],java.util.Comparator,int) -> fastMax
com.badlogic.gdx.utils.SerializationException -> com.badlogic.gdx.utils.SerializationException:
    java.lang.StringBuffer trace -> trace
    boolean causedBy(java.lang.Class) -> causedBy
    boolean causedBy(java.lang.Throwable,java.lang.Class) -> causedBy
    java.lang.String getMessage() -> getMessage
    void addTrace(java.lang.String) -> addTrace
com.badlogic.gdx.utils.SharedLibraryLoader -> com.badlogic.gdx.utils.SharedLibraryLoader:
    boolean isWindows -> isWindows
    boolean isLinux -> isLinux
    boolean isMac -> isMac
    boolean isIos -> isIos
    boolean isAndroid -> isAndroid
    boolean isARM -> isARM
    boolean is64Bit -> is64Bit
    java.lang.String abi -> abi
    java.util.HashSet loadedLibraries -> loadedLibraries
    java.lang.String nativesJar -> nativesJar
    java.lang.String crc(java.io.InputStream) -> crc
    java.lang.String mapLibraryName(java.lang.String) -> mapLibraryName
    void load(java.lang.String) -> load
    java.io.InputStream readFile(java.lang.String) -> readFile
    java.io.File extractFile(java.lang.String,java.lang.String) -> extractFile
    java.io.File getExtractedFile(java.lang.String,java.lang.String) -> getExtractedFile
    boolean canWrite(java.io.File) -> canWrite
    boolean canExecute(java.io.File) -> canExecute
    java.io.File extractFile(java.lang.String,java.lang.String,java.io.File) -> extractFile
    void loadFile(java.lang.String) -> loadFile
    java.lang.Throwable loadFile(java.lang.String,java.lang.String,java.io.File) -> loadFile
com.badlogic.gdx.utils.ShortArray -> com.badlogic.gdx.utils.ShortArray:
    short[] items -> items
    int size -> size
    boolean ordered -> ordered
    void add(int) -> add
    void add(short) -> add
    void addAll(com.badlogic.gdx.utils.ShortArray) -> addAll
    void addAll(com.badlogic.gdx.utils.ShortArray,int,int) -> addAll
    void addAll(short[]) -> addAll
    void addAll(short[],int,int) -> addAll
    short get(int) -> get
    void set(int,short) -> set
    void incr(int,short) -> incr
    void mul(int,short) -> mul
    void insert(int,short) -> insert
    void swap(int,int) -> swap
    boolean contains(short) -> contains
    int indexOf(short) -> indexOf
    int lastIndexOf(char) -> lastIndexOf
    boolean removeValue(short) -> removeValue
    short removeIndex(int) -> removeIndex
    void removeRange(int,int) -> removeRange
    boolean removeAll(com.badlogic.gdx.utils.ShortArray) -> removeAll
    short pop() -> pop
    short peek() -> peek
    short first() -> first
    void clear() -> clear
    short[] shrink() -> shrink
    short[] ensureCapacity(int) -> ensureCapacity
    short[] resize(int) -> resize
    void sort() -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    short random() -> random
    short[] toArray() -> toArray
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    com.badlogic.gdx.utils.ShortArray with(short[]) -> with
com.badlogic.gdx.utils.SnapshotArray -> com.badlogic.gdx.utils.SnapshotArray:
    java.lang.Object[] snapshot -> snapshot
    java.lang.Object[] recycled -> recycled
    int snapshots -> snapshots
    java.lang.Object[] begin() -> begin
    void end() -> end
    void modified() -> modified
    void set(int,java.lang.Object) -> set
    void insert(int,java.lang.Object) -> insert
    void swap(int,int) -> swap
    boolean removeValue(java.lang.Object,boolean) -> removeValue
    java.lang.Object removeIndex(int) -> removeIndex
    void removeRange(int,int) -> removeRange
    boolean removeAll(com.badlogic.gdx.utils.Array,boolean) -> removeAll
    java.lang.Object pop() -> pop
    void clear() -> clear
    void sort() -> sort
    void sort(java.util.Comparator) -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    com.badlogic.gdx.utils.SnapshotArray with(java.lang.Object[]) -> with
com.badlogic.gdx.utils.Sort -> com.badlogic.gdx.utils.Sort:
    com.badlogic.gdx.utils.Sort instance -> instance
    com.badlogic.gdx.utils.TimSort timSort -> timSort
    com.badlogic.gdx.utils.ComparableTimSort comparableTimSort -> comparableTimSort
    void sort(com.badlogic.gdx.utils.Array) -> sort
    void sort(java.lang.Object[]) -> sort
    void sort(java.lang.Object[],int,int) -> sort
    void sort(com.badlogic.gdx.utils.Array,java.util.Comparator) -> sort
    void sort(java.lang.Object[],java.util.Comparator) -> sort
    void sort(java.lang.Object[],java.util.Comparator,int,int) -> sort
    com.badlogic.gdx.utils.Sort instance() -> instance
com.badlogic.gdx.utils.SortedIntList -> com.badlogic.gdx.utils.SortedIntList:
    com.badlogic.gdx.utils.SortedIntList$NodePool nodePool -> nodePool
    com.badlogic.gdx.utils.SortedIntList$Iterator iterator -> iterator
    int size -> size
    com.badlogic.gdx.utils.SortedIntList$Node first -> first
    java.lang.Object insert(int,java.lang.Object) -> insert
    java.lang.Object get(int) -> get
    void clear() -> clear
    int size() -> size
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.SortedIntList$Iterator -> com.badlogic.gdx.utils.SortedIntList$Iterator:
    com.badlogic.gdx.utils.SortedIntList$Node position -> position
    com.badlogic.gdx.utils.SortedIntList$Node previousPosition -> previousPosition
    com.badlogic.gdx.utils.SortedIntList this$0 -> this$0
    boolean hasNext() -> hasNext
    com.badlogic.gdx.utils.SortedIntList$Node next() -> next
    void remove() -> remove
    com.badlogic.gdx.utils.SortedIntList$Iterator reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.SortedIntList$Node -> com.badlogic.gdx.utils.SortedIntList$Node:
    com.badlogic.gdx.utils.SortedIntList$Node p -> p
    com.badlogic.gdx.utils.SortedIntList$Node n -> n
    java.lang.Object value -> value
    int index -> index
com.badlogic.gdx.utils.SortedIntList$NodePool -> com.badlogic.gdx.utils.SortedIntList$NodePool:
    com.badlogic.gdx.utils.SortedIntList$Node newObject() -> newObject
    com.badlogic.gdx.utils.SortedIntList$Node obtain(com.badlogic.gdx.utils.SortedIntList$Node,com.badlogic.gdx.utils.SortedIntList$Node,java.lang.Object,int) -> obtain
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.utils.StreamUtils -> com.badlogic.gdx.utils.StreamUtils:
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    byte[] EMPTY_BYTES -> EMPTY_BYTES
    void copyStream(java.io.InputStream,java.io.OutputStream) -> copyStream
    void copyStream(java.io.InputStream,java.io.OutputStream,int) -> copyStream
    byte[] copyStreamToByteArray(java.io.InputStream) -> copyStreamToByteArray
    byte[] copyStreamToByteArray(java.io.InputStream,int) -> copyStreamToByteArray
    java.lang.String copyStreamToString(java.io.InputStream) -> copyStreamToString
    java.lang.String copyStreamToString(java.io.InputStream,int) -> copyStreamToString
    void closeQuietly(java.io.Closeable) -> closeQuietly
com.badlogic.gdx.utils.StreamUtils$OptimizedByteArrayOutputStream -> com.badlogic.gdx.utils.StreamUtils$OptimizedByteArrayOutputStream:
    byte[] toByteArray() -> toByteArray
    byte[] getBuffer() -> getBuffer
com.badlogic.gdx.utils.StringBuilder -> com.badlogic.gdx.utils.StringBuilder:
    int INITIAL_CAPACITY -> INITIAL_CAPACITY
    char[] chars -> chars
    int length -> length
    char[] digits -> digits
    int numChars(int,int) -> numChars
    int numChars(long,int) -> numChars
    char[] getValue() -> getValue
    void enlargeBuffer(int) -> enlargeBuffer
    void appendNull() -> appendNull
    void append0(char[]) -> append0
    void append0(char[],int,int) -> append0
    void append0(char) -> append0
    void append0(java.lang.String) -> append0
    void append0(java.lang.CharSequence,int,int) -> append0
    int capacity() -> capacity
    char charAt(int) -> charAt
    void delete0(int,int) -> delete0
    void deleteCharAt0(int) -> deleteCharAt0
    void ensureCapacity(int) -> ensureCapacity
    void getChars(int,int,char[],int) -> getChars
    void insert0(int,char[]) -> insert0
    void insert0(int,char[],int,int) -> insert0
    void insert0(int,char) -> insert0
    void insert0(int,java.lang.String) -> insert0
    void insert0(int,java.lang.CharSequence,int,int) -> insert0
    int length() -> length
    void move(int,int) -> move
    void replace0(int,int,java.lang.String) -> replace0
    void reverse0() -> reverse0
    void setCharAt(int,char) -> setCharAt
    void setLength(int) -> setLength
    java.lang.String substring(int) -> substring
    java.lang.String substring(int,int) -> substring
    java.lang.String toString() -> toString
    java.lang.CharSequence subSequence(int,int) -> subSequence
    int indexOf(java.lang.String) -> indexOf
    int indexOf(java.lang.String,int) -> indexOf
    int lastIndexOf(java.lang.String) -> lastIndexOf
    int lastIndexOf(java.lang.String,int) -> lastIndexOf
    void trimToSize() -> trimToSize
    int codePointAt(int) -> codePointAt
    int codePointBefore(int) -> codePointBefore
    int codePointCount(int,int) -> codePointCount
    int offsetByCodePoints(int,int) -> offsetByCodePoints
    com.badlogic.gdx.utils.StringBuilder append(boolean) -> append
    com.badlogic.gdx.utils.StringBuilder append(char) -> append
    com.badlogic.gdx.utils.StringBuilder append(int) -> append
    com.badlogic.gdx.utils.StringBuilder append(int,int) -> append
    com.badlogic.gdx.utils.StringBuilder append(int,int,char) -> append
    com.badlogic.gdx.utils.StringBuilder append(long) -> append
    com.badlogic.gdx.utils.StringBuilder append(long,int) -> append
    com.badlogic.gdx.utils.StringBuilder append(long,int,char) -> append
    com.badlogic.gdx.utils.StringBuilder append(float) -> append
    com.badlogic.gdx.utils.StringBuilder append(double) -> append
    com.badlogic.gdx.utils.StringBuilder append(java.lang.Object) -> append
    com.badlogic.gdx.utils.StringBuilder append(java.lang.String) -> append
    com.badlogic.gdx.utils.StringBuilder append(char[]) -> append
    com.badlogic.gdx.utils.StringBuilder append(char[],int,int) -> append
    com.badlogic.gdx.utils.StringBuilder append(java.lang.CharSequence) -> append
    com.badlogic.gdx.utils.StringBuilder append(com.badlogic.gdx.utils.StringBuilder) -> append
    com.badlogic.gdx.utils.StringBuilder append(java.lang.CharSequence,int,int) -> append
    com.badlogic.gdx.utils.StringBuilder append(com.badlogic.gdx.utils.StringBuilder,int,int) -> append
    com.badlogic.gdx.utils.StringBuilder appendCodePoint(int) -> appendCodePoint
    com.badlogic.gdx.utils.StringBuilder delete(int,int) -> delete
    com.badlogic.gdx.utils.StringBuilder deleteCharAt(int) -> deleteCharAt
    com.badlogic.gdx.utils.StringBuilder insert(int,boolean) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,char) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,int) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,long) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,float) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,double) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.Object) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.String) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,char[]) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,char[],int,int) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.CharSequence) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.CharSequence,int,int) -> insert
    com.badlogic.gdx.utils.StringBuilder replace(int,int,java.lang.String) -> replace
    com.badlogic.gdx.utils.StringBuilder reverse() -> reverse
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
com.badlogic.gdx.utils.TextFormatter -> com.badlogic.gdx.utils.TextFormatter:
    java.text.MessageFormat messageFormat -> messageFormat
    com.badlogic.gdx.utils.StringBuilder buffer -> buffer
    java.lang.String format(java.lang.String,java.lang.Object[]) -> format
    java.lang.String replaceEscapeChars(java.lang.String) -> replaceEscapeChars
    java.lang.String simpleFormat(java.lang.String,java.lang.Object[]) -> simpleFormat
com.badlogic.gdx.utils.TimSort -> com.badlogic.gdx.utils.TimSort:
    int MIN_MERGE -> MIN_MERGE
    java.lang.Object[] a -> a
    java.util.Comparator c -> c
    int MIN_GALLOP -> MIN_GALLOP
    int minGallop -> minGallop
    int INITIAL_TMP_STORAGE_LENGTH -> INITIAL_TMP_STORAGE_LENGTH
    java.lang.Object[] tmp -> tmp
    int tmpCount -> tmpCount
    int stackSize -> stackSize
    int[] runBase -> runBase
    int[] runLen -> runLen
    boolean DEBUG -> DEBUG
    void doSort(java.lang.Object[],java.util.Comparator,int,int) -> doSort
    void sort(java.lang.Object[],java.util.Comparator) -> sort
    void sort(java.lang.Object[],int,int,java.util.Comparator) -> sort
    void binarySort(java.lang.Object[],int,int,int,java.util.Comparator) -> binarySort
    int countRunAndMakeAscending(java.lang.Object[],int,int,java.util.Comparator) -> countRunAndMakeAscending
    void reverseRange(java.lang.Object[],int,int) -> reverseRange
    int minRunLength(int) -> minRunLength
    void pushRun(int,int) -> pushRun
    void mergeCollapse() -> mergeCollapse
    void mergeForceCollapse() -> mergeForceCollapse
    void mergeAt(int) -> mergeAt
    int gallopLeft(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator) -> gallopLeft
    int gallopRight(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator) -> gallopRight
    void mergeLo(int,int,int,int) -> mergeLo
    void mergeHi(int,int,int,int) -> mergeHi
    java.lang.Object[] ensureCapacity(int) -> ensureCapacity
    void rangeCheck(int,int,int) -> rangeCheck
com.badlogic.gdx.utils.TimeUtils -> com.badlogic.gdx.utils.TimeUtils:
    long nanosPerMilli -> nanosPerMilli
    long nanoTime() -> nanoTime
    long millis() -> millis
    long nanosToMillis(long) -> nanosToMillis
    long millisToNanos(long) -> millisToNanos
    long timeSinceNanos(long) -> timeSinceNanos
    long timeSinceMillis(long) -> timeSinceMillis
com.badlogic.gdx.utils.Timer -> com.badlogic.gdx.utils.Timer:
    com.badlogic.gdx.utils.Array instances -> instances
    com.badlogic.gdx.utils.Timer$TimerThread thread -> thread
    int CANCELLED -> CANCELLED
    int FOREVER -> FOREVER
    com.badlogic.gdx.utils.Timer instance -> instance
    com.badlogic.gdx.utils.Array tasks -> tasks
    com.badlogic.gdx.utils.Timer instance() -> instance
    com.badlogic.gdx.utils.Timer$Task postTask(com.badlogic.gdx.utils.Timer$Task) -> postTask
    com.badlogic.gdx.utils.Timer$Task scheduleTask(com.badlogic.gdx.utils.Timer$Task,float) -> scheduleTask
    com.badlogic.gdx.utils.Timer$Task scheduleTask(com.badlogic.gdx.utils.Timer$Task,float,float) -> scheduleTask
    com.badlogic.gdx.utils.Timer$Task scheduleTask(com.badlogic.gdx.utils.Timer$Task,float,float,int) -> scheduleTask
    void stop() -> stop
    void start() -> start
    void clear() -> clear
    long update(long,long) -> update
    void delay(long) -> delay
    void wake() -> wake
    com.badlogic.gdx.utils.Timer$Task post(com.badlogic.gdx.utils.Timer$Task) -> post
    com.badlogic.gdx.utils.Timer$Task schedule(com.badlogic.gdx.utils.Timer$Task,float) -> schedule
    com.badlogic.gdx.utils.Timer$Task schedule(com.badlogic.gdx.utils.Timer$Task,float,float) -> schedule
    com.badlogic.gdx.utils.Timer$Task schedule(com.badlogic.gdx.utils.Timer$Task,float,float,int) -> schedule
com.badlogic.gdx.utils.Timer$Task -> com.badlogic.gdx.utils.Timer$Task:
    long executeTimeMillis -> executeTimeMillis
    long intervalMillis -> intervalMillis
    int repeatCount -> repeatCount
    void run() -> run
    void cancel() -> cancel
    boolean isScheduled() -> isScheduled
    long getExecuteTimeMillis() -> getExecuteTimeMillis
com.badlogic.gdx.utils.Timer$TimerThread -> com.badlogic.gdx.utils.Timer$TimerThread:
    com.badlogic.gdx.Application app -> app
    long pauseMillis -> pauseMillis
    void run() -> run
    void resume() -> resume
    void pause() -> pause
    void dispose() -> dispose
com.badlogic.gdx.utils.UBJsonReader -> com.badlogic.gdx.utils.UBJsonReader:
    boolean oldFormat -> oldFormat
    com.badlogic.gdx.utils.JsonValue parse(java.io.InputStream) -> parse
    com.badlogic.gdx.utils.JsonValue parse(com.badlogic.gdx.files.FileHandle) -> parse
    com.badlogic.gdx.utils.JsonValue parse(java.io.DataInputStream) -> parse
    com.badlogic.gdx.utils.JsonValue parse(java.io.DataInputStream,byte) -> parse
    com.badlogic.gdx.utils.JsonValue parseArray(java.io.DataInputStream) -> parseArray
    com.badlogic.gdx.utils.JsonValue parseObject(java.io.DataInputStream) -> parseObject
    com.badlogic.gdx.utils.JsonValue parseData(java.io.DataInputStream,byte) -> parseData
    java.lang.String parseString(java.io.DataInputStream,byte) -> parseString
    java.lang.String parseString(java.io.DataInputStream,boolean,byte) -> parseString
    long parseSize(java.io.DataInputStream,boolean,long) -> parseSize
    long parseSize(java.io.DataInputStream,byte,boolean,long) -> parseSize
    short readUChar(java.io.DataInputStream) -> readUChar
    int readUShort(java.io.DataInputStream) -> readUShort
    long readUInt(java.io.DataInputStream) -> readUInt
    java.lang.String readString(java.io.DataInputStream,long) -> readString
com.badlogic.gdx.utils.UBJsonWriter -> com.badlogic.gdx.utils.UBJsonWriter:
    java.io.DataOutputStream out -> out
    com.badlogic.gdx.utils.UBJsonWriter$JsonObject current -> current
    boolean named -> named
    com.badlogic.gdx.utils.Array stack -> stack
    com.badlogic.gdx.utils.UBJsonWriter object() -> object
    com.badlogic.gdx.utils.UBJsonWriter object(java.lang.String) -> object
    com.badlogic.gdx.utils.UBJsonWriter array() -> array
    com.badlogic.gdx.utils.UBJsonWriter array(java.lang.String) -> array
    com.badlogic.gdx.utils.UBJsonWriter name(java.lang.String) -> name
    com.badlogic.gdx.utils.UBJsonWriter value(byte) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(short) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(int) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(long) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(float) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(double) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(boolean) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(char) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(java.lang.String) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(byte[]) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(short[]) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(int[]) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(long[]) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(float[]) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(double[]) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(boolean[]) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(char[]) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(java.lang.String[]) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(java.lang.Object) -> value
    com.badlogic.gdx.utils.UBJsonWriter value() -> value
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,byte) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,short) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,int) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,long) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,float) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,double) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,boolean) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,char) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,java.lang.String) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,byte[]) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,short[]) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,int[]) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,long[]) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,float[]) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,double[]) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,boolean[]) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,char[]) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,java.lang.String[]) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String) -> set
    void checkName() -> checkName
    com.badlogic.gdx.utils.UBJsonWriter pop() -> pop
    com.badlogic.gdx.utils.UBJsonWriter pop(boolean) -> pop
    void flush() -> flush
    void close() -> close
com.badlogic.gdx.utils.UBJsonWriter$JsonObject -> com.badlogic.gdx.utils.UBJsonWriter$JsonObject:
    boolean array -> array
    com.badlogic.gdx.utils.UBJsonWriter this$0 -> this$0
    void close() -> close
com.badlogic.gdx.utils.XmlReader -> com.badlogic.gdx.utils.XmlReader:
    com.badlogic.gdx.utils.Array elements -> elements
    com.badlogic.gdx.utils.XmlReader$Element root -> root
    com.badlogic.gdx.utils.XmlReader$Element current -> current
    com.badlogic.gdx.utils.StringBuilder textBuffer -> textBuffer
    byte[] _xml_actions -> _xml_actions
    byte[] _xml_key_offsets -> _xml_key_offsets
    char[] _xml_trans_keys -> _xml_trans_keys
    byte[] _xml_single_lengths -> _xml_single_lengths
    byte[] _xml_range_lengths -> _xml_range_lengths
    short[] _xml_index_offsets -> _xml_index_offsets
    byte[] _xml_indicies -> _xml_indicies
    byte[] _xml_trans_targs -> _xml_trans_targs
    byte[] _xml_trans_actions -> _xml_trans_actions
    int xml_start -> xml_start
    int xml_first_final -> xml_first_final
    int xml_error -> xml_error
    int xml_en_elementBody -> xml_en_elementBody
    int xml_en_main -> xml_en_main
    com.badlogic.gdx.utils.XmlReader$Element parse(java.lang.String) -> parse
    com.badlogic.gdx.utils.XmlReader$Element parse(java.io.Reader) -> parse
    com.badlogic.gdx.utils.XmlReader$Element parse(java.io.InputStream) -> parse
    com.badlogic.gdx.utils.XmlReader$Element parse(com.badlogic.gdx.files.FileHandle) -> parse
    com.badlogic.gdx.utils.XmlReader$Element parse(char[],int,int) -> parse
    byte[] init__xml_actions_0() -> init__xml_actions_0
    byte[] init__xml_key_offsets_0() -> init__xml_key_offsets_0
    char[] init__xml_trans_keys_0() -> init__xml_trans_keys_0
    byte[] init__xml_single_lengths_0() -> init__xml_single_lengths_0
    byte[] init__xml_range_lengths_0() -> init__xml_range_lengths_0
    short[] init__xml_index_offsets_0() -> init__xml_index_offsets_0
    byte[] init__xml_indicies_0() -> init__xml_indicies_0
    byte[] init__xml_trans_targs_0() -> init__xml_trans_targs_0
    byte[] init__xml_trans_actions_0() -> init__xml_trans_actions_0
    void open(java.lang.String) -> open
    void attribute(java.lang.String,java.lang.String) -> attribute
    java.lang.String entity(java.lang.String) -> entity
    void text(java.lang.String) -> text
    void close() -> close
com.badlogic.gdx.utils.XmlReader$Element -> com.badlogic.gdx.utils.XmlReader$Element:
    java.lang.String name -> name
    com.badlogic.gdx.utils.ObjectMap attributes -> attributes
    com.badlogic.gdx.utils.Array children -> children
    java.lang.String text -> text
    com.badlogic.gdx.utils.XmlReader$Element parent -> parent
    java.lang.String getName() -> getName
    com.badlogic.gdx.utils.ObjectMap getAttributes() -> getAttributes
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(java.lang.String,java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.String) -> setAttribute
    int getChildCount() -> getChildCount
    com.badlogic.gdx.utils.XmlReader$Element getChild(int) -> getChild
    void addChild(com.badlogic.gdx.utils.XmlReader$Element) -> addChild
    java.lang.String getText() -> getText
    void setText(java.lang.String) -> setText
    void removeChild(int) -> removeChild
    void removeChild(com.badlogic.gdx.utils.XmlReader$Element) -> removeChild
    void remove() -> remove
    com.badlogic.gdx.utils.XmlReader$Element getParent() -> getParent
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    com.badlogic.gdx.utils.XmlReader$Element getChildByName(java.lang.String) -> getChildByName
    com.badlogic.gdx.utils.XmlReader$Element getChildByNameRecursive(java.lang.String) -> getChildByNameRecursive
    com.badlogic.gdx.utils.Array getChildrenByName(java.lang.String) -> getChildrenByName
    com.badlogic.gdx.utils.Array getChildrenByNameRecursively(java.lang.String) -> getChildrenByNameRecursively
    void getChildrenByNameRecursively(java.lang.String,com.badlogic.gdx.utils.Array) -> getChildrenByNameRecursively
    float getFloatAttribute(java.lang.String) -> getFloatAttribute
    float getFloatAttribute(java.lang.String,float) -> getFloatAttribute
    int getIntAttribute(java.lang.String) -> getIntAttribute
    int getIntAttribute(java.lang.String,int) -> getIntAttribute
    boolean getBooleanAttribute(java.lang.String) -> getBooleanAttribute
    boolean getBooleanAttribute(java.lang.String,boolean) -> getBooleanAttribute
    java.lang.String get(java.lang.String) -> get
    java.lang.String get(java.lang.String,java.lang.String) -> get
    int getInt(java.lang.String) -> getInt
    int getInt(java.lang.String,int) -> getInt
    float getFloat(java.lang.String) -> getFloat
    float getFloat(java.lang.String,float) -> getFloat
    boolean getBoolean(java.lang.String) -> getBoolean
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
com.badlogic.gdx.utils.XmlWriter -> com.badlogic.gdx.utils.XmlWriter:
    java.io.Writer writer -> writer
    com.badlogic.gdx.utils.Array stack -> stack
    java.lang.String currentElement -> currentElement
    boolean indentNextClose -> indentNextClose
    int indent -> indent
    void indent() -> indent
    com.badlogic.gdx.utils.XmlWriter element(java.lang.String) -> element
    com.badlogic.gdx.utils.XmlWriter element(java.lang.String,java.lang.Object) -> element
    boolean startElementContent() -> startElementContent
    com.badlogic.gdx.utils.XmlWriter attribute(java.lang.String,java.lang.Object) -> attribute
    com.badlogic.gdx.utils.XmlWriter text(java.lang.Object) -> text
    com.badlogic.gdx.utils.XmlWriter pop() -> pop
    void close() -> close
    void write(char[],int,int) -> write
    void flush() -> flush
com.badlogic.gdx.utils.async.AsyncExecutor -> com.badlogic.gdx.utils.async.AsyncExecutor:
    java.util.concurrent.ExecutorService executor -> executor
    com.badlogic.gdx.utils.async.AsyncResult submit(com.badlogic.gdx.utils.async.AsyncTask) -> submit
    void dispose() -> dispose
com.badlogic.gdx.utils.async.AsyncExecutor$1 -> com.badlogic.gdx.utils.async.AsyncExecutor$1:
    com.badlogic.gdx.utils.async.AsyncExecutor this$0 -> this$0
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.badlogic.gdx.utils.async.AsyncExecutor$2 -> com.badlogic.gdx.utils.async.AsyncExecutor$2:
    com.badlogic.gdx.utils.async.AsyncTask val$task -> val$task
    com.badlogic.gdx.utils.async.AsyncExecutor this$0 -> this$0
    java.lang.Object call() -> call
com.badlogic.gdx.utils.async.AsyncResult -> com.badlogic.gdx.utils.async.AsyncResult:
    java.util.concurrent.Future future -> future
    boolean isDone() -> isDone
    java.lang.Object get() -> get
com.badlogic.gdx.utils.async.AsyncTask -> com.badlogic.gdx.utils.async.AsyncTask:
    java.lang.Object call() -> call
com.badlogic.gdx.utils.async.ThreadUtils -> com.badlogic.gdx.utils.async.ThreadUtils:
    void yield() -> yield
com.badlogic.gdx.utils.compression.CRC -> com.badlogic.gdx.utils.compression.CRC:
    int[] Table -> Table
    int _value -> _value
    void Init() -> Init
    void Update(byte[],int,int) -> Update
    void Update(byte[]) -> Update
    void UpdateByte(int) -> UpdateByte
    int GetDigest() -> GetDigest
com.badlogic.gdx.utils.compression.ICodeProgress -> com.badlogic.gdx.utils.compression.ICodeProgress:
    void SetProgress(long,long) -> SetProgress
com.badlogic.gdx.utils.compression.Lzma -> com.badlogic.gdx.utils.compression.Lzma:
    void compress(java.io.InputStream,java.io.OutputStream) -> compress
    void decompress(java.io.InputStream,java.io.OutputStream) -> decompress
com.badlogic.gdx.utils.compression.Lzma$CommandLine -> com.badlogic.gdx.utils.compression.Lzma$CommandLine:
    int kEncode -> kEncode
    int kDecode -> kDecode
    int kBenchmak -> kBenchmak
    int Command -> Command
    int NumBenchmarkPasses -> NumBenchmarkPasses
    int DictionarySize -> DictionarySize
    boolean DictionarySizeIsDefined -> DictionarySizeIsDefined
    int Lc -> Lc
    int Lp -> Lp
    int Pb -> Pb
    int Fb -> Fb
    boolean FbIsDefined -> FbIsDefined
    boolean Eos -> Eos
    int Algorithm -> Algorithm
    int MatchFinder -> MatchFinder
    java.lang.String InFile -> InFile
    java.lang.String OutFile -> OutFile
com.badlogic.gdx.utils.compression.lz.BinTree -> com.badlogic.gdx.utils.compression.lz.BinTree:
    int _cyclicBufferPos -> _cyclicBufferPos
    int _cyclicBufferSize -> _cyclicBufferSize
    int _matchMaxLen -> _matchMaxLen
    int[] _son -> _son
    int[] _hash -> _hash
    int _cutValue -> _cutValue
    int _hashMask -> _hashMask
    int _hashSizeSum -> _hashSizeSum
    boolean HASH_ARRAY -> HASH_ARRAY
    int kHash2Size -> kHash2Size
    int kHash3Size -> kHash3Size
    int kBT2HashSize -> kBT2HashSize
    int kStartMaxLen -> kStartMaxLen
    int kHash3Offset -> kHash3Offset
    int kEmptyHashValue -> kEmptyHashValue
    int kMaxValForNormalize -> kMaxValForNormalize
    int kNumHashDirectBytes -> kNumHashDirectBytes
    int kMinMatchCheck -> kMinMatchCheck
    int kFixHashSize -> kFixHashSize
    int[] CrcTable -> CrcTable
    void SetType(int) -> SetType
    void Init() -> Init
    void MovePos() -> MovePos
    boolean Create(int,int,int,int) -> Create
    int GetMatches(int[]) -> GetMatches
    void Skip(int) -> Skip
    void NormalizeLinks(int[],int,int) -> NormalizeLinks
    void Normalize() -> Normalize
    void SetCutValue(int) -> SetCutValue
com.badlogic.gdx.utils.compression.lz.InWindow -> com.badlogic.gdx.utils.compression.lz.InWindow:
    byte[] _bufferBase -> _bufferBase
    java.io.InputStream _stream -> _stream
    int _posLimit -> _posLimit
    boolean _streamEndWasReached -> _streamEndWasReached
    int _pointerToLastSafePosition -> _pointerToLastSafePosition
    int _bufferOffset -> _bufferOffset
    int _blockSize -> _blockSize
    int _pos -> _pos
    int _keepSizeBefore -> _keepSizeBefore
    int _keepSizeAfter -> _keepSizeAfter
    int _streamPos -> _streamPos
    void MoveBlock() -> MoveBlock
    void ReadBlock() -> ReadBlock
    void Free() -> Free
    void Create(int,int,int) -> Create
    void SetStream(java.io.InputStream) -> SetStream
    void ReleaseStream() -> ReleaseStream
    void Init() -> Init
    void MovePos() -> MovePos
    byte GetIndexByte(int) -> GetIndexByte
    int GetMatchLen(int,int,int) -> GetMatchLen
    int GetNumAvailableBytes() -> GetNumAvailableBytes
    void ReduceOffsets(int) -> ReduceOffsets
com.badlogic.gdx.utils.compression.lz.OutWindow -> com.badlogic.gdx.utils.compression.lz.OutWindow:
    byte[] _buffer -> _buffer
    int _pos -> _pos
    int _windowSize -> _windowSize
    int _streamPos -> _streamPos
    java.io.OutputStream _stream -> _stream
    void Create(int) -> Create
    void SetStream(java.io.OutputStream) -> SetStream
    void ReleaseStream() -> ReleaseStream
    void Init(boolean) -> Init
    void Flush() -> Flush
    void CopyBlock(int,int) -> CopyBlock
    void PutByte(byte) -> PutByte
    byte GetByte(int) -> GetByte
com.badlogic.gdx.utils.compression.lzma.Base -> com.badlogic.gdx.utils.compression.lzma.Base:
    int kNumRepDistances -> kNumRepDistances
    int kNumStates -> kNumStates
    int kNumPosSlotBits -> kNumPosSlotBits
    int kDicLogSizeMin -> kDicLogSizeMin
    int kNumLenToPosStatesBits -> kNumLenToPosStatesBits
    int kNumLenToPosStates -> kNumLenToPosStates
    int kMatchMinLen -> kMatchMinLen
    int kNumAlignBits -> kNumAlignBits
    int kAlignTableSize -> kAlignTableSize
    int kAlignMask -> kAlignMask
    int kStartPosModelIndex -> kStartPosModelIndex
    int kEndPosModelIndex -> kEndPosModelIndex
    int kNumPosModels -> kNumPosModels
    int kNumFullDistances -> kNumFullDistances
    int kNumLitPosStatesBitsEncodingMax -> kNumLitPosStatesBitsEncodingMax
    int kNumLitContextBitsMax -> kNumLitContextBitsMax
    int kNumPosStatesBitsMax -> kNumPosStatesBitsMax
    int kNumPosStatesMax -> kNumPosStatesMax
    int kNumPosStatesBitsEncodingMax -> kNumPosStatesBitsEncodingMax
    int kNumPosStatesEncodingMax -> kNumPosStatesEncodingMax
    int kNumLowLenBits -> kNumLowLenBits
    int kNumMidLenBits -> kNumMidLenBits
    int kNumHighLenBits -> kNumHighLenBits
    int kNumLowLenSymbols -> kNumLowLenSymbols
    int kNumMidLenSymbols -> kNumMidLenSymbols
    int kNumLenSymbols -> kNumLenSymbols
    int kMatchMaxLen -> kMatchMaxLen
    int StateInit() -> StateInit
    int StateUpdateChar(int) -> StateUpdateChar
    int StateUpdateMatch(int) -> StateUpdateMatch
    int StateUpdateRep(int) -> StateUpdateRep
    int StateUpdateShortRep(int) -> StateUpdateShortRep
    boolean StateIsCharState(int) -> StateIsCharState
    int GetLenToPosState(int) -> GetLenToPosState
com.badlogic.gdx.utils.compression.lzma.Decoder -> com.badlogic.gdx.utils.compression.lzma.Decoder:
    com.badlogic.gdx.utils.compression.lz.OutWindow m_OutWindow -> m_OutWindow
    com.badlogic.gdx.utils.compression.rangecoder.Decoder m_RangeDecoder -> m_RangeDecoder
    short[] m_IsMatchDecoders -> m_IsMatchDecoders
    short[] m_IsRepDecoders -> m_IsRepDecoders
    short[] m_IsRepG0Decoders -> m_IsRepG0Decoders
    short[] m_IsRepG1Decoders -> m_IsRepG1Decoders
    short[] m_IsRepG2Decoders -> m_IsRepG2Decoders
    short[] m_IsRep0LongDecoders -> m_IsRep0LongDecoders
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder[] m_PosSlotDecoder -> m_PosSlotDecoder
    short[] m_PosDecoders -> m_PosDecoders
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder m_PosAlignDecoder -> m_PosAlignDecoder
    com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder m_LenDecoder -> m_LenDecoder
    com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder m_RepLenDecoder -> m_RepLenDecoder
    com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder m_LiteralDecoder -> m_LiteralDecoder
    int m_DictionarySize -> m_DictionarySize
    int m_DictionarySizeCheck -> m_DictionarySizeCheck
    int m_PosStateMask -> m_PosStateMask
    boolean SetDictionarySize(int) -> SetDictionarySize
    boolean SetLcLpPb(int,int,int) -> SetLcLpPb
    void Init() -> Init
    boolean Code(java.io.InputStream,java.io.OutputStream,long) -> Code
    boolean SetDecoderProperties(byte[]) -> SetDecoderProperties
com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder -> com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder:
    short[] m_Choice -> m_Choice
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder[] m_LowCoder -> m_LowCoder
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder[] m_MidCoder -> m_MidCoder
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder m_HighCoder -> m_HighCoder
    int m_NumPosStates -> m_NumPosStates
    com.badlogic.gdx.utils.compression.lzma.Decoder this$0 -> this$0
    void Create(int) -> Create
    void Init() -> Init
    int Decode(com.badlogic.gdx.utils.compression.rangecoder.Decoder,int) -> Decode
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder -> com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder:
    com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2[] m_Coders -> m_Coders
    int m_NumPrevBits -> m_NumPrevBits
    int m_NumPosBits -> m_NumPosBits
    int m_PosMask -> m_PosMask
    com.badlogic.gdx.utils.compression.lzma.Decoder this$0 -> this$0
    void Create(int,int) -> Create
    void Init() -> Init
    com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2 GetDecoder(int,byte) -> GetDecoder
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2 -> com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2:
    short[] m_Decoders -> m_Decoders
    com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder this$1 -> this$1
    void Init() -> Init
    byte DecodeNormal(com.badlogic.gdx.utils.compression.rangecoder.Decoder) -> DecodeNormal
    byte DecodeWithMatchByte(com.badlogic.gdx.utils.compression.rangecoder.Decoder,byte) -> DecodeWithMatchByte
com.badlogic.gdx.utils.compression.lzma.Encoder -> com.badlogic.gdx.utils.compression.lzma.Encoder:
    int EMatchFinderTypeBT2 -> EMatchFinderTypeBT2
    int EMatchFinderTypeBT4 -> EMatchFinderTypeBT4
    int kIfinityPrice -> kIfinityPrice
    byte[] g_FastPos -> g_FastPos
    int _state -> _state
    byte _previousByte -> _previousByte
    int[] _repDistances -> _repDistances
    int kDefaultDictionaryLogSize -> kDefaultDictionaryLogSize
    int kNumFastBytesDefault -> kNumFastBytesDefault
    int kNumLenSpecSymbols -> kNumLenSpecSymbols
    int kNumOpts -> kNumOpts
    com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal[] _optimum -> _optimum
    com.badlogic.gdx.utils.compression.lz.BinTree _matchFinder -> _matchFinder
    com.badlogic.gdx.utils.compression.rangecoder.Encoder _rangeEncoder -> _rangeEncoder
    short[] _isMatch -> _isMatch
    short[] _isRep -> _isRep
    short[] _isRepG0 -> _isRepG0
    short[] _isRepG1 -> _isRepG1
    short[] _isRepG2 -> _isRepG2
    short[] _isRep0Long -> _isRep0Long
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder[] _posSlotEncoder -> _posSlotEncoder
    short[] _posEncoders -> _posEncoders
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder _posAlignEncoder -> _posAlignEncoder
    com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder _lenEncoder -> _lenEncoder
    com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder _repMatchLenEncoder -> _repMatchLenEncoder
    com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder _literalEncoder -> _literalEncoder
    int[] _matchDistances -> _matchDistances
    int _numFastBytes -> _numFastBytes
    int _longestMatchLength -> _longestMatchLength
    int _numDistancePairs -> _numDistancePairs
    int _additionalOffset -> _additionalOffset
    int _optimumEndIndex -> _optimumEndIndex
    int _optimumCurrentIndex -> _optimumCurrentIndex
    boolean _longestMatchWasFound -> _longestMatchWasFound
    int[] _posSlotPrices -> _posSlotPrices
    int[] _distancesPrices -> _distancesPrices
    int[] _alignPrices -> _alignPrices
    int _alignPriceCount -> _alignPriceCount
    int _distTableSize -> _distTableSize
    int _posStateBits -> _posStateBits
    int _posStateMask -> _posStateMask
    int _numLiteralPosStateBits -> _numLiteralPosStateBits
    int _numLiteralContextBits -> _numLiteralContextBits
    int _dictionarySize -> _dictionarySize
    int _dictionarySizePrev -> _dictionarySizePrev
    int _numFastBytesPrev -> _numFastBytesPrev
    long nowPos64 -> nowPos64
    boolean _finished -> _finished
    java.io.InputStream _inStream -> _inStream
    int _matchFinderType -> _matchFinderType
    boolean _writeEndMark -> _writeEndMark
    boolean _needReleaseMFStream -> _needReleaseMFStream
    int[] reps -> reps
    int[] repLens -> repLens
    int backRes -> backRes
    long[] processedInSize -> processedInSize
    long[] processedOutSize -> processedOutSize
    boolean[] finished -> finished
    int kPropSize -> kPropSize
    byte[] properties -> properties
    int[] tempPrices -> tempPrices
    int _matchPriceCount -> _matchPriceCount
    int GetPosSlot(int) -> GetPosSlot
    int GetPosSlot2(int) -> GetPosSlot2
    void BaseInit() -> BaseInit
    void Create() -> Create
    void SetWriteEndMarkerMode(boolean) -> SetWriteEndMarkerMode
    void Init() -> Init
    int ReadMatchDistances() -> ReadMatchDistances
    void MovePos(int) -> MovePos
    int GetRepLen1Price(int,int) -> GetRepLen1Price
    int GetPureRepPrice(int,int,int) -> GetPureRepPrice
    int GetRepPrice(int,int,int,int) -> GetRepPrice
    int GetPosLenPrice(int,int,int) -> GetPosLenPrice
    int Backward(int) -> Backward
    int GetOptimum(int) -> GetOptimum
    boolean ChangePair(int,int) -> ChangePair
    void WriteEndMarker(int) -> WriteEndMarker
    void Flush(int) -> Flush
    void CodeOneBlock(long[],long[],boolean[]) -> CodeOneBlock
    void ReleaseMFStream() -> ReleaseMFStream
    void SetOutStream(java.io.OutputStream) -> SetOutStream
    void ReleaseOutStream() -> ReleaseOutStream
    void ReleaseStreams() -> ReleaseStreams
    void SetStreams(java.io.InputStream,java.io.OutputStream,long,long) -> SetStreams
    void Code(java.io.InputStream,java.io.OutputStream,long,long,com.badlogic.gdx.utils.compression.ICodeProgress) -> Code
    void WriteCoderProperties(java.io.OutputStream) -> WriteCoderProperties
    void FillDistancesPrices() -> FillDistancesPrices
    void FillAlignPrices() -> FillAlignPrices
    boolean SetAlgorithm(int) -> SetAlgorithm
    boolean SetDictionarySize(int) -> SetDictionarySize
    boolean SetNumFastBytes(int) -> SetNumFastBytes
    boolean SetMatchFinder(int) -> SetMatchFinder
    boolean SetLcLpPb(int,int,int) -> SetLcLpPb
    void SetEndMarkerMode(boolean) -> SetEndMarkerMode
com.badlogic.gdx.utils.compression.lzma.Encoder$LenEncoder -> com.badlogic.gdx.utils.compression.lzma.Encoder$LenEncoder:
    short[] _choice -> _choice
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder[] _lowCoder -> _lowCoder
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder[] _midCoder -> _midCoder
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder _highCoder -> _highCoder
    com.badlogic.gdx.utils.compression.lzma.Encoder this$0 -> this$0
    void Init(int) -> Init
    void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int,int) -> Encode
    void SetPrices(int,int,int[],int) -> SetPrices
com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder -> com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder:
    int[] _prices -> _prices
    int _tableSize -> _tableSize
    int[] _counters -> _counters
    com.badlogic.gdx.utils.compression.lzma.Encoder this$0 -> this$0
    void SetTableSize(int) -> SetTableSize
    int GetPrice(int,int) -> GetPrice
    void UpdateTable(int) -> UpdateTable
    void UpdateTables(int) -> UpdateTables
    void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int,int) -> Encode
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder -> com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder:
    com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2[] m_Coders -> m_Coders
    int m_NumPrevBits -> m_NumPrevBits
    int m_NumPosBits -> m_NumPosBits
    int m_PosMask -> m_PosMask
    com.badlogic.gdx.utils.compression.lzma.Encoder this$0 -> this$0
    void Create(int,int) -> Create
    void Init() -> Init
    com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2 GetSubCoder(int,byte) -> GetSubCoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2 -> com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2:
    short[] m_Encoders -> m_Encoders
    com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder this$1 -> this$1
    void Init() -> Init
    void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,byte) -> Encode
    void EncodeMatched(com.badlogic.gdx.utils.compression.rangecoder.Encoder,byte,byte) -> EncodeMatched
    int GetPrice(boolean,byte,byte) -> GetPrice
com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal -> com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal:
    int State -> State
    boolean Prev1IsChar -> Prev1IsChar
    boolean Prev2 -> Prev2
    int PosPrev2 -> PosPrev2
    int BackPrev2 -> BackPrev2
    int Price -> Price
    int PosPrev -> PosPrev
    int BackPrev -> BackPrev
    int Backs0 -> Backs0
    int Backs1 -> Backs1
    int Backs2 -> Backs2
    int Backs3 -> Backs3
    com.badlogic.gdx.utils.compression.lzma.Encoder this$0 -> this$0
    void MakeAsChar() -> MakeAsChar
    void MakeAsShortRep() -> MakeAsShortRep
    boolean IsShortRep() -> IsShortRep
com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder -> com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder:
    short[] Models -> Models
    int NumBitLevels -> NumBitLevels
    void Init() -> Init
    int Decode(com.badlogic.gdx.utils.compression.rangecoder.Decoder) -> Decode
    int ReverseDecode(com.badlogic.gdx.utils.compression.rangecoder.Decoder) -> ReverseDecode
    int ReverseDecode(short[],int,com.badlogic.gdx.utils.compression.rangecoder.Decoder,int) -> ReverseDecode
com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder -> com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder:
    short[] Models -> Models
    int NumBitLevels -> NumBitLevels
    void Init() -> Init
    void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int) -> Encode
    void ReverseEncode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int) -> ReverseEncode
    int GetPrice(int) -> GetPrice
    int ReverseGetPrice(int) -> ReverseGetPrice
    int ReverseGetPrice(short[],int,int,int) -> ReverseGetPrice
    void ReverseEncode(short[],int,com.badlogic.gdx.utils.compression.rangecoder.Encoder,int,int) -> ReverseEncode
com.badlogic.gdx.utils.compression.rangecoder.Decoder -> com.badlogic.gdx.utils.compression.rangecoder.Decoder:
    int kTopMask -> kTopMask
    int kNumBitModelTotalBits -> kNumBitModelTotalBits
    int kBitModelTotal -> kBitModelTotal
    int kNumMoveBits -> kNumMoveBits
    int Range -> Range
    int Code -> Code
    java.io.InputStream Stream -> Stream
    void SetStream(java.io.InputStream) -> SetStream
    void ReleaseStream() -> ReleaseStream
    void Init() -> Init
    int DecodeDirectBits(int) -> DecodeDirectBits
    int DecodeBit(short[],int) -> DecodeBit
    void InitBitModels(short[]) -> InitBitModels
com.badlogic.gdx.utils.compression.rangecoder.Encoder -> com.badlogic.gdx.utils.compression.rangecoder.Encoder:
    int kTopMask -> kTopMask
    int kNumBitModelTotalBits -> kNumBitModelTotalBits
    int kBitModelTotal -> kBitModelTotal
    int kNumMoveBits -> kNumMoveBits
    java.io.OutputStream Stream -> Stream
    long Low -> Low
    int Range -> Range
    int _cacheSize -> _cacheSize
    int _cache -> _cache
    long _position -> _position
    int kNumMoveReducingBits -> kNumMoveReducingBits
    int kNumBitPriceShiftBits -> kNumBitPriceShiftBits
    int[] ProbPrices -> ProbPrices
    void SetStream(java.io.OutputStream) -> SetStream
    void ReleaseStream() -> ReleaseStream
    void Init() -> Init
    void FlushData() -> FlushData
    void FlushStream() -> FlushStream
    void ShiftLow() -> ShiftLow
    void EncodeDirectBits(int,int) -> EncodeDirectBits
    long GetProcessedSizeAdd() -> GetProcessedSizeAdd
    void InitBitModels(short[]) -> InitBitModels
    void Encode(short[],int,int) -> Encode
    int GetPrice(int,int) -> GetPrice
    int GetPrice0(int) -> GetPrice0
    int GetPrice1(int) -> GetPrice1
com.badlogic.gdx.utils.reflect.Annotation -> com.badlogic.gdx.utils.reflect.Annotation:
    java.lang.annotation.Annotation annotation -> annotation
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.Class getAnnotationType() -> getAnnotationType
com.badlogic.gdx.utils.reflect.ArrayReflection -> com.badlogic.gdx.utils.reflect.ArrayReflection:
    java.lang.Object newInstance(java.lang.Class,int) -> newInstance
    int getLength(java.lang.Object) -> getLength
    java.lang.Object get(java.lang.Object,int) -> get
    void set(java.lang.Object,int,java.lang.Object) -> set
com.badlogic.gdx.utils.reflect.ClassReflection -> com.badlogic.gdx.utils.reflect.ClassReflection:
    java.lang.Class forName(java.lang.String) -> forName
    java.lang.String getSimpleName(java.lang.Class) -> getSimpleName
    boolean isInstance(java.lang.Class,java.lang.Object) -> isInstance
    boolean isAssignableFrom(java.lang.Class,java.lang.Class) -> isAssignableFrom
    boolean isMemberClass(java.lang.Class) -> isMemberClass
    boolean isStaticClass(java.lang.Class) -> isStaticClass
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    com.badlogic.gdx.utils.reflect.Constructor[] getConstructors(java.lang.Class) -> getConstructors
    com.badlogic.gdx.utils.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[]) -> getConstructor
    com.badlogic.gdx.utils.reflect.Constructor getDeclaredConstructor(java.lang.Class,java.lang.Class[]) -> getDeclaredConstructor
    com.badlogic.gdx.utils.reflect.Method[] getMethods(java.lang.Class) -> getMethods
    com.badlogic.gdx.utils.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getMethod
    com.badlogic.gdx.utils.reflect.Method[] getDeclaredMethods(java.lang.Class) -> getDeclaredMethods
    com.badlogic.gdx.utils.reflect.Method getDeclaredMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getDeclaredMethod
    com.badlogic.gdx.utils.reflect.Field[] getFields(java.lang.Class) -> getFields
    com.badlogic.gdx.utils.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
    com.badlogic.gdx.utils.reflect.Field[] getDeclaredFields(java.lang.Class) -> getDeclaredFields
    com.badlogic.gdx.utils.reflect.Field getDeclaredField(java.lang.Class,java.lang.String) -> getDeclaredField
    boolean isAnnotationPresent(java.lang.Class,java.lang.Class) -> isAnnotationPresent
    com.badlogic.gdx.utils.reflect.Annotation[] getDeclaredAnnotations(java.lang.Class) -> getDeclaredAnnotations
    com.badlogic.gdx.utils.reflect.Annotation getDeclaredAnnotation(java.lang.Class,java.lang.Class) -> getDeclaredAnnotation
com.badlogic.gdx.utils.reflect.Constructor -> com.badlogic.gdx.utils.reflect.Constructor:
    java.lang.reflect.Constructor constructor -> constructor
    java.lang.Class[] getParameterTypes() -> getParameterTypes
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    boolean isAccessible() -> isAccessible
    void setAccessible(boolean) -> setAccessible
    java.lang.Object newInstance(java.lang.Object[]) -> newInstance
com.badlogic.gdx.utils.reflect.Field -> com.badlogic.gdx.utils.reflect.Field:
    java.lang.reflect.Field field -> field
    java.lang.String getName() -> getName
    java.lang.Class getType() -> getType
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    boolean isAccessible() -> isAccessible
    void setAccessible(boolean) -> setAccessible
    boolean isDefaultAccess() -> isDefaultAccess
    boolean isFinal() -> isFinal
    boolean isPrivate() -> isPrivate
    boolean isProtected() -> isProtected
    boolean isPublic() -> isPublic
    boolean isStatic() -> isStatic
    boolean isTransient() -> isTransient
    boolean isVolatile() -> isVolatile
    boolean isSynthetic() -> isSynthetic
    java.lang.Class getElementType(int) -> getElementType
    boolean isAnnotationPresent(java.lang.Class) -> isAnnotationPresent
    com.badlogic.gdx.utils.reflect.Annotation[] getDeclaredAnnotations() -> getDeclaredAnnotations
    com.badlogic.gdx.utils.reflect.Annotation getDeclaredAnnotation(java.lang.Class) -> getDeclaredAnnotation
    java.lang.Object get(java.lang.Object) -> get
    void set(java.lang.Object,java.lang.Object) -> set
com.badlogic.gdx.utils.reflect.Method -> com.badlogic.gdx.utils.reflect.Method:
    java.lang.reflect.Method method -> method
    java.lang.String getName() -> getName
    java.lang.Class getReturnType() -> getReturnType
    java.lang.Class[] getParameterTypes() -> getParameterTypes
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    boolean isAccessible() -> isAccessible
    void setAccessible(boolean) -> setAccessible
    boolean isAbstract() -> isAbstract
    boolean isDefaultAccess() -> isDefaultAccess
    boolean isFinal() -> isFinal
    boolean isPrivate() -> isPrivate
    boolean isProtected() -> isProtected
    boolean isPublic() -> isPublic
    boolean isNative() -> isNative
    boolean isStatic() -> isStatic
    boolean isVarArgs() -> isVarArgs
    java.lang.Object invoke(java.lang.Object,java.lang.Object[]) -> invoke
com.badlogic.gdx.utils.reflect.ReflectionException -> com.badlogic.gdx.utils.reflect.ReflectionException:
com.badlogic.gdx.utils.viewport.ExtendViewport -> com.badlogic.gdx.utils.viewport.ExtendViewport:
    float minWorldWidth -> minWorldWidth
    float minWorldHeight -> minWorldHeight
    float maxWorldWidth -> maxWorldWidth
    float maxWorldHeight -> maxWorldHeight
    void update(int,int,boolean) -> update
    float getMinWorldWidth() -> getMinWorldWidth
    void setMinWorldWidth(float) -> setMinWorldWidth
    float getMinWorldHeight() -> getMinWorldHeight
    void setMinWorldHeight(float) -> setMinWorldHeight
    float getMaxWorldWidth() -> getMaxWorldWidth
    void setMaxWorldWidth(float) -> setMaxWorldWidth
    float getMaxWorldHeight() -> getMaxWorldHeight
    void setMaxWorldHeight(float) -> setMaxWorldHeight
com.badlogic.gdx.utils.viewport.FillViewport -> com.badlogic.gdx.utils.viewport.FillViewport:
com.badlogic.gdx.utils.viewport.FitViewport -> com.badlogic.gdx.utils.viewport.FitViewport:
com.badlogic.gdx.utils.viewport.ScalingViewport -> com.badlogic.gdx.utils.viewport.ScalingViewport:
    com.badlogic.gdx.utils.Scaling scaling -> scaling
    void update(int,int,boolean) -> update
    com.badlogic.gdx.utils.Scaling getScaling() -> getScaling
    void setScaling(com.badlogic.gdx.utils.Scaling) -> setScaling
com.badlogic.gdx.utils.viewport.ScreenViewport -> com.badlogic.gdx.utils.viewport.ScreenViewport:
    float unitsPerPixel -> unitsPerPixel
    void update(int,int,boolean) -> update
    float getUnitsPerPixel() -> getUnitsPerPixel
    void setUnitsPerPixel(float) -> setUnitsPerPixel
com.badlogic.gdx.utils.viewport.StretchViewport -> com.badlogic.gdx.utils.viewport.StretchViewport:
com.badlogic.gdx.utils.viewport.Viewport -> com.badlogic.gdx.utils.viewport.Viewport:
    com.badlogic.gdx.graphics.Camera camera -> camera
    float worldWidth -> worldWidth
    float worldHeight -> worldHeight
    int screenX -> screenX
    int screenY -> screenY
    int screenWidth -> screenWidth
    int screenHeight -> screenHeight
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    void apply() -> apply
    void apply(boolean) -> apply
    void update(int,int) -> update
    void update(int,int,boolean) -> update
    com.badlogic.gdx.math.Vector2 unproject(com.badlogic.gdx.math.Vector2) -> unproject
    com.badlogic.gdx.math.Vector2 project(com.badlogic.gdx.math.Vector2) -> project
    com.badlogic.gdx.math.Vector3 unproject(com.badlogic.gdx.math.Vector3) -> unproject
    com.badlogic.gdx.math.Vector3 project(com.badlogic.gdx.math.Vector3) -> project
    com.badlogic.gdx.math.collision.Ray getPickRay(float,float) -> getPickRay
    void calculateScissors(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle) -> calculateScissors
    com.badlogic.gdx.math.Vector2 toScreenCoordinates(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Matrix4) -> toScreenCoordinates
    com.badlogic.gdx.graphics.Camera getCamera() -> getCamera
    void setCamera(com.badlogic.gdx.graphics.Camera) -> setCamera
    float getWorldWidth() -> getWorldWidth
    void setWorldWidth(float) -> setWorldWidth
    float getWorldHeight() -> getWorldHeight
    void setWorldHeight(float) -> setWorldHeight
    void setWorldSize(float,float) -> setWorldSize
    int getScreenX() -> getScreenX
    void setScreenX(int) -> setScreenX
    int getScreenY() -> getScreenY
    void setScreenY(int) -> setScreenY
    int getScreenWidth() -> getScreenWidth
    void setScreenWidth(int) -> setScreenWidth
    int getScreenHeight() -> getScreenHeight
    void setScreenHeight(int) -> setScreenHeight
    void setScreenPosition(int,int) -> setScreenPosition
    void setScreenSize(int,int) -> setScreenSize
    void setScreenBounds(int,int,int,int) -> setScreenBounds
    int getLeftGutterWidth() -> getLeftGutterWidth
    int getRightGutterX() -> getRightGutterX
    int getRightGutterWidth() -> getRightGutterWidth
    int getBottomGutterHeight() -> getBottomGutterHeight
    int getTopGutterY() -> getTopGutterY
    int getTopGutterHeight() -> getTopGutterHeight
com.marsor.common.activities.AbstractBaseActivity -> com.marsor.common.activities.AbstractBaseActivity:
    int featureSortType -> c
    java.util.List features -> d
    java.lang.Integer[] animations -> e
    java.util.ArrayList totalActivities -> a
    android.os.Handler messageHandler -> b
    android.view.LayoutInflater layoutInflaterInService -> f
    android.content.BroadcastReceiver broadcastReceiver -> g
    android.content.IntentFilter exitAppFilter -> h
    android.view.ViewGroup currentContentView -> i
    int[] assignFeatures() -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onRestart() -> onRestart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void onBackPressed() -> onBackPressed
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyLongPress(int,android.view.KeyEvent) -> onKeyLongPress
    boolean onKeyMultiple(int,int,android.view.KeyEvent) -> onKeyMultiple
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onPostResume() -> onPostResume
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void onPrepareDialog(int,android.app.Dialog) -> onPrepareDialog
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void exitApp() -> b
    void processMessage(android.os.Message) -> a
    void removeMessage(int) -> a
    void sendActivityMessage(int) -> b
    void sendActivityMessageDelay$255f656(long) -> a
    android.view.View inflateView(int) -> c
    int findResourceId(java.lang.String) -> a
    void sortFeatures(int) -> d
    int getStartAnimation() -> c
    void addFeatures(int) -> e
com.marsor.common.activities.AbstractBaseActivity$1 -> com.marsor.common.activities.a:
    com.marsor.common.activities.AbstractBaseActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.marsor.common.activities.AbstractBaseActivity$BaseComparator -> com.marsor.common.activities.b:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.marsor.common.activities.AbstractBaseActivity$BaseMessageHandler -> com.marsor.common.activities.c:
    com.marsor.common.activities.AbstractBaseActivity act -> a
    void handleMessage(android.os.Message) -> handleMessage
com.marsor.common.activities.FlashBaseActivity -> com.marsor.common.activities.FlashBaseActivity:
    int layoutId -> c
    void onCreate(android.os.Bundle) -> onCreate
    java.lang.Object getLayoutId() -> d
    boolean initialCompleted() -> e
    void asyncInitialization() -> f
    java.lang.Class getNextPageClass() -> g
com.marsor.common.activities.InstructionActivity -> com.marsor.common.activities.InstructionActivity:
    java.lang.Class getNextPageClass() -> d
    boolean isDisplayInstruction() -> e
    void saveDisplayInstruction$1385ff() -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
com.marsor.common.activities.InstructionActivity$1 -> com.marsor.common.activities.d:
    android.widget.CheckBox val$chkbox -> a
    com.marsor.common.activities.InstructionActivity this$0 -> b
    void onClick(android.view.View) -> onClick
com.marsor.common.components.CustomDialog -> com.marsor.common.components.a:
    int iLayoutId -> b
    android.graphics.Point size -> c
    android.content.DialogInterface$OnCancelListener onCancelListener -> d
    android.graphics.Point location -> e
    boolean centerX -> f
    boolean centerY -> g
    float maskalpha -> h
    java.lang.String customWindowStyleId -> i
    boolean customWindowStyle -> j
    android.app.AlertDialog dialog -> k
    com.marsor.common.activities.AbstractBaseActivity activity -> a
    android.graphics.Point screen -> l
    android.view.ViewGroup totalContainer -> m
    boolean initialized -> n
    boolean disableBackKey -> o
    boolean cancelOnTouchOut -> p
    int windowAnimation -> q
    void setCenterX$1385ff() -> a
    void setCenterY$1385ff() -> b
com.marsor.common.components.SentenceLayout -> com.marsor.common.components.SentenceLayout:
    android.widget.LinearLayout$LayoutParams roleFwLp -> a
    android.widget.LinearLayout$LayoutParams contentFwLp -> b
    com.marsor.common.components.SentenceTextView txtRoleName -> c
    com.marsor.common.components.SentenceTextView txtContent -> d
    int alignType -> e
    java.lang.CharSequence roleName -> f
    java.lang.CharSequence content -> g
    void initialize() -> a
    void setRoleName(java.lang.CharSequence) -> a
    void setContent(java.lang.CharSequence) -> b
com.marsor.common.components.SentenceTextView -> com.marsor.common.components.SentenceTextView:
    boolean paragraph -> a
    void initialize() -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void setParagraph(boolean) -> a
    void onCreateContextMenu(android.view.ContextMenu) -> onCreateContextMenu
    boolean getDefaultEditable() -> getDefaultEditable
com.marsor.common.components.TabButton -> com.marsor.common.components.b:
    java.lang.String buttonName -> a
    java.lang.String buttonCaption -> b
    java.lang.Class nextPage -> c
    android.view.View$OnClickListener clickListener -> d
    boolean totalJump -> e
    boolean closeAfterJump -> f
    android.os.Bundle bundleData -> g
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.Class getNextPage() -> a
    android.view.View$OnClickListener getClickListener() -> b
    boolean isTotalJump() -> c
    boolean isCloseAfterJump() -> d
    android.os.Bundle getBundleData() -> e
com.marsor.common.context.AppContext -> com.marsor.common.a.a:
    boolean startupReported -> a
    float widthRate -> b
    float heightRate -> c
    float dencityRate -> d
    android.app.Activity activeActivity -> e
    com.marsor.common.context.Constants$NetWork networkState -> f
    long lastUpdateAdsPic -> g
    java.lang.String appSdPath -> h
    boolean adsEnabled -> i
    java.lang.String Mc_String_DeviceId -> j
    java.util.HashMap mapPaths -> k
    java.lang.String version -> l
    boolean isNetworkOk() -> a
    java.lang.String getDeviceIMEI() -> b
com.marsor.common.context.Constants -> com.marsor.common.a.b:
com.marsor.common.context.Constants$NetWork -> com.marsor.common.a.c:
    com.marsor.common.context.Constants$NetWork Ok -> a
    com.marsor.common.context.Constants$NetWork None -> b
    com.marsor.common.context.Constants$NetWork Unknown -> c
    java.lang.String caption -> d
    int value -> e
    com.marsor.common.context.Constants$NetWork[] $VALUES -> f
    com.marsor.common.context.Constants$NetWork[] values() -> values
    com.marsor.common.context.Constants$NetWork valueOf(java.lang.String) -> valueOf
com.marsor.common.feature.AdvertiseFeature -> com.marsor.common.b.a:
    android.view.ViewGroup totalContainer -> b
    android.widget.LinearLayout contentContainer -> c
    int getFeatureType() -> a
    void onDestroy() -> b
    int contentViewSetOrder() -> c
    com.marsor.common.feature.Feature$FeatureContainer getContentView() -> d
com.marsor.common.feature.CommonTabFeature -> com.marsor.common.b.b:
    android.widget.LinearLayout outerContainer -> b
    android.widget.LinearLayout innerContainer -> c
    android.widget.LinearLayout layoutTabViewContainer -> d
    android.widget.LinearLayout layoutButtonContainer -> e
    com.marsor.common.feature.CommonTabFeature$TabFeatureInitializer initializer -> f
    android.widget.LinearLayout$LayoutParams tabButtonLayoutParams -> g
    com.marsor.common.feature.CommonTabFeature$TabButtonClicker buttonClicker -> h
    android.widget.CompoundButton btnActive -> i
    int getFeatureType() -> a
    int contentViewSetOrder() -> c
    com.marsor.common.feature.Feature$FeatureContainer getContentView() -> d
    void onCreate$79e5e33f() -> e
    void onPostCreate$79e5e33f() -> f
    android.widget.LinearLayout access$100(com.marsor.common.feature.CommonTabFeature) -> a
    void access$200(com.marsor.common.feature.CommonTabFeature,android.widget.ToggleButton) -> a
com.marsor.common.feature.CommonTabFeature$TabButtonClicker -> com.marsor.common.b.c:
    com.marsor.common.feature.CommonTabFeature this$0 -> a
    void onClick(android.view.View) -> onClick
com.marsor.common.feature.CommonTabFeature$TabFeatureInitializer -> com.marsor.common.b.d:
com.marsor.common.feature.CommonTitleFeature -> com.marsor.common.b.e:
    android.widget.LinearLayout outerContainer -> b
    android.widget.LinearLayout innerContainer -> c
    android.widget.TextView txtCommonTitle -> d
    android.widget.LinearLayout layoutTitleContainer -> e
    android.widget.Button btnLeftBaseButton -> f
    android.widget.LinearLayout layoutLeftButtonContainer -> g
    android.widget.Button btnRightBaseButton -> h
    android.widget.LinearLayout layoutRightButtonContainer -> i
    int getFeatureType() -> a
    int contentViewSetOrder() -> c
    com.marsor.common.feature.Feature$FeatureContainer getContentView() -> d
    void onCreate$79e5e33f() -> e
    void setTitle(java.lang.CharSequence) -> a
    void initialPossibleComponents() -> i
com.marsor.common.feature.CommonTitleFeature$AboutClickListener -> com.marsor.common.b.f:
    long lastClick -> a
    com.marsor.common.feature.CommonTitleFeature this$0 -> b
    void onClick(android.view.View) -> onClick
com.marsor.common.feature.CommonTitleFeature$AboutClickListener$1 -> com.marsor.common.b.g:
    com.marsor.common.feature.CommonTitleFeature$AboutClickListener this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.marsor.common.feature.CommonTitleFeature$BackClickListener -> com.marsor.common.b.h:
    com.marsor.common.feature.CommonTitleFeature this$0 -> a
    void onClick(android.view.View) -> onClick
com.marsor.common.feature.Feature -> com.marsor.common.b.i:
    com.marsor.common.activities.AbstractBaseActivity targetActivity -> a
    int getFeatureType() -> a
    void onCreate$79e5e33f() -> e
    void onResume() -> g
    void onPause() -> h
    void onDestroy() -> b
    void onPostCreate$79e5e33f() -> f
    int contentViewSetOrder() -> c
    com.marsor.common.feature.Feature$FeatureContainer getContentView() -> d
    void setTitle(java.lang.CharSequence) -> a
    void processMessage(android.os.Message) -> a
com.marsor.common.feature.Feature$FeatureContainer -> com.marsor.common.b.j:
    android.view.ViewGroup outerContainer -> a
    android.view.ViewGroup innerContainer -> b
    void setOuterContainer(android.view.ViewGroup) -> a
    android.view.ViewGroup getOuterContainer() -> a
    void setInnerContainer(android.view.ViewGroup) -> b
    android.view.ViewGroup getInnerContainer() -> b
com.marsor.common.feature.FeatureFactory -> com.marsor.common.b.k:
    com.marsor.common.feature.FeatureFactory instance -> a
    com.marsor.common.feature.FeatureFactory getInstance() -> a
    com.marsor.common.feature.Feature createFeature(int,com.marsor.common.activities.AbstractBaseActivity) -> a
com.marsor.common.feature.FlashFeature -> com.marsor.common.b.l:
    float minDisplayTime -> b
    long initialTime -> c
    int type -> d
    boolean displayMe -> e
    boolean isPausing -> f
    int getFeatureType() -> a
    void onCreate$79e5e33f() -> e
    void onResume() -> g
    void onPause() -> h
    void processMessage(android.os.Message) -> a
    void clearMessage() -> i
    com.marsor.common.activities.FlashBaseActivity access$000(com.marsor.common.feature.FlashFeature) -> a
    void access$100(com.marsor.common.feature.FlashFeature) -> b
com.marsor.common.feature.FlashFeature$1 -> com.marsor.common.b.m:
    com.marsor.common.feature.FlashFeature this$0 -> a
    void run() -> run
com.marsor.common.feature.IFeatureFactory -> com.marsor.common.b.n:
    com.marsor.common.feature.Feature createFeature(int,com.marsor.common.activities.AbstractBaseActivity) -> a
com.marsor.common.utils.ActivityUtils -> com.marsor.common.c.a:
    void changeActivity(android.app.Activity,java.lang.Class,boolean,int[]) -> a
com.marsor.common.utils.AlgorithmicUtils -> com.marsor.common.c.b:
    boolean isEmpty(java.lang.Object) -> a
    void invokeMethod$410ab8a7(java.lang.Object,java.lang.String,java.lang.Object[]) -> a
com.marsor.common.utils.AndroidUtils -> com.marsor.common.c.c:
    int findResourceId(java.lang.String,java.lang.String) -> a
com.marsor.common.utils.DataUtils -> com.marsor.common.c.d:
    android.content.SharedPreferences marsorPreferences -> a
    java.lang.String dataFilePath -> b
    java.io.File dataFile -> c
    android.database.sqlite.SQLiteDatabase marsorDb -> d
    java.lang.Object objLock -> e
    android.content.SharedPreferences getPreferences() -> a
    void savePreference(java.lang.String,long) -> a
    long getPreference$505cfb67(java.lang.String) -> a
com.marsor.common.utils.FileUtils -> com.marsor.common.c.e:
    java.lang.String getStreamContent(java.io.InputStream) -> a
    java.io.InputStream getAssetsInputStream(java.lang.String) -> a
com.marsor.common.utils.ScreenAdapter -> com.marsor.common.c.f:
    android.view.WindowManager manager -> a
    com.marsor.common.utils.ScreenAdapter adapter -> b
    int deviceWidth -> c
    int deviceHeight -> d
    com.marsor.common.utils.ScreenAdapter getInstance(android.app.Activity) -> a
    com.marsor.common.utils.ScreenAdapter getInstance() -> a
    void initialize(android.app.Activity) -> b
    int ComputeWidth(int) -> a
    java.lang.Number ComputeHeight(java.lang.Number) -> a
    int ComputeHeight(int) -> b
    java.lang.Number computeFontSize(java.lang.Number) -> b
    int getDeviceWidth() -> b
    int getDeviceHeight() -> c
com.marsor.common.utils.WebHttpUtils -> com.marsor.common.c.g:
    java.lang.String encoding -> a
    java.util.HashMap mpContentType -> b
    void requestUrl(java.lang.String,java.util.HashMap) -> a
com.marsor.common.utils.WebHttpUtils$1 -> com.marsor.common.c.h:
    java.lang.String val$strThreadParams -> a
    void run() -> run
com.pop.star.DataValues -> com.pop.star.a:
    com.pop.star.DataValues instance -> a
    int allScore -> b
    int[] levelScore -> c
    int curLevel -> d
    int hammerNumber -> e
    boolean isSave -> f
    boolean soundOn -> g
    boolean musicOn -> h
    com.pop.star.DataValues getInstance() -> a
    int getAllScore() -> b
    void setAllScore$13462e() -> c
    int getLevelScore(int) -> a
    int getCurLevel() -> d
    void setCurLevel(int) -> b
    void calculationClearStar(int) -> c
    boolean isSave() -> e
    void setSave(boolean) -> a
    boolean isSoundOn() -> f
    void setSoundOn(boolean) -> b
    boolean isMusicOn() -> g
    void setMusicOn(boolean) -> c
    int getHammerNumber() -> h
    void setHammerNumber(int) -> d
com.pop.star.DialogHanlder -> com.pop.star.b:
    void buttonOK() -> a
    void buttonBack() -> b
com.pop.star.MainActivity -> com.pop.star.MainActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.pop.star.MainGame -> com.pop.star.c:
    com.pop.star.MainGame instance -> a
    int width -> c
    int height -> d
    java.lang.String channel -> b
    void create() -> create
    void render() -> render
    void dispose() -> dispose
    void resize(int,int) -> resize
    void resume() -> resume
    void pause() -> pause
    int getWidth() -> a
    int getHeight() -> b
com.pop.star.Scene -> com.pop.star.d:
    int screenWidth -> a
    int screenHeight -> b
    com.badlogic.gdx.scenes.scene2d.Stage stageUILayer -> c
    com.badlogic.gdx.scenes.scene2d.Stage stageMapLayer -> d
    com.badlogic.gdx.scenes.scene2d.Stage stageEffectLayer -> e
    com.badlogic.gdx.graphics.g2d.TextureAtlas atlas -> f
    com.badlogic.gdx.InputMultiplexer multiplexer -> g
    com.badlogic.gdx.scenes.scene2d.ui.Image imageBackground -> h
    com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle buttonStyle -> i
    com.badlogic.gdx.scenes.scene2d.ui.ImageButton buttonExit -> j
    com.badlogic.gdx.scenes.scene2d.ui.Image imagePropsHammer -> k
    com.badlogic.gdx.scenes.scene2d.ui.Label labelScore -> l
    com.badlogic.gdx.scenes.scene2d.ui.Label labelLevelScore -> m
    com.badlogic.gdx.scenes.scene2d.ui.Label labelHammer -> n
    com.pop.star.logic.Star[][] starList -> o
    com.badlogic.gdx.graphics.g2d.ParticleEffect[] effectStar -> p
    java.util.ArrayList saveCheckStar -> q
    java.util.ArrayList saveBombStar -> r
    com.pop.star.logic.DestroyLogic destroyLogic -> s
    int starSame -> t
    int lastRemainingBlocks -> u
    boolean hasEndGame -> v
    boolean hasCheckInputHandler -> w
    boolean hasCheckHammer -> x
    void nextLevel() -> a
    void initGameResource() -> k
    void initResource() -> l
    void show() -> show
    void render(float) -> render
    void resize(int,int) -> resize
    void pause() -> pause
    void resume() -> resume
    void hide() -> hide
    void dispose() -> dispose
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
    boolean keyTyped(char) -> keyTyped
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchUp(int,int,int,int) -> touchUp
    boolean touchDragged(int,int,int) -> touchDragged
    boolean mouseMoved(int,int) -> mouseMoved
    boolean scrolled(int) -> scrolled
    com.pop.star.logic.Star[][] getStarList() -> b
    java.util.ArrayList getSaveCheckStar() -> c
    java.util.ArrayList getSaveBombStar() -> d
    int getStarSame() -> e
    void setStarSame(int) -> a
    com.badlogic.gdx.scenes.scene2d.Stage getStage() -> f
    com.pop.star.logic.DestroyLogic getDestroyLogic() -> g
    void setHasEndGame$1385ff() -> h
    com.badlogic.gdx.graphics.g2d.ParticleEffect getEffectStar(int) -> b
    int getLastRemainingBlocks() -> i
    boolean isHasCheckHammer() -> j
    void setHasCheckHammer(boolean) -> a
    void setLastRemainingBlocks(int) -> c
    void access$0$181ccb15(com.pop.star.Scene) -> a
    com.badlogic.gdx.InputMultiplexer access$1(com.pop.star.Scene) -> b
    com.badlogic.gdx.scenes.scene2d.Stage access$2(com.pop.star.Scene) -> c
com.pop.star.Scene$1 -> com.pop.star.e:
    com.pop.star.Scene this$0 -> a
    com.badlogic.gdx.utils.Timer val$t -> b
    void run() -> run
com.pop.star.Scene$2 -> com.pop.star.f:
    com.pop.star.Scene this$0 -> a
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.pop.star.Scene$3 -> com.pop.star.g:
    com.pop.star.Scene this$0 -> a
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
    com.pop.star.Scene access$0(com.pop.star.Scene$3) -> a
com.pop.star.Scene$3$1 -> com.pop.star.h:
    com.pop.star.Scene$3 this$1 -> a
    void buttonOK() -> a
    void buttonBack() -> b
com.pop.star.UI.Dialog -> com.pop.star.a.a:
    com.badlogic.gdx.scenes.scene2d.ui.Image imageBack -> a
    com.badlogic.gdx.scenes.scene2d.ui.ImageButton buttonOk -> b
    com.badlogic.gdx.scenes.scene2d.ui.ImageButton buttonBack -> c
    com.badlogic.gdx.scenes.scene2d.ui.TextField textFeild -> d
    com.badlogic.gdx.graphics.g2d.TextureAtlas atlas -> e
    java.lang.String str -> f
com.pop.star.UI.Dialog$1 -> com.pop.star.a.b:
    com.pop.star.UI.Dialog this$0 -> a
    com.pop.star.DialogHanlder val$handler -> b
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.pop.star.UI.Dialog$2 -> com.pop.star.a.c:
    com.pop.star.UI.Dialog this$0 -> a
    com.pop.star.DialogHanlder val$handler -> b
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.pop.star.UI.LoadingGame -> com.pop.star.a.d:
    void render(float) -> render
    void resize(int,int) -> resize
    void show() -> show
    void hide() -> hide
    void pause() -> pause
    void resume() -> resume
    void dispose() -> dispose
com.pop.star.UI.MenuScreen -> com.pop.star.a.e:
    com.badlogic.gdx.scenes.scene2d.ui.Image imageBackground -> a
    com.badlogic.gdx.scenes.scene2d.ui.Image imageTitle -> b
    com.badlogic.gdx.scenes.scene2d.ui.ImageButton buttonBegionGame -> c
    com.badlogic.gdx.scenes.scene2d.ui.ImageButton buttonExit -> d
    com.badlogic.gdx.scenes.scene2d.ui.CheckBox buttonContinue -> e
    com.badlogic.gdx.scenes.scene2d.ui.CheckBox buttonSetting -> f
    com.badlogic.gdx.graphics.g2d.TextureAtlas atlas -> g
    com.badlogic.gdx.scenes.scene2d.Stage stage -> h
    int width -> i
    int height -> j
    com.badlogic.gdx.scenes.scene2d.ui.Label labelCount -> k
    void init() -> a
    void show() -> show
    void render(float) -> render
    void resize(int,int) -> resize
    void hide() -> hide
    void pause() -> pause
    void resume() -> resume
    void dispose() -> dispose
    com.badlogic.gdx.scenes.scene2d.ui.CheckBox access$0(com.pop.star.UI.MenuScreen) -> a
    com.badlogic.gdx.scenes.scene2d.Stage access$1(com.pop.star.UI.MenuScreen) -> b
    com.badlogic.gdx.scenes.scene2d.ui.CheckBox access$2(com.pop.star.UI.MenuScreen) -> c
com.pop.star.UI.MenuScreen$1 -> com.pop.star.a.f:
    com.pop.star.UI.MenuScreen this$0 -> a
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.pop.star.UI.MenuScreen$2 -> com.pop.star.a.g:
    com.pop.star.UI.MenuScreen this$0 -> a
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.pop.star.UI.MenuScreen$3 -> com.pop.star.a.h:
    com.pop.star.UI.MenuScreen this$0 -> a
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.pop.star.UI.MenuScreen$4 -> com.pop.star.a.i:
    com.pop.star.UI.MenuScreen this$0 -> a
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.pop.star.UI.MenuScreen$4$1 -> com.pop.star.a.j:
    com.pop.star.UI.MenuScreen$4 this$1 -> a
    void buttonOK() -> a
    void buttonBack() -> b
com.pop.star.logic.BombStar -> com.pop.star.b.a:
    com.badlogic.gdx.graphics.g2d.TextureRegion region -> a
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void touch() -> a
com.pop.star.logic.BombStar$1 -> com.pop.star.b.b:
    com.pop.star.logic.BombStar this$0 -> a
    void handler() -> a
com.pop.star.logic.BombStar$1$1 -> com.pop.star.b.c:
    com.pop.star.logic.BombStar$1 this$1 -> a
    void handler() -> a
com.pop.star.logic.DestroyLogic -> com.pop.star.b.d:
    com.pop.star.Scene scene -> a
    void checkHasTheSame(int,int,int) -> a
    void checkAllDirection(int,int,int) -> b
    void checkSame(int,int,int) -> c
    void sortStar$4868d30e() -> a
    boolean isAllSameBlocksClear() -> b
    java.util.ArrayList calculateRemainingBlocks() -> c
    void destroyRemainingBlocks(com.pop.star.logic.DestroyLogic$DestroyHandler) -> a
    void destroyOneStar(int,int) -> a
    void destroyStar(int,int) -> c
    void sortIntArray(int[][],int[]) -> a
    void checkBoobSame(int,int) -> b
    com.pop.star.Scene access$0(com.pop.star.logic.DestroyLogic) -> a
com.pop.star.logic.DestroyLogic$1 -> com.pop.star.b.e:
    java.util.ArrayList list -> a
    java.util.Iterator ite -> b
    com.pop.star.logic.DestroyLogic this$0 -> c
    com.pop.star.logic.DestroyLogic$DestroyHandler val$handler -> d
    com.badlogic.gdx.utils.Timer val$timer -> e
    void run() -> run
com.pop.star.logic.DestroyLogic$2 -> com.pop.star.b.f:
    com.pop.star.logic.DestroyLogic this$0 -> a
    int[] val$arOrders -> b
    int compare(java.lang.Object,java.lang.Object) -> compare
com.pop.star.logic.DestroyLogic$DestroyHandler -> com.pop.star.b.g:
    void handler() -> a
com.pop.star.logic.EndLevelHandler -> com.pop.star.b.h:
    void handler() -> a
com.pop.star.logic.LevelEndEffect -> com.pop.star.b.i:
    com.badlogic.gdx.scenes.scene2d.ui.Label labelCurScore -> a
    com.badlogic.gdx.scenes.scene2d.ui.Label labelOverplusScore -> b
    com.badlogic.gdx.scenes.scene2d.ui.Label labelOver -> c
    com.badlogic.gdx.utils.Timer timer -> d
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void act(float) -> act
    com.badlogic.gdx.utils.Timer access$0(com.pop.star.logic.LevelEndEffect) -> a
com.pop.star.logic.LevelEndEffect$1 -> com.pop.star.b.j:
    com.pop.star.logic.LevelEndEffect this$0 -> a
    com.pop.star.logic.EndLevelHandler val$handler -> b
    void run() -> run
com.pop.star.logic.NormalStar -> com.pop.star.b.k:
    com.badlogic.gdx.graphics.g2d.TextureRegion region -> a
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void touch() -> a
com.pop.star.logic.NormalStar$1 -> com.pop.star.b.l:
    com.pop.star.logic.NormalStar this$0 -> a
    void handler() -> a
com.pop.star.logic.NormalStar$1$1 -> com.pop.star.b.m:
    com.pop.star.logic.NormalStar$1 this$1 -> a
    void handler() -> a
com.pop.star.logic.Star -> com.pop.star.b.n:
    int color -> a
    int i -> b
    int j -> c
    com.pop.star.Scene scene -> d
    int getI() -> b
    void setI(int) -> a
    int getJ() -> c
    void setJ(int) -> b
    int getStarColor() -> d
    com.pop.star.Scene getScene() -> e
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
com.pop.star.resource.GameResourceManager -> com.pop.star.c.a:
    com.pop.star.resource.GameResourceManager instance -> a
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> b
    com.pop.star.resource.GameResourceManager getInstance() -> a
    void loadResource() -> b
    com.badlogic.gdx.graphics.g2d.BitmapFont getBitmapFont() -> c
com.pop.star.resource.ResourceManager -> com.pop.star.c.b:
    com.badlogic.gdx.assets.AssetManager assetManager -> a
    boolean updateAssetManager() -> d
    com.badlogic.gdx.graphics.g2d.TextureAtlas getTextureAltas(java.lang.String) -> a
    com.badlogic.gdx.audio.Sound getSound(java.lang.String) -> b
    com.badlogic.gdx.audio.Music getMusic(java.lang.String) -> c
    com.badlogic.gdx.graphics.g2d.ParticleEffect getParticleEffect(java.lang.String) -> d
    void unloadResource() -> e
    void load(java.lang.String,java.lang.Class) -> a
com.pop.star.resource.SoundManager -> com.pop.star.c.c:
    com.badlogic.gdx.audio.Music music -> a
    void playMusicBackGround() -> a
    void stopMusic() -> b
    void playSoundDestroyStar() -> c
    void playSoundLose() -> d
    void playSoundWin() -> e
    void playButtonSelect() -> f
    void playBomb() -> g
    void playSound(java.lang.String) -> a
